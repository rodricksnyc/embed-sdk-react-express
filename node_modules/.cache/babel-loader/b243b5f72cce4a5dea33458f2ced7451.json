{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nlet _ = t => t,\n    _t;\n\nimport React, { forwardRef, useRef } from 'react';\nimport styled from 'styled-components';\nimport { getNextItemFocus, getItems } from '../List/utils';\nimport { useArrowKeyNav, useForkedRef } from '../utils';\nconst TreeCollectionInternal = forwardRef((props, forwardedRef) => {\n  const internalRef = useRef(null);\n\n  const handleKeyDown = event => {\n    const treeItems = getItems(internalRef.current);\n\n    if (event.key === 'Home') {\n      const firstItem = treeItems[0];\n      firstItem && firstItem.focus();\n    } else if (event.key === 'End') {\n      const lastItem = treeItems[treeItems.length - 1];\n      lastItem && lastItem.focus();\n    }\n  };\n\n  const navProps = useArrowKeyNav({\n    axis: 'both',\n    getNextFocus: getNextItemFocus,\n    onKeyDown: handleKeyDown,\n    ref: useForkedRef(internalRef, forwardedRef)\n  });\n  return React.createElement(\"ul\", _extends({\n    role: \"tree\"\n  }, props, navProps));\n});\nexport const TreeCollection = styled(TreeCollectionInternal).withConfig({\n  displayName: \"TreeCollection\",\n  componentId: \"sc-l1fxxy-0\"\n})(_t || (_t = _`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`));","map":{"version":3,"mappings":";;;;;AAOA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,eAA3C;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,UAA7C;AAIA,MAAMC,sBAAsB,GAAGP,UAAU,CACvC,CAACQ,KAAD,EAA6BC,YAA7B,KAAqE;EACnE,MAAMC,WAAW,GAAGT,MAAM,CAAmB,IAAnB,CAA1B;;EAGA,MAAMU,aAAa,GAAIC,KAAiC,IAAK;IAC3D,MAAMC,SAAS,GAAGT,QAAQ,CAACM,WAAW,CAACI,OAAb,CAA1B;;IACA,IAAIF,KAAK,CAACG,GAANH,KAAc,MAAlB,EAA0B;MACxB,MAAMI,SAAS,GAAGH,SAAS,CAAC,CAAD,CAA3B;MACAG,SAAS,IAAIA,SAAS,CAACC,KAAVD,EAAbA;IACD,CAHD,MAGO,IAAIJ,KAAK,CAACG,GAANH,KAAc,KAAlB,EAAyB;MAC9B,MAAMM,QAAQ,GAAGL,SAAS,CAACA,SAAS,CAACM,MAAVN,GAAmB,CAApB,CAA1B;MACAK,QAAQ,IAAIA,QAAQ,CAACD,KAATC,EAAZA;IACF;EACD,CATD;;EAWA,MAAME,QAAQ,GAAGf,cAAc,CAAmB;IAChDgB,IAAI,EAAE,MAD0C;IAEhDC,YAAY,EAAEnB,gBAFkC;IAGhDoB,SAAS,EAAEZ,aAHqC;IAIhDa,GAAG,EAAElB,YAAY,CAACI,WAAD,EAAcD,YAAd;EAJ+B,CAAnB,CAA/B;EAOA,OAAOV;IAAI0B,IAAI,EAAC;EAAT,GAAoBjB,KAApB,EAA+BY,QAA/B,EAAP;AACD,CAxBsC,CAAzC;AA2BA,OAAO,MAAMM,cAAc,GAAGxB,MAAM,CAACK,sBAAD,CAANL,CAA8ByB,UAA9BzB,CAA8B;EAAA0B;EAAAC;AAAA,CAA9B3B,EAA8B4B,aAAC;AAC7D;AACA;AACA;AACA,CAJ4D,CAA9B5B,CAAvB","names":["React","forwardRef","useRef","styled","getNextItemFocus","getItems","useArrowKeyNav","useForkedRef","TreeCollectionInternal","props","forwardedRef","internalRef","handleKeyDown","event","treeItems","current","key","firstItem","focus","lastItem","length","navProps","axis","getNextFocus","onKeyDown","ref","role","TreeCollection","withConfig","displayName","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Tree/TreeCollection.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { CompatibleHTMLProps } from '@looker/design-tokens'\nimport type { KeyboardEvent, Ref } from 'react'\nimport React, { forwardRef, useRef } from 'react'\nimport styled from 'styled-components'\nimport { getNextItemFocus, getItems } from '../List/utils'\nimport { useArrowKeyNav, useForkedRef } from '../utils'\n\nexport type TreeCollectionProps = CompatibleHTMLProps<HTMLUListElement>\n\nconst TreeCollectionInternal = forwardRef(\n  (props: TreeCollectionProps, forwardedRef: Ref<HTMLUListElement>) => {\n    const internalRef = useRef<HTMLUListElement>(null)\n\n    // Additional key shortcuts\n    const handleKeyDown = (event: KeyboardEvent<HTMLElement>) => {\n      const treeItems = getItems(internalRef.current as HTMLElement)\n      if (event.key === 'Home') {\n        const firstItem = treeItems[0]\n        firstItem && firstItem.focus()\n      } else if (event.key === 'End') {\n        const lastItem = treeItems[treeItems.length - 1]\n        lastItem && lastItem.focus()\n      }\n    }\n\n    const navProps = useArrowKeyNav<HTMLUListElement>({\n      axis: 'both',\n      getNextFocus: getNextItemFocus,\n      onKeyDown: handleKeyDown,\n      ref: useForkedRef(internalRef, forwardedRef),\n    })\n\n    return <ul role=\"tree\" {...props} {...navProps} />\n  }\n)\n\nexport const TreeCollection = styled(TreeCollectionInternal)`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`\n"]},"metadata":{},"sourceType":"module"}