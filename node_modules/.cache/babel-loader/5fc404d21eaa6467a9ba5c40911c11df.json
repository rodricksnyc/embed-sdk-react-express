{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport i18next from 'i18next';\nimport enDate from 'date-fns/locale/en-US';\nimport { initReactI18next } from 'react-i18next';\nimport { i18nInitOptions, i18nUpdate } from './i18nInit';\nexport const i18nInitOptionsComponents = _objectSpread(_objectSpread({}, i18nInitOptions), {}, {\n  react: {\n    useSuspense: false\n  }\n});\nlet dateLocale = enDate;\n\nconst setDateLocale = _dateLocale => {\n  if (_dateLocale) {\n    dateLocale = _dateLocale;\n  }\n};\n\nexport const getDateLocale = () => {\n  return dateLocale;\n};\nexport async function i18nInitComponents(_ref) {\n  let {\n    locale,\n    resources,\n    dateLocale\n  } = _ref;\n  setDateLocale(dateLocale);\n\n  if (i18next.isInitialized) {\n    i18nUpdate({\n      locale,\n      resources\n    });\n    return i18next;\n  } else {\n    return i18next.use(initReactI18next).init(_objectSpread(_objectSpread({}, i18nInitOptionsComponents), {}, {\n      lng: locale,\n      resources\n    }));\n  }\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,YAA5C;AAEA,OAAO,MAAMC,yBAAsC,mCAC9CF,eAD8C,GAC/B,EAD+B,EAC/B;EAClBG,KAAK,EAAE;IACLC,WAAW,EAAE;EADR;AADW,CAD+B,CAA5C;AAQP,IAAIC,UAAkB,GAAGP,MAAzB;;AACA,MAAMQ,aAAa,GAAIC,WAAoB,IAAK;EAC9C,IAAIA,WAAJ,EAAiB;IACfF,UAAU,GAAGE,WAAbF;EACF;AACD,CAJD;;AAQA,OAAO,MAAMG,aAAa,GAAG,MAAM;EACjC,OAAOH,UAAP;AACD,CAFM;AAQP,OAAO,eAAeI,kBAAf,OAIyB;EAAA,IAJS;IACvCC,MADuC;IAEvCC,SAFuC;IAGvCN;EAHuC,CAIT;EAC9BC,aAAa,CAACD,UAAD,CAAbC;;EACA,IAAIT,OAAO,CAACe,aAAZ,EAA2B;IACzBX,UAAU,CAAC;MAAES,MAAF;MAAUC;IAAV,CAAD,CAAVV;IACA,OAAOJ,OAAP;EACD,CAHD,MAGO;IACL,OAAOA,OAAO,CAACgB,GAARhB,CAAYE,gBAAZF,EAA8BiB,IAA9BjB,CAAkCkB,gCACpCb,yBADoC,GACX,EADW,EACX;MAC5Bc,GAAG,EAAEN,MADuB;MAE5BC;IAF4B,CADW,CAAlCd,CAAP;EAKF;AACF","names":["i18next","enDate","initReactI18next","i18nInitOptions","i18nUpdate","i18nInitOptionsComponents","react","useSuspense","dateLocale","setDateLocale","_dateLocale","getDateLocale","i18nInitComponents","locale","resources","isInitialized","use","init","_objectSpread","lng"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/i18n/src/i18nInitComponents.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport i18next from 'i18next'\nimport enDate from 'date-fns/locale/en-US'\nimport type { InitOptions } from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport type { I18nStateWithDates } from './types'\nimport { i18nInitOptions, i18nUpdate } from './i18nInit'\n\nexport const i18nInitOptionsComponents: InitOptions = {\n  ...i18nInitOptions,\n  react: {\n    useSuspense: false,\n  },\n}\n\n// Set and get the current date locale, defaults to English/US\nlet dateLocale: Locale = enDate\nconst setDateLocale = (_dateLocale?: Locale) => {\n  if (_dateLocale) {\n    dateLocale = _dateLocale\n  }\n}\n/**\n * @returns the current date-fns locale module (defaults to en-US)\n */\nexport const getDateLocale = () => {\n  return dateLocale\n}\n\n/**\n * Directly initialize the localization instance\n * (not needed if using ComponentsProvider)\n */\nexport async function i18nInitComponents({\n  locale,\n  resources,\n  dateLocale,\n}: Partial<I18nStateWithDates>) {\n  setDateLocale(dateLocale)\n  if (i18next.isInitialized) {\n    i18nUpdate({ locale, resources })\n    return i18next\n  } else {\n    return i18next.use(initReactI18next).init({\n      ...i18nInitOptionsComponents,\n      lng: locale,\n      resources,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}