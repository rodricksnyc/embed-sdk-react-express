{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"isVisible\"];\nimport React, { forwardRef } from 'react';\nimport { Box } from '../../../../Layout';\nexport const ComboboxWrapper = forwardRef((_ref, ref) => {\n  let {\n    isVisible\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(Box, _extends({}, rest, {\n    ref: ref,\n    role: rest.role ? rest.role : 'combobox',\n    \"aria-haspopup\": \"true\",\n    \"aria-owns\": isVisible ? `listbox-${rest.id}` : undefined,\n    \"aria-label\": `${rest.wrapperAriaLabel || ''} combobox`,\n    \"aria-expanded\": isVisible\n  }));\n});","map":{"version":3,"mappings":";;;AAaA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,GAAT,QAAoB,oBAApB;AAiBA,OAAO,MAAMC,eAAe,GAAGF,UAAU,CACvC,OAOEG,GAPF,KAQK;EAAA,IAPH;IACEC;EADF,IAKCC,IAEE;EAAA,IALEC,IAAI,4CAKN;;EACH,OACEP,oBAACE,GAAD,EAAIM,aACED,IADF,EACM;IACRH,GAAG,EAAEA,GADG;IAERK,IAAI,EAAEF,IAAI,CAACE,IAALF,GAAYA,IAAI,CAACE,IAAjBF,GAAwB,UAFtB;IAGR,iBAAc,MAHN;IAIR,aAAWF,SAAS,GAAI,WAAUE,IAAI,CAACG,EAAG,EAAtB,GAA0BC,SAJtC;IAKR,cAAa,GAAEJ,IAAI,CAACK,gBAALL,IAAyB,EAAG,WALnC;IAMR,iBAAeF;EANP,CADN,CAAJ,CADF;AAWD,CArBsC,CAAlC","names":["React","forwardRef","Box","ComboboxWrapper","ref","isVisible","_ref","rest","_extends","role","id","undefined","wrapperAriaLabel"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Inputs/Combobox/ComboboxWrapper/ComboboxWrapper.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type {\n  CompatibleHTMLProps,\n  FlexboxProps,\n  LayoutProps,\n  TypographyProps,\n  SpaceProps,\n} from '@looker/design-tokens'\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport { Box } from '../../../../Layout'\n\nexport interface ComboboxWrapperProps\n  extends FlexboxProps,\n    Omit<LayoutProps, 'size'>,\n    SpaceProps,\n    TypographyProps,\n    Omit<\n      CompatibleHTMLProps<HTMLDivElement>,\n      'readOnly' | 'onChange' | 'value' | 'defaultValue'\n    > {\n  /**\n   * The optional a11y aria label for combobox Wrapper element that has popup\n   */\n  wrapperAriaLabel?: string\n}\n\nexport const ComboboxWrapper = forwardRef(\n  (\n    {\n      isVisible,\n      ...rest\n    }: ComboboxWrapperProps & {\n      isVisible: boolean\n    },\n    ref: Ref<HTMLDivElement>\n  ) => {\n    return (\n      <Box\n        {...rest}\n        ref={ref}\n        role={rest.role ? rest.role : 'combobox'}\n        aria-haspopup=\"true\"\n        aria-owns={isVisible ? `listbox-${rest.id}` : undefined}\n        aria-label={`${rest.wrapperAriaLabel || ''} combobox`}\n        aria-expanded={isVisible}\n      />\n    )\n  }\n)\n"]},"metadata":{},"sourceType":"module"}