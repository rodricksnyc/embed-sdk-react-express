{"ast":null,"code":"import React from 'react';\nimport { Checkbox } from '../../Form';\nimport { ItemTarget } from './ItemTarget';\nexport const checkListProps = ['checked', 'disabled', 'onChange', 'id'];\nexport const DataTableCheckbox = _ref => {\n  let {\n    id,\n    onChange,\n    checked,\n    disabled\n  } = _ref;\n\n  const handleCellOnClick = () => !disabled && onChange && onChange();\n\n  const handleOnKeyDown = event => event.key === 'Enter' && event.currentTarget.click();\n\n  let ariaLabel = 'Select all rows';\n\n  if (id !== 'headerId') {\n    ariaLabel = undefined;\n  } else if (checked) {\n    ariaLabel = 'Select none';\n  }\n\n  return React.createElement(ItemTarget, {\n    \"aria-labelledby\": `rowheader-${id}`,\n    onClick: handleCellOnClick\n  }, React.createElement(Checkbox, {\n    \"aria-label\": ariaLabel,\n    checked: checked,\n    disabled: disabled,\n    onKeyDown: handleOnKeyDown,\n    tabIndex: -1\n  }));\n};","map":{"version":3,"mappings":"AAKA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AASA,OAAO,MAAMC,cAAc,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,IAApC,CAAvB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,QAKH;EAAA,IALI;IAChCC,EADgC;IAEhCC,QAFgC;IAGhCC,OAHgC;IAIhCC;EAJgC,CAKJ;;EAC5B,MAAMC,iBAAiB,GAAG,MAAM,CAACD,QAAD,IAAaF,QAAb,IAAyBA,QAAQ,EAAjE;;EACA,MAAMI,eAAe,GAAIC,KAA4C,IACnEA,KAAK,CAACC,GAAND,KAAc,OAAdA,IAAyBA,KAAK,CAACE,aAANF,CAAoBG,KAApBH,EAD3B;;EAGA,IAAII,SAA6B,GAAG,iBAApC;;EACA,IAAIV,EAAE,KAAK,UAAX,EAAuB;IACrBU,SAAS,GAAGC,SAAZD;EACD,CAFD,MAEO,IAAIR,OAAJ,EAAa;IAClBQ,SAAS,GAAG,aAAZA;EACF;;EAEA,OACEf,oBAACE,UAAD,EAAW;IAAC,mBAAkB,aAAYG,EAAG,EAAlC;IAAqCY,OAAO,EAAER;EAA9C,CAAX,EACET,oBAACC,QAAD,EAAS;IACP,cAAYc,SADL;IAEPR,OAAO,EAAEA,OAFF;IAGPC,QAAQ,EAAEA,QAHH;IAIPU,SAAS,EAAER,eAJJ;IAKPS,QAAQ,EAAE,CAAC;EALJ,CAAT,CADF,CADF;AAWD,CA5BM","names":["React","Checkbox","ItemTarget","checkListProps","DataTableCheckbox","id","onChange","checked","disabled","handleCellOnClick","handleOnKeyDown","event","key","currentTarget","click","ariaLabel","undefined","onClick","onKeyDown","tabIndex"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/DataTable/Item/DataTableCheckbox.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { MixedBoolean } from '../../Form'\nimport { Checkbox } from '../../Form'\nimport { ItemTarget } from './ItemTarget'\n\nexport interface DataTableCheckboxProps {\n  id?: string\n  checked?: MixedBoolean\n  disabled?: boolean\n  onChange?: () => void\n}\n\nexport const checkListProps = ['checked', 'disabled', 'onChange', 'id']\n\nexport const DataTableCheckbox = ({\n  id,\n  onChange,\n  checked,\n  disabled,\n}: DataTableCheckboxProps) => {\n  const handleCellOnClick = () => !disabled && onChange && onChange()\n  const handleOnKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) =>\n    event.key === 'Enter' && event.currentTarget.click()\n\n  let ariaLabel: string | undefined = 'Select all rows'\n  if (id !== 'headerId') {\n    ariaLabel = undefined\n  } else if (checked) {\n    ariaLabel = 'Select none'\n  }\n\n  return (\n    <ItemTarget aria-labelledby={`rowheader-${id}`} onClick={handleCellOnClick}>\n      <Checkbox\n        aria-label={ariaLabel}\n        checked={checked}\n        disabled={disabled}\n        onKeyDown={handleOnKeyDown}\n        tabIndex={-1}\n      />\n    </ItemTarget>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}