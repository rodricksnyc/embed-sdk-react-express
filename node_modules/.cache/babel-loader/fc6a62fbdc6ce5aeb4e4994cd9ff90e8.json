{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nlet _ = t => t,\n    _t;\n\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useID } from '../../../utils';\nimport { useFormContext } from '../../Form';\nimport { Checkbox } from '../../Inputs/Checkbox/Checkbox';\nimport { FieldInline, omitFieldProps, pickFieldProps } from '../Field';\nconst FieldCheckboxLayout = forwardRef((props, ref) => {\n  const validationMessage = useFormContext(props);\n  const id = useID(props.id);\n  return React.createElement(FieldInline, _extends({}, pickFieldProps(props), {\n    validationMessage: validationMessage,\n    id: id\n  }), React.createElement(Checkbox, _extends({}, omitFieldProps(props), {\n    \"aria-describedby\": `describedby-${id}`,\n    id: id,\n    validationType: validationMessage && validationMessage.type || props.validationType,\n    ref: ref\n  })));\n});\nFieldCheckboxLayout.displayName = 'FieldCheckboxLayout';\nexport const FieldCheckbox = styled(FieldCheckboxLayout).withConfig({\n  displayName: \"FieldCheckbox\",\n  componentId: \"sc-xffymf-0\"\n})(_t || (_t = _``));","map":{"version":3,"mappings":";;;;;AAMA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,SAASC,QAAT,QAAyB,gCAAzB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,cAAtC,QAA4D,UAA5D;AAKA,MAAMC,mBAAmB,GAAGR,UAAU,CACpC,CAACS,KAAD,EAA4BC,GAA5B,KAA2D;EACzD,MAAMC,iBAAiB,GAAGR,cAAc,CAACM,KAAD,CAAxC;EACA,MAAMG,EAAE,GAAGV,KAAK,CAACO,KAAK,CAACG,EAAP,CAAhB;EACA,OACEb,oBAACM,WAAD,EAAYQ,aACNN,cAAc,CAACE,KAAD,CADR,EACe;IACzBE,iBAAiB,EAAEA,iBADM;IAEzBC,EAAE,EAAEA;EAFqB,CADf,CAAZ,EAKEb,oBAACK,QAAD,EAASS,aACHP,cAAc,CAACG,KAAD,CADX,EACkB;IACzB,oBAAmB,eAAcG,EAAG,EADX;IAEzBA,EAAE,EAAEA,EAFqB;IAGzBE,cAAc,EACXH,iBAAiB,IAAIA,iBAAiB,CAACI,IAAvCJ,IACDF,KAAK,CAACK,cALiB;IAOzBJ,GAAG,EAAEA;EAPoB,CADlB,CAAT,CALF,CADF;AAkBD,CAtBmC,CAAtC;AAyBAF,mBAAmB,CAACQ,WAApBR,GAAkC,qBAAlCA;AAEA,OAAO,MAAMS,aAAa,GAAGhB,MAAM,CAACO,mBAAD,CAANP,CAA2BiB,UAA3BjB,CAA2B;EAAAe;EAAAG;AAAA,CAA3BlB,EAA2BmB,aAAC,EAAD,CAA3BnB,CAAtB","names":["React","forwardRef","styled","useID","useFormContext","Checkbox","FieldInline","omitFieldProps","pickFieldProps","FieldCheckboxLayout","props","ref","validationMessage","id","_extends","validationType","type","displayName","FieldCheckbox","withConfig","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Fields/FieldCheckbox/FieldCheckbox.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { useID } from '../../../utils'\nimport { useFormContext } from '../../Form'\nimport type { CheckboxProps } from '../../Inputs/Checkbox/Checkbox'\nimport { Checkbox } from '../../Inputs/Checkbox/Checkbox'\nimport { FieldInline, omitFieldProps, pickFieldProps } from '../Field'\nimport type { FieldBaseProps } from '../Field'\n\nexport interface FieldCheckboxProps extends CheckboxProps, FieldBaseProps {}\n\nconst FieldCheckboxLayout = forwardRef(\n  (props: FieldCheckboxProps, ref: Ref<HTMLInputElement>) => {\n    const validationMessage = useFormContext(props)\n    const id = useID(props.id)\n    return (\n      <FieldInline\n        {...pickFieldProps(props)}\n        validationMessage={validationMessage}\n        id={id}\n      >\n        <Checkbox\n          {...omitFieldProps(props)}\n          aria-describedby={`describedby-${id}`}\n          id={id}\n          validationType={\n            (validationMessage && validationMessage.type) ||\n            props.validationType\n          }\n          ref={ref}\n        />\n      </FieldInline>\n    )\n  }\n)\n\nFieldCheckboxLayout.displayName = 'FieldCheckboxLayout'\n\nexport const FieldCheckbox = styled(FieldCheckboxLayout)``\n"]},"metadata":{},"sourceType":"module"}