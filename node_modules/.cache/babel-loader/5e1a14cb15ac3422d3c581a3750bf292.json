{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { useDialog } from '../Dialog/useDialog';\nimport { DrawerSurface } from './DrawerSurface';\nexport const useDrawer = _ref => {\n  let props = _extends({}, (_objectDestructuringEmpty(_ref), _ref));\n\n  return useDialog(_objectSpread({\n    Surface: DrawerSurface\n  }, props));\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,SAASA,SAAT,QAA0B,qBAA1B;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AAMA,OAAO,MAAMC,SAAS,GAAGC;EAAA,IAAMC,KAAK,wDAAX;;EAAW,OAClCJ,SAAS;IAAGK,OAAO,EAAEJ;EAAZ,GAA8BG,KAA9B,EADyB;AACa,CAD1C","names":["useDialog","DrawerSurface","useDrawer","_ref","props","Surface"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Drawer/useDrawer.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { UseDialogBaseProps } from '../Dialog/useDialog'\nimport { useDialog } from '../Dialog/useDialog'\nimport type { DrawerSurfaceProps } from './DrawerSurface'\nimport { DrawerSurface } from './DrawerSurface'\n\nexport interface UseDrawerProps\n  extends UseDialogBaseProps,\n    DrawerSurfaceProps {}\n\nexport const useDrawer = ({ ...props }: UseDrawerProps) =>\n  useDialog({ Surface: DrawerSurface, ...props })\n"]},"metadata":{},"sourceType":"module"}