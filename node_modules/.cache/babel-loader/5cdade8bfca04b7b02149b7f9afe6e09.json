{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"fullRender\", \"index\", \"setItemPosition\", \"date\", \"locale\"];\nimport { getYear } from 'date-fns';\nimport React, { useCallback } from 'react';\nimport { useTheme } from 'styled-components';\nimport { Grid, SpaceVertical } from '../Layout';\nimport { Span } from '../Text';\nimport { MonthPicker } from './MonthPicker';\nimport { confirmToday } from './utils/dateConfirmations';\nexport const Year = _ref => {\n  let {\n    fullRender,\n    index,\n    setItemPosition,\n    date,\n    locale\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const ref = useCallback(element => {\n    if (element) {\n      setItemPosition(index, element);\n    }\n  }, [setItemPosition, index]);\n  const {\n    space\n  } = useTheme();\n  const height = `calc(${space.u7} * 3 + ${space.u3} * 2)`;\n  return React.createElement(SpaceVertical, {\n    py: \"u3\",\n    px: \"u4\",\n    gap: \"u5\",\n    ref: ref\n  }, React.createElement(Span, {\n    fontSize: \"small\",\n    color: \"text5\",\n    fontWeight: \"bold\"\n  }, getYear(date)), React.createElement(Grid, {\n    columns: 4,\n    gap: \"u3\",\n    height: height\n  }, fullRender && [...Array(12)].map((_, i) => {\n    return React.createElement(MonthPicker, _extends({\n      isTodaysMonth: confirmToday(i),\n      key: i,\n      monthNumber: i,\n      date: date,\n      locale: locale\n    }, props));\n  })));\n};","map":{"version":3,"mappings":";;;AAKA,SAASA,OAAT,QAAwB,UAAxB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,WAApC;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,YAAT,QAA6B,2BAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGC,QAOH;EAAA,IAPI;IACnBC,UADmB;IAEnBC,KAFmB;IAGnBC,eAHmB;IAInBC,IAJmB;IAKnBC;EALmB,IAOTL,IAAK;EAAA,IADZM,KAAK,4CACO;;EAGf,MAAMC,GAAG,GAAGf,WAAW,CACpBgB,OAA2B,IAAK;IAC/B,IAAIA,OAAJ,EAAa;MACXL,eAAe,CAACD,KAAD,EAAQM,OAAR,CAAfL;IACF;EACD,CALoB,EAMrB,CAACA,eAAD,EAAkBD,KAAlB,CANqB,CAAvB;EASA,MAAM;IAAEO;EAAF,IAAYhB,QAAQ,EAA1B;EACA,MAAMiB,MAAM,GAAI,QAAOD,KAAK,CAACE,EAAG,UAASF,KAAK,CAACG,EAAG,OAAlD;EAEA,OACErB,oBAACI,aAAD,EAAc;IAACkB,EAAE,EAAC,IAAJ;IAASC,EAAE,EAAC,IAAZ;IAAiBC,GAAG,EAAC,IAArB;IAA0BR,GAAG,EAAEA;EAA/B,CAAd,EACEhB,oBAACK,IAAD,EAAK;IAACoB,QAAQ,EAAC,OAAV;IAAkBC,KAAK,EAAC,OAAxB;IAAgCC,UAAU,EAAC;EAA3C,CAAL,EACG5B,OAAO,CAACc,IAAD,CADV,CADF,EAIEb,oBAACG,IAAD,EAAK;IAACyB,OAAO,EAAE,CAAV;IAAaJ,GAAG,EAAC,IAAjB;IAAsBL,MAAM,EAAEA;EAA9B,CAAL,EACGT,UAAU,IACT,CAAC,GAAGmB,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC3B,OACEhC,oBAACM,WAAD,EAAY2B;MACVC,aAAa,EAAE3B,YAAY,CAACyB,CAAD,CADjB;MAEVG,GAAG,EAAEH,CAFK;MAGVI,WAAW,EAAEJ,CAHH;MAIVnB,IAAI,EAAEA,IAJI;MAKVC,MAAM,EAAEA;IALE,GAMNC,KANM,CAAZ,CADF;EAUD,CAXD,CAFJ,CAJF,CADF;AAsBD,CA5CM","names":["getYear","React","useCallback","useTheme","Grid","SpaceVertical","Span","MonthPicker","confirmToday","Year","_ref","fullRender","index","setItemPosition","date","locale","props","ref","element","space","height","u7","u3","py","px","gap","fontSize","color","fontWeight","columns","Array","map","_","i","_extends","isTodaysMonth","key","monthNumber"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Calendar/Year.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { getYear } from 'date-fns'\nimport React, { useCallback } from 'react'\nimport { useTheme } from 'styled-components'\nimport { Grid, SpaceVertical } from '../Layout'\nimport { Span } from '../Text'\nimport { MonthPicker } from './MonthPicker'\nimport type { ScrollableDateListItemProps, YearBaseProps } from './types'\nimport { confirmToday } from './utils/dateConfirmations'\n\nexport type YearProps = YearBaseProps & ScrollableDateListItemProps\n\nexport const Year = ({\n  fullRender,\n  index,\n  setItemPosition,\n  date,\n  locale,\n  ...props\n}: YearProps) => {\n  // Calls setItemPosition to store the current child's position\n  // in the parent list\n  const ref = useCallback(\n    (element: HTMLElement | null) => {\n      if (element) {\n        setItemPosition(index, element)\n      }\n    },\n    [setItemPosition, index]\n  )\n\n  const { space } = useTheme()\n  const height = `calc(${space.u7} * 3 + ${space.u3} * 2)`\n\n  return (\n    <SpaceVertical py=\"u3\" px=\"u4\" gap=\"u5\" ref={ref}>\n      <Span fontSize=\"small\" color=\"text5\" fontWeight=\"bold\">\n        {getYear(date)}\n      </Span>\n      <Grid columns={4} gap=\"u3\" height={height}>\n        {fullRender &&\n          [...Array(12)].map((_, i) => {\n            return (\n              <MonthPicker\n                isTodaysMonth={confirmToday(i)}\n                key={i}\n                monthNumber={i}\n                date={date}\n                locale={locale}\n                {...props}\n              />\n            )\n          })}\n      </Grid>\n    </SpaceVertical>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}