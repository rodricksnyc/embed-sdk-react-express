{"ast":null,"code":"import { useRef, useEffect, useState } from 'react';\nexport const useSyncedState = prop => {\n  const [state, setState] = useState(prop);\n  const isMountedRef = useRef(false);\n  useEffect(() => {\n    if (isMountedRef.current) {\n      setState(prop);\n    }\n\n    isMountedRef.current = true;\n  }, [prop]);\n  return [state, setState];\n};","map":{"version":3,"mappings":"AAMA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AAOA,OAAO,MAAMC,cAAc,GACzBC,IAAO,IAC8B;EACrC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,IAAD,CAAlC;EACA,MAAMG,YAAY,GAAGP,MAAM,CAAC,KAAD,CAA3B;EACAC,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,CAACC,OAAjB,EAA0B;MACxBF,QAAQ,CAACF,IAAD,CAARE;IACF;;IACAC,YAAY,CAACC,OAAbD,GAAuB,IAAvBA;EACD,CALQ,EAKN,CAACH,IAAD,CALM,CAATH;EAMA,OAAO,CAACI,KAAD,EAAQC,QAAR,CAAP;AACD,CAZM","names":["useRef","useEffect","useState","useSyncedState","prop","state","setState","isMountedRef","current"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/utils/useSyncedState.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Dispatch, SetStateAction } from 'react'\nimport { useRef, useEffect, useState } from 'react'\n\n/**\n * A version of useState that is synced with a prop\n * @param prop The prop to sync state to\n * @returns the current state value\n */\nexport const useSyncedState = <S>(\n  prop: S\n): [S, Dispatch<SetStateAction<S>>] => {\n  const [state, setState] = useState(prop)\n  const isMountedRef = useRef(false)\n  useEffect(() => {\n    if (isMountedRef.current) {\n      setState(prop)\n    }\n    isMountedRef.current = true\n  }, [prop])\n  return [state, setState]\n}\n"]},"metadata":{},"sourceType":"module"}