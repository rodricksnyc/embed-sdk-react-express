{"ast":null,"code":"import { listItemColorAppliesToLabel, listItemColorOptions } from '../types';\n\nconst listItemColor = (color, disabled, defaultColor) => {\n  if (disabled) {\n    return 'text1';\n  } else if (color) {\n    if (listItemColorAppliesToLabel.includes(color)) {\n      return color;\n    } else if (!listItemColorOptions.includes(color)) {\n      return color;\n    }\n  }\n\n  return defaultColor;\n};\n\nexport const listItemIconColor = (color, disabled) => listItemColor(color, disabled, 'text2');\nexport const listItemLabelColor = (color, disabled) => listItemColor(color, disabled, 'text5');","map":{"version":3,"mappings":"AAMA,SAASA,2BAAT,EAAsCC,oBAAtC,QAAkE,UAAlE;;AAEA,MAAMC,aAAa,GAAG,CACpBC,KADoB,EAEpBC,QAFoB,EAGpBC,YAHoB,KAIjB;EACH,IAAID,QAAJ,EAAc;IACZ,OAAO,OAAP;EACD,CAFD,MAEO,IAAID,KAAJ,EAAW;IAChB,IAAIH,2BAA2B,CAACM,QAA5BN,CAAqCG,KAArCH,CAAJ,EAAiD;MAE/C,OAAOG,KAAP;IACD,CAHD,MAGO,IAAI,CAACF,oBAAoB,CAACK,QAArBL,CAA8BE,KAA9BF,CAAL,EAA2C;MAEhD,OAAOE,KAAP;IACF;EACF;;EACA,OAAOE,YAAP;AACD,CAjBD;;AAmBA,OAAO,MAAME,iBAAiB,GAAG,CAACJ,KAAD,EAAwBC,QAAxB,KAC/BF,aAAa,CAACC,KAAD,EAAQC,QAAR,EAAkB,OAAlB,CADR;AAGP,OAAO,MAAMI,kBAAkB,GAAG,CAACL,KAAD,EAAwBC,QAAxB,KAChCF,aAAa,CAACC,KAAD,EAAQC,QAAR,EAAkB,OAAlB,CADR","names":["listItemColorAppliesToLabel","listItemColorOptions","listItemColor","color","disabled","defaultColor","includes","listItemIconColor","listItemLabelColor"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/ListItem/utils/listItemColor.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ListItemColor } from '../types'\nimport { listItemColorAppliesToLabel, listItemColorOptions } from '../types'\n\nconst listItemColor = (\n  color?: ListItemColor,\n  disabled?: boolean,\n  defaultColor?: string\n) => {\n  if (disabled) {\n    return 'text1'\n  } else if (color) {\n    if (listItemColorAppliesToLabel.includes(color)) {\n      // Theme \"slot\" & color is applied to label\n      return color\n    } else if (!listItemColorOptions.includes(color)) {\n      // HTML color\n      return color\n    }\n  }\n  return defaultColor\n}\n\nexport const listItemIconColor = (color?: ListItemColor, disabled?: boolean) =>\n  listItemColor(color, disabled, 'text2')\n\nexport const listItemLabelColor = (color?: ListItemColor, disabled?: boolean) =>\n  listItemColor(color, disabled, 'text5')\n"]},"metadata":{},"sourceType":"module"}