{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useTheme } from 'styled-components';\nexport const fontFacesCSS = fontSources => fontSources.map(_ref => {\n  let {\n    face,\n    url\n  } = _ref;\n  return face ? fontFace(face, url) : importFont(url);\n}).join('\\n');\nexport const importFont = url => `\n@import url(${url});`;\nexport const fontFace = (face, url) => `\n@font-face {\n  font-family: ${face};\n  src: url('${url}');\n}`;\nexport const FontFaceLoader = () => {\n  const {\n    fontSources\n  } = useTheme();\n  const css = useMemo(() => {\n    if (fontSources && fontSources.length > 0) {\n      return fontFacesCSS(fontSources);\n    } else {\n      return null;\n    }\n  }, [fontSources]);\n  return css === null ? null : React.createElement(Helmet, null, React.createElement(\"style\", {\n    type: \"text/css\"\n  }, css));\n};","map":{"version":3,"mappings":"AAKA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAGA,OAAO,MAAMC,YAAY,GAAIC,WAAwB,IACnDA,WAAW,CACRC,GADHD,CACO;EAAA,IAAC;IAAEE,IAAF;IAAQC;EAAR,CAAD;EAAA,OAAoBD,IAAI,GAAGE,QAAQ,CAACF,IAAD,EAAOC,GAAP,CAAX,GAAyBE,UAAU,CAACF,GAAD,CAA3D;AAAA,CADPH,EAEGM,IAFHN,CAEQ,IAFRA,CADK;AAKP,OAAO,MAAMK,UAAU,GAAIF,GAAW,IAAM;AAC5C,cAAcA,GAAI,IADX;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAACF,IAAD,EAAeC,GAAf,KAAgC;AACxD;AACA,iBAAiBD,IAAK;AACtB,cAAcC,GAAI;AAClB,EAJO;AAUP,OAAO,MAAMI,cAAc,GAAG,MAAM;EAClC,MAAM;IAAEP;EAAF,IAAkBF,QAAQ,EAAhC;EAEA,MAAMU,GAAG,GAAGZ,OAAO,CAAC,MAAM;IACxB,IAAII,WAAW,IAAIA,WAAW,CAACS,MAAZT,GAAqB,CAAxC,EAA2C;MACzC,OAAOD,YAAY,CAACC,WAAD,CAAnB;IACD,CAFD,MAEO;MACL,OAAO,IAAP;IACF;EACD,CANkB,EAMhB,CAACA,WAAD,CANgB,CAAnB;EAQA,OAAOQ,GAAG,KAAK,IAARA,GAAe,IAAfA,GACLb,oBAACE,MAAD,EAAO,IAAP,EACEF;IAAOe,IAAI,EAAC;EAAZ,GAAwBF,GAAxB,CADF,CADF;AAKD,CAhBM","names":["React","useMemo","Helmet","useTheme","fontFacesCSS","fontSources","map","face","url","fontFace","importFont","join","FontFaceLoader","css","length","type"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components-providers/src/FontFaceLoader/FontFaceLoader.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useMemo } from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { useTheme } from 'styled-components'\nimport type { FontSources } from '@looker/design-tokens'\n\nexport const fontFacesCSS = (fontSources: FontSources) =>\n  fontSources\n    .map(({ face, url }) => (face ? fontFace(face, url) : importFont(url)))\n    .join('\\n')\n\nexport const importFont = (url: string) => `\n@import url(${url});`\n\nexport const fontFace = (face: string, url: string) => `\n@font-face {\n  font-family: ${face};\n  src: url('${url}');\n}`\n\n/**\n * FontFaceLoader injects font @font-face imports into a style tag on the page's <HEAD>\n * Font sources are determined using the fontSources key on the theme\n */\nexport const FontFaceLoader = () => {\n  const { fontSources } = useTheme()\n\n  const css = useMemo(() => {\n    if (fontSources && fontSources.length > 0) {\n      return fontFacesCSS(fontSources)\n    } else {\n      return null\n    }\n  }, [fontSources])\n\n  return css === null ? null : (\n    <Helmet>\n      <style type=\"text/css\">{css}</style>\n    </Helmet>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}