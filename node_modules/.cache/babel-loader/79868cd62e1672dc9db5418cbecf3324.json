{"ast":null,"code":"import { i18nInitComponents } from '@looker/i18n';\nimport i18next from 'i18next';\nimport { useEffect } from 'react';\nexport const useI18n = _ref => {\n  let {\n    dateLocale,\n    locale,\n    resources\n  } = _ref;\n\n  if (!i18next.isInitialized) {\n    i18nInitComponents({\n      dateLocale,\n      locale,\n      resources\n    });\n  }\n\n  useEffect(() => {\n    const update = () => i18nInitComponents({\n      dateLocale,\n      locale,\n      resources\n    });\n\n    if (i18next.isInitialized) {\n      update();\n    } else {\n      i18next.on('initialized', update);\n    }\n\n    return () => {\n      i18next.off('initialized', update);\n    };\n  }, [dateLocale, locale, resources]);\n};","map":{"version":3,"mappings":"AAKA,SAASA,kBAAT,QAAmC,cAAnC;AAEA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAIA,OAAO,MAAMC,OAAO,GAAG,QAAqD;EAAA,IAApD;IAAEC,UAAF;IAAcC,MAAd;IAAsBC;EAAtB,CAAoD;;EAC1E,IAAI,CAACL,OAAO,CAACM,aAAb,EAA4B;IAC1BP,kBAAkB,CAAC;MAAEI,UAAF;MAAcC,MAAd;MAAsBC;IAAtB,CAAD,CAAlBN;EACF;;EAEAE,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAG,MAAMR,kBAAkB,CAAC;MAAEI,UAAF;MAAcC,MAAd;MAAsBC;IAAtB,CAAD,CAAvC;;IACA,IAAIL,OAAO,CAACM,aAAZ,EAA2B;MACzBC,MAAM;IACP,CAFD,MAEO;MACLP,OAAO,CAACQ,EAARR,CAAW,aAAXA,EAA0BO,MAA1BP;IACF;;IACA,OAAO,MAAM;MACXA,OAAO,CAACS,GAART,CAAY,aAAZA,EAA2BO,MAA3BP;IACD,CAFD;EAGD,CAVQ,EAUN,CAACG,UAAD,EAAaC,MAAb,EAAqBC,SAArB,CAVM,CAATJ;AAWD,CAhBM","names":["i18nInitComponents","i18next","useEffect","useI18n","dateLocale","locale","resources","isInitialized","update","on","off"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components-providers/src/I18n/useI18n.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { i18nInitComponents } from '@looker/i18n'\nimport type { I18nStateWithDates } from '@looker/i18n'\nimport i18next from 'i18next'\nimport { useEffect } from 'react'\n\nexport type UseI18nProps = Partial<I18nStateWithDates>\n\nexport const useI18n = ({ dateLocale, locale, resources }: UseI18nProps) => {\n  if (!i18next.isInitialized) {\n    i18nInitComponents({ dateLocale, locale, resources })\n  }\n\n  useEffect(() => {\n    const update = () => i18nInitComponents({ dateLocale, locale, resources })\n    if (i18next.isInitialized) {\n      update()\n    } else {\n      i18next.on('initialized', update)\n    }\n    return () => {\n      i18next.off('initialized', update)\n    }\n  }, [dateLocale, locale, resources])\n}\n"]},"metadata":{},"sourceType":"module"}