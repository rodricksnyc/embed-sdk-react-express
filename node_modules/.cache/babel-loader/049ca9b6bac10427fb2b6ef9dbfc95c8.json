{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nlet _ = t => t,\n    _t;\n\nconst _excluded = [\"main\", \"children\"];\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { commonLayoutCSS } from '../../utils/common';\nimport { OverflowShadow, useOverflow } from '../../../utils';\nconst SectionLayout = forwardRef((_ref, forwardedRef) => {\n  let {\n    main,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const [hasOverflow, ref] = useOverflow(forwardedRef);\n  return React.createElement(OverflowShadow, _extends({\n    as: main ? 'main' : 'section',\n    hasOverflow: hasOverflow,\n    ref: ref\n  }, props), children);\n});\nSectionLayout.displayName = 'SectionLayout';\nexport const Section = styled(SectionLayout).withConfig({\n  displayName: \"Section\",\n  componentId: \"sc-1ud6x2v-0\"\n})(_t || (_t = _`\n  ${0}\n  flex: 1 0 auto;\n  overflow: auto;\n  ${0}\n`), commonLayoutCSS, _ref2 => {\n  let {\n    scrollWithin\n  } = _ref2;\n  return scrollWithin && 'height: fit-content;';\n});","map":{"version":3,"mappings":";;;;;;;AAOA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,gBAA5C;AAkBA,MAAMC,aAAa,GAAGL,UAAU,CAC9B,OAEEM,YAFF,KAGK;EAAA,IAFH;IAAEC,IAAF;IAAQC;EAAR,IAA0CC,IAEvC;EAAA,IAFkBC,KAAK,4CAEvB;;EACH,MAAM,CAACC,WAAD,EAAcC,GAAd,IAAqBR,WAAW,CAACE,YAAD,CAAtC;EACA,OACEP,oBAACI,cAAD,EAAeU;IACbC,EAAE,EAAEP,IAAI,GAAG,MAAH,GAAY,SADP;IAEbI,WAAW,EAAEA,WAFA;IAGbC,GAAG,EAAEA;EAHQ,GAITF,KAJS,CAAf,EAMGF,QANH,CADF;AAUD,CAhB6B,CAAhC;AAmBAH,aAAa,CAACU,WAAdV,GAA4B,eAA5BA;AAEA,OAAO,MAAMW,OAAO,GAAGf,MAAM,CAACI,aAAD,CAANJ,CAAqBgB,UAArBhB,CAAqB;EAAAc;EAAAG;AAAA,CAArBjB,EAAqBkB,aAAC;AAC7C,IAAE,CAAkB;AACpB;AACA;AACA,IAAE,CAA+D;AACjE,CAL4C,CAArBlB,EACnBC,eADmBD,EAInB;EAAA,IAAC;IAAEmB;EAAF,CAAD;EAAA,OAAsBA,YAAY,IAAI,sBAAtC;AAAA,CAJmBnB,CAAhB","names":["React","forwardRef","styled","commonLayoutCSS","OverflowShadow","useOverflow","SectionLayout","forwardedRef","main","children","_ref","props","hasOverflow","ref","_extends","as","displayName","Section","withConfig","componentId","_t","scrollWithin"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Layout/Semantics/Section/Section.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { CompatibleHTMLProps } from '@looker/design-tokens'\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport type { CommonLayoutProps } from '../../utils/common'\nimport { commonLayoutCSS } from '../../utils/common'\nimport { OverflowShadow, useOverflow } from '../../../utils'\n\nexport type SectionProps = CommonLayoutProps &\n  CompatibleHTMLProps<HTMLElement> & {\n    /**\n     * When true the DOM element transition from section to main.\n     * @default false\n     */\n    main?: boolean\n    /**\n     * To be used within the context of <Page fixed> container.\n     * When true, this removes the inner overflow-y scrolling\n     * and allows content within a Layout group to scroll together.\n     * @default false\n     */\n    scrollWithin?: boolean\n  }\n\nconst SectionLayout = forwardRef(\n  (\n    { main, children, ...props }: SectionProps,\n    forwardedRef: Ref<HTMLDivElement>\n  ) => {\n    const [hasOverflow, ref] = useOverflow(forwardedRef)\n    return (\n      <OverflowShadow\n        as={main ? 'main' : 'section'}\n        hasOverflow={hasOverflow}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </OverflowShadow>\n    )\n  }\n)\n\nSectionLayout.displayName = 'SectionLayout'\n\nexport const Section = styled(SectionLayout)`\n  ${commonLayoutCSS}\n  flex: 1 0 auto;\n  overflow: auto;\n  ${({ scrollWithin }) => scrollWithin && 'height: fit-content;'}\n`\n"]},"metadata":{},"sourceType":"module"}