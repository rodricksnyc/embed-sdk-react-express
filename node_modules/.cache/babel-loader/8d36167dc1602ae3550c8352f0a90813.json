{"ast":null,"code":"\"use strict\";\n/*\n\n MIT License\n\n Copyright (c) 2019 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmbedClient = void 0;\n\nvar chatty_1 = require(\"@looker/chatty\");\n\nvar IS_URL = /^https?:\\/\\//;\n/**\n * Wrapper for Looker embedded content. Provides a mechanism for creating the embedded content element,\n * and for establishing two-way communication between the parent window and the embedded content.\n */\n\nvar EmbedClient =\n/** @class */\nfunction () {\n  /**\n   * @hidden\n   */\n  function EmbedClient(_builder) {\n    this._builder = _builder;\n    this._hostBuilder = null;\n    this._host = null;\n    this._connection = null;\n    this._client = null;\n    this._cookielessInitialized = false;\n  }\n\n  Object.defineProperty(EmbedClient.prototype, \"connection\", {\n    /**\n     * Returns a promise that resolves to a client that can be used to send messages to the\n     * embedded content.\n     */\n    get: function () {\n      return this._connection;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EmbedClient.prototype, \"isConnected\", {\n    /**\n     * Indicates whether two way communication has successfully been established with the embedded content.\n     */\n    get: function () {\n      return !!this._connection;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EmbedClient.prototype, \"targetOrigin\", {\n    get: function () {\n      if (this._builder.sandboxedHost) {\n        return '*';\n      }\n\n      var apiHost = this._builder.apiHost;\n      return IS_URL.test(apiHost) ? apiHost : \"https://\".concat(apiHost);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  EmbedClient.prototype.createIframe = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      var eventType, _loop_1, this_1, _i, _a, handler, _b, _c, attr;\n\n      var _d;\n\n      var _this = this;\n\n      return __generator(this, function (_e) {\n        this._hostBuilder = chatty_1.Chatty.createHost(url);\n\n        if (this._builder.isCookielessEmbed) {\n          this._builder.handlers['session:tokens:request'] = [function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              var _a, api_token, api_token_ttl, navigation_token, navigation_token_ttl, session_reference_token_ttl, client;\n\n              return __generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    if (!(this._client && this._cookielessApiToken && this._builder.generateTokens)) return [3\n                    /*break*/\n                    , 4];\n                    if (!this._cookielessInitialized) return [3\n                    /*break*/\n                    , 2];\n                    return [4\n                    /*yield*/\n                    , this.generateTokens()];\n\n                  case 1:\n                    _a = _b.sent(), api_token = _a.api_token, api_token_ttl = _a.api_token_ttl, navigation_token = _a.navigation_token, navigation_token_ttl = _a.navigation_token_ttl, session_reference_token_ttl = _a.session_reference_token_ttl;\n                    this._cookielessApiToken = api_token;\n                    this._cookielessApiTokenTtl = api_token_ttl;\n                    this._cookielessNavigationToken = navigation_token;\n                    this._cookielessNavigationTokenTtl = navigation_token_ttl;\n                    this._cookielessSessionReferenceTokenTtl = session_reference_token_ttl;\n                    return [3\n                    /*break*/\n                    , 3];\n\n                  case 2:\n                    this._cookielessInitialized = true;\n                    _b.label = 3;\n\n                  case 3:\n                    client = this._client;\n                    client.send('session:tokens', {\n                      api_token: this._cookielessApiToken,\n                      api_token_ttl: this._cookielessApiTokenTtl,\n                      navigation_token: this._cookielessNavigationToken,\n                      navigation_token_ttl: this._cookielessNavigationTokenTtl,\n                      session_reference_token_ttl: this._cookielessSessionReferenceTokenTtl\n                    });\n                    _b.label = 4;\n\n                  case 4:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }];\n        }\n\n        for (eventType in this._builder.handlers) {\n          _loop_1 = function (handler) {\n            this_1._hostBuilder.on(eventType, function () {\n              var args = [];\n\n              for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n              }\n\n              return handler.apply(_this._client, args);\n            });\n          };\n\n          this_1 = this;\n\n          for (_i = 0, _a = this._builder.handlers[eventType]; _i < _a.length; _i++) {\n            handler = _a[_i];\n\n            _loop_1(handler);\n          }\n        }\n\n        for (_b = 0, _c = this._builder.sandboxAttrs; _b < _c.length; _b++) {\n          attr = _c[_b];\n\n          this._hostBuilder.withSandboxAttribute(attr);\n        }\n\n        this._host = this._hostBuilder // tslint:disable-next-line:deprecation\n        .frameBorder(this._builder.frameBorder).withTargetOrigin(this.targetOrigin).appendTo(this._builder.el).build(); // IE doesn't like calling classList.add() with no arguments, so check\n\n        if (this._builder.classNames.length) {\n          (_d = this._host.iframe.classList).add.apply(_d, this._builder.classNames);\n        }\n\n        return [2\n        /*return*/\n        , this._host.connect().then(function (host) {\n          // eslint-disable-next-line new-cap\n          _this._client = new _this._builder.clientConstructor(host);\n          return _this._client;\n        })];\n      });\n    });\n  };\n\n  EmbedClient.prototype.createUrl = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var src, auth, url, _i, _a, param;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        src = this._builder.embedUrl;\n        auth = this._builder.auth;\n        if (!(auth === null || auth === void 0 ? void 0 : auth.url)) return [2\n        /*return*/\n        , \"\".concat(this._builder.apiHost).concat(src)];\n        url = \"\".concat(auth.url, \"?src=\").concat(encodeURIComponent(src));\n\n        if (auth.params) {\n          for (_i = 0, _a = auth.params; _i < _a.length; _i++) {\n            param = _a[_i];\n            url += \"&\".concat(encodeURIComponent(param.name), \"=\").concat(encodeURIComponent(param.value));\n          }\n        } // eslint-disable-next-line no-async-promise-executor\n\n\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var xhr, _i, _a, header;\n\n            return __generator(this, function (_b) {\n              xhr = new XMLHttpRequest();\n              xhr.open('GET', url);\n\n              if (auth.withCredentials) {\n                xhr.withCredentials = auth.withCredentials;\n              }\n\n              xhr.setRequestHeader('Cache-Control', 'no-cache');\n\n              if (auth.headers) {\n                for (_i = 0, _a = auth.headers; _i < _a.length; _i++) {\n                  header = _a[_i];\n                  xhr.setRequestHeader(header.name, header.value);\n                }\n              }\n\n              xhr.onload = function () {\n                if (xhr.status === 200) {\n                  resolve(JSON.parse(xhr.responseText).url);\n                } else {\n                  reject(xhr.statusText);\n                }\n              };\n\n              xhr.onerror = function () {\n                return reject(xhr.statusText);\n              };\n\n              xhr.send();\n              return [2\n              /*return*/\n              ];\n            });\n          });\n        })];\n      });\n    });\n  };\n\n  EmbedClient.prototype.acquireCookielessEmbedSession = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (EmbedClient.sessionAcquired) {\n              return [2\n              /*return*/\n              , this.acquireCookielessEmbedSessionInternal()];\n            }\n\n            if (!EmbedClient.acquireSessionPromise) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , EmbedClient.acquireSessionPromise];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.acquireCookielessEmbedSessionInternal()];\n\n          case 2:\n            EmbedClient.acquireSessionPromise = this.acquireCookielessEmbedSessionInternal();\n            return [2\n            /*return*/\n            , EmbedClient.acquireSessionPromise.then(function (url) {\n              EmbedClient.sessionAcquired = true;\n              return url;\n            })];\n        }\n      });\n    });\n  };\n\n  EmbedClient.prototype.acquireCookielessEmbedSessionInternal = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, acquireSession, generateTokens, _b, authentication_token, api_token, api_token_ttl, navigation_token, navigation_token_ttl, session_reference_token_ttl, apiHost, sep, src, embedPath;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._builder, acquireSession = _a.acquireSession, generateTokens = _a.generateTokens;\n\n            if (!acquireSession) {\n              throw new Error('invalid state: acquireSession not defined');\n            }\n\n            if (!generateTokens) {\n              throw new Error('invalid state: generateTokens not defined');\n            }\n\n            return [4\n            /*yield*/\n            , this.acquireSession()];\n\n          case 1:\n            _b = _c.sent(), authentication_token = _b.authentication_token, api_token = _b.api_token, api_token_ttl = _b.api_token_ttl, navigation_token = _b.navigation_token, navigation_token_ttl = _b.navigation_token_ttl, session_reference_token_ttl = _b.session_reference_token_ttl;\n\n            if (!authentication_token || !navigation_token || !api_token) {\n              throw new Error('failed to prepare cookieless embed session');\n            }\n\n            this._cookielessApiToken = api_token;\n            this._cookielessApiTokenTtl = api_token_ttl;\n            this._cookielessNavigationToken = navigation_token;\n            this._cookielessNavigationTokenTtl = navigation_token_ttl;\n            this._cookielessSessionReferenceTokenTtl = session_reference_token_ttl;\n            apiHost = \"https://\".concat(this._builder.apiHost);\n            sep = new URL(this._builder.embedUrl, apiHost).search === '' ? '?' : '&';\n            src = \"\".concat(this._builder.embedUrl).concat(sep, \"embed_navigation_token=\").concat(navigation_token);\n            embedPath = '/login/embed/' + encodeURIComponent(src) + \"?embed_authentication_token=\".concat(authentication_token);\n            return [2\n            /*return*/\n            , \"\".concat(apiHost).concat(embedPath)];\n        }\n      });\n    });\n  };\n\n  EmbedClient.prototype.acquireSession = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var acquireSession, _a, url, init, resp, error_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            acquireSession = this._builder.acquireSession;\n            if (!(typeof acquireSession === 'function')) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , acquireSession()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 2:\n            _b.trys.push([2, 5,, 6]);\n\n            _a = this.getResource(acquireSession), url = _a.url, init = _a.init;\n            return [4\n            /*yield*/\n            , fetch(url, init)];\n\n          case 3:\n            resp = _b.sent();\n\n            if (!resp.ok) {\n              console.error('acquire embed session failed', {\n                resp: resp\n              });\n              throw new Error(\"acquire embed session failed\");\n            }\n\n            return [4\n            /*yield*/\n            , resp.json()];\n\n          case 4:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 5:\n            error_1 = _b.sent();\n            console.error(error_1);\n            throw new Error(\"acquire embed session failed\");\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  EmbedClient.prototype.generateTokens = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var generateTokens, _a, url, defaultInit, init, resp, error_2;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            generateTokens = this._builder.generateTokens;\n            if (!(typeof generateTokens === 'function')) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , generateTokens()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 2:\n            _b.trys.push([2, 5,, 6]);\n\n            _a = this.getResource(generateTokens), url = _a.url, defaultInit = _a.init;\n            init = defaultInit || {\n              body: JSON.stringify({\n                api_token: this._cookielessApiToken,\n                navigation_token: this._cookielessNavigationToken\n              }),\n              headers: {\n                'content-type': 'application/json'\n              },\n              method: 'PUT'\n            };\n            return [4\n            /*yield*/\n            , fetch(url, init)];\n\n          case 3:\n            resp = _b.sent();\n\n            if (!resp.ok) {\n              if (resp.status === 400) {\n                return [2\n                /*return*/\n                , {\n                  session_reference_token_ttl: 0\n                }];\n              }\n\n              console.error('generate tokens failed', {\n                resp: resp\n              });\n              throw new Error(\"generate tokens failed\");\n            }\n\n            return [4\n            /*yield*/\n            , resp.json()];\n\n          case 4:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 5:\n            error_2 = _b.sent();\n            console.error(error_2);\n            throw new Error(\"generate tokens failed\");\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  EmbedClient.prototype.getResource = function (resource) {\n    var url;\n    var init;\n\n    if (typeof resource === 'object') {\n      var tempUrl = resource.url,\n          rest = __rest(resource, [\"url\"]);\n\n      init = rest;\n      url = tempUrl;\n    } else {\n      url = resource;\n    }\n\n    return {\n      init: init,\n      url: url\n    };\n  };\n  /**\n   * Establish two way communication with embedded content. Returns a promise that resolves to a\n   * client that can be used to send messages to the embedded content.\n   */\n\n\n  EmbedClient.prototype.connect = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (this._connection) return [2\n        /*return*/\n        , this._connection];\n\n        if (this._builder.url) {\n          if (this._builder.isCookielessEmbed) {\n            throw new Error('withUrl not supported by cookieless embed');\n          }\n\n          this._connection = this.createIframe(this._builder.url);\n        } else {\n          if (this._builder.isCookielessEmbed) {\n            this._connection = this.acquireCookielessEmbedSession().then(function (url) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  return [2\n                  /*return*/\n                  , this.createIframe(url)];\n                });\n              });\n            });\n          } else {\n            this._connection = this.createUrl().then(function (url) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  return [2\n                  /*return*/\n                  , this.createIframe(url)];\n                });\n              });\n            });\n          }\n        }\n\n        return [2\n        /*return*/\n        , this._connection];\n      });\n    });\n  };\n\n  EmbedClient.sessionAcquired = false;\n  return EmbedClient;\n}();\n\nexports.EmbedClient = EmbedClient;","map":{"version":3,"mappings":"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","names":["IS_URL","_builder","Object","EmbedClient","_connection","sandboxedHost","apiHost","test","url","_hostBuilder","chatty_1","createHost","isCookielessEmbed","handlers","_client","_cookielessApiToken","generateTokens","_cookielessInitialized","_a","_b","api_token","api_token_ttl","navigation_token","navigation_token_ttl","session_reference_token_ttl","_cookielessApiTokenTtl","_cookielessNavigationToken","_cookielessNavigationTokenTtl","_cookielessSessionReferenceTokenTtl","client","send","eventType","handler","this_1","on","args","apply","_this","_i","_c","sandboxAttrs","attr","withSandboxAttribute","_host","frameBorder","withTargetOrigin","targetOrigin","appendTo","el","build","classNames","length","iframe","classList","add","_d","connect","then","host","clientConstructor","src","embedUrl","auth","concat","encodeURIComponent","params","param","name","value","Promise","resolve","reject","xhr","XMLHttpRequest","open","withCredentials","setRequestHeader","headers","header","onload","status","JSON","parse","responseText","statusText","onerror","sessionAcquired","acquireCookielessEmbedSessionInternal","acquireSessionPromise","acquireSession","Error","authentication_token","sep","URL","search","embedPath","getResource","init","fetch","resp","ok","console","error","json","error_1","defaultInit","body","stringify","method","error_2","resource","tempUrl","rest","createIframe","acquireCookielessEmbedSession","createUrl","exports"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/embed-sdk/src/embed.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2019 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { ChattyHost, ChattyHostBuilder } from '@looker/chatty'\nimport { Chatty } from '@looker/chatty'\nimport type { LookerEmbedBase } from './embed_base'\nimport type { EmbedBuilder } from './embed_builder'\nimport type {\n  CookielessRequestInit,\n  LookerEmbedCookielessSessionData,\n} from './types'\n\nconst IS_URL = /^https?:\\/\\//\n\n/**\n * Wrapper for Looker embedded content. Provides a mechanism for creating the embedded content element,\n * and for establishing two-way communication between the parent window and the embedded content.\n */\n\nexport class EmbedClient<T> {\n  private static sessionAcquired = false\n  private static acquireSessionPromise?: Promise<string>\n\n  _hostBuilder: ChattyHostBuilder | null = null\n  _host: ChattyHost | null = null\n  _connection: Promise<T> | null = null\n  _client: T | null = null\n  _cookielessInitialized = false\n  _cookielessApiToken?: string | null\n  _cookielessApiTokenTtl?: number | null\n  _cookielessNavigationToken?: string | null\n  _cookielessNavigationTokenTtl?: number | null\n  _cookielessSessionReferenceTokenTtl?: number | null\n\n  /**\n   * @hidden\n   */\n\n  constructor(private _builder: EmbedBuilder<T>) {}\n\n  /**\n   * Returns a promise that resolves to a client that can be used to send messages to the\n   * embedded content.\n   */\n\n  get connection() {\n    return this._connection\n  }\n\n  /**\n   * Indicates whether two way communication has successfully been established with the embedded content.\n   */\n\n  get isConnected() {\n    return !!this._connection\n  }\n\n  get targetOrigin() {\n    if (this._builder.sandboxedHost) {\n      return '*'\n    }\n    const apiHost = this._builder.apiHost\n    return IS_URL.test(apiHost) ? apiHost : `https://${apiHost}`\n  }\n\n  private async createIframe(url: string) {\n    this._hostBuilder = Chatty.createHost(url)\n    if (this._builder.isCookielessEmbed) {\n      this._builder.handlers['session:tokens:request'] = [\n        async () => {\n          if (\n            this._client &&\n            this._cookielessApiToken &&\n            this._builder.generateTokens\n          ) {\n            if (this._cookielessInitialized) {\n              const {\n                api_token,\n                api_token_ttl,\n                navigation_token,\n                navigation_token_ttl,\n                session_reference_token_ttl,\n              } = await this.generateTokens()\n              this._cookielessApiToken = api_token\n              this._cookielessApiTokenTtl = api_token_ttl\n              this._cookielessNavigationToken = navigation_token\n              this._cookielessNavigationTokenTtl = navigation_token_ttl\n              this._cookielessSessionReferenceTokenTtl =\n                session_reference_token_ttl\n            } else {\n              this._cookielessInitialized = true\n            }\n            const client = this._client as unknown as LookerEmbedBase\n            client.send('session:tokens', {\n              api_token: this._cookielessApiToken,\n              api_token_ttl: this._cookielessApiTokenTtl,\n              navigation_token: this._cookielessNavigationToken,\n              navigation_token_ttl: this._cookielessNavigationTokenTtl,\n              session_reference_token_ttl:\n                this._cookielessSessionReferenceTokenTtl,\n            })\n          }\n        },\n      ]\n    }\n    for (const eventType in this._builder.handlers) {\n      for (const handler of this._builder.handlers[eventType]) {\n        this._hostBuilder.on(eventType, (...args) =>\n          handler.apply(this._client, args)\n        )\n      }\n    }\n    for (const attr of this._builder.sandboxAttrs) {\n      this._hostBuilder.withSandboxAttribute(attr)\n    }\n    this._host = this._hostBuilder\n      // tslint:disable-next-line:deprecation\n      .frameBorder(this._builder.frameBorder)\n      .withTargetOrigin(this.targetOrigin)\n      .appendTo(this._builder.el)\n      .build()\n\n    // IE doesn't like calling classList.add() with no arguments, so check\n    if (this._builder.classNames.length) {\n      this._host.iframe.classList.add(...this._builder.classNames)\n    }\n\n    return this._host.connect().then((host) => {\n      // eslint-disable-next-line new-cap\n      this._client = new this._builder.clientConstructor(host)\n      return this._client\n    })\n  }\n\n  private async createUrl() {\n    const src = this._builder.embedUrl\n    const auth = this._builder.auth\n    if (!auth?.url) return `${this._builder.apiHost}${src}`\n\n    let url = `${auth.url}?src=${encodeURIComponent(src)}`\n    if (auth.params) {\n      for (const param of auth.params) {\n        url += `&${encodeURIComponent(param.name)}=${encodeURIComponent(\n          param.value\n        )}`\n      }\n    }\n\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise<string>(async (resolve, reject) => {\n      // compute signature\n      const xhr = new XMLHttpRequest()\n      xhr.open('GET', url)\n      if (auth.withCredentials) {\n        xhr.withCredentials = auth.withCredentials\n      }\n      xhr.setRequestHeader('Cache-Control', 'no-cache')\n      if (auth.headers) {\n        for (const header of auth.headers) {\n          xhr.setRequestHeader(header.name, header.value)\n        }\n      }\n      xhr.onload = () => {\n        if (xhr.status === 200) {\n          resolve(JSON.parse(xhr.responseText).url)\n        } else {\n          reject(xhr.statusText)\n        }\n      }\n      xhr.onerror = () => reject(xhr.statusText)\n      xhr.send()\n    })\n  }\n\n  private async acquireCookielessEmbedSession(): Promise<string> {\n    if (EmbedClient.sessionAcquired) {\n      return this.acquireCookielessEmbedSessionInternal()\n    }\n    if (EmbedClient.acquireSessionPromise) {\n      await EmbedClient.acquireSessionPromise\n      return this.acquireCookielessEmbedSessionInternal()\n    }\n    EmbedClient.acquireSessionPromise =\n      this.acquireCookielessEmbedSessionInternal()\n    return EmbedClient.acquireSessionPromise.then((url) => {\n      EmbedClient.sessionAcquired = true\n      return url\n    })\n  }\n\n  private async acquireCookielessEmbedSessionInternal(): Promise<string> {\n    const { acquireSession, generateTokens } = this._builder\n    if (!acquireSession) {\n      throw new Error('invalid state: acquireSession not defined')\n    }\n    if (!generateTokens) {\n      throw new Error('invalid state: generateTokens not defined')\n    }\n    const {\n      authentication_token,\n      api_token,\n      api_token_ttl,\n      navigation_token,\n      navigation_token_ttl,\n      session_reference_token_ttl,\n    } = await this.acquireSession()\n    if (!authentication_token || !navigation_token || !api_token) {\n      throw new Error('failed to prepare cookieless embed session')\n    }\n    this._cookielessApiToken = api_token\n    this._cookielessApiTokenTtl = api_token_ttl\n    this._cookielessNavigationToken = navigation_token\n    this._cookielessNavigationTokenTtl = navigation_token_ttl\n    this._cookielessSessionReferenceTokenTtl = session_reference_token_ttl\n    const apiHost = `https://${this._builder.apiHost}`\n    const sep =\n      new URL(this._builder.embedUrl, apiHost).search === '' ? '?' : '&'\n    const src = `${this._builder.embedUrl}${sep}embed_navigation_token=${navigation_token}`\n    const embedPath =\n      '/login/embed/' +\n      encodeURIComponent(src) +\n      `?embed_authentication_token=${authentication_token}`\n    return `${apiHost}${embedPath}`\n  }\n\n  private async acquireSession(): Promise<LookerEmbedCookielessSessionData> {\n    const { acquireSession } = this._builder\n    if (typeof acquireSession === 'function') {\n      return await acquireSession()\n    }\n    try {\n      const { url, init } = this.getResource(acquireSession!)\n      const resp = await fetch(url, init)\n      if (!resp.ok) {\n        console.error('acquire embed session failed', { resp })\n        throw new Error(`acquire embed session failed`)\n      }\n      return (await resp.json()) as LookerEmbedCookielessSessionData\n    } catch (error: any) {\n      console.error(error)\n      throw new Error(`acquire embed session failed`)\n    }\n  }\n\n  private async generateTokens(): Promise<LookerEmbedCookielessSessionData> {\n    const { generateTokens } = this._builder\n    if (typeof generateTokens === 'function') {\n      return await generateTokens()\n    }\n    try {\n      const { url, init: defaultInit } = this.getResource(generateTokens!)\n      const init = defaultInit || {\n        body: JSON.stringify({\n          api_token: this._cookielessApiToken,\n          navigation_token: this._cookielessNavigationToken,\n        }),\n        headers: {\n          'content-type': 'application/json',\n        },\n        method: 'PUT',\n      }\n      const resp = await fetch(url, init)\n      if (!resp.ok) {\n        if (resp.status === 400) {\n          return { session_reference_token_ttl: 0 }\n        }\n        console.error('generate tokens failed', { resp })\n        throw new Error(`generate tokens failed`)\n      }\n      return (await resp.json()) as LookerEmbedCookielessSessionData\n    } catch (error: any) {\n      console.error(error)\n      throw new Error(`generate tokens failed`)\n    }\n  }\n\n  private getResource(resource: string | CookielessRequestInit) {\n    let url\n    let init\n    if (typeof resource === 'object') {\n      const { url: tempUrl, ...rest } = resource\n      init = rest\n      url = tempUrl\n    } else {\n      url = resource\n    }\n    return { init, url }\n  }\n\n  /**\n   * Establish two way communication with embedded content. Returns a promise that resolves to a\n   * client that can be used to send messages to the embedded content.\n   */\n\n  async connect(): Promise<T> {\n    if (this._connection) return this._connection\n\n    if (this._builder.url) {\n      if (this._builder.isCookielessEmbed) {\n        throw new Error('withUrl not supported by cookieless embed')\n      }\n      this._connection = this.createIframe(this._builder.url)\n    } else {\n      if (this._builder.isCookielessEmbed) {\n        this._connection = this.acquireCookielessEmbedSession().then(\n          async (url) => this.createIframe(url)\n        )\n      } else {\n        this._connection = this.createUrl().then(async (url) =>\n          this.createIframe(url)\n        )\n      }\n    }\n    return this._connection\n  }\n}\n"]},"metadata":{},"sourceType":"script"}