{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { getWindowedListBoundaries } from './getWindowedListBoundaries';\nimport { useCallbackRef } from './useCallbackRef';\nimport { useMeasuredElement } from './useMeasuredElement';\nimport { useScrollPosition } from './useScrollPosition';\nexport const useWindow = _ref => {\n  let {\n    itemCount,\n    enabled,\n    itemHeight,\n    ref,\n    spacerTag: _spacerTag = 'div'\n  } = _ref;\n  const [containerElement, callbackRef] = useCallbackRef(ref);\n  const [{\n    height\n  }] = useMeasuredElement(enabled ? containerElement : null);\n  const scrollPosition = useScrollPosition(enabled ? containerElement : null);\n  const {\n    start,\n    end,\n    beforeHeight,\n    afterHeight\n  } = useMemo(() => {\n    return getWindowedListBoundaries({\n      enabled,\n      height,\n      itemCount,\n      itemHeight,\n      scrollPosition\n    });\n  }, [enabled, itemCount, height, itemHeight, scrollPosition]);\n  const Spacer = _spacerTag;\n  const before = beforeHeight > 0 ? React.createElement(Spacer, {\n    style: {\n      height: `${beforeHeight}px`\n    },\n    \"data-testid\": \"before\"\n  }) : null;\n  const after = afterHeight > 0 ? React.createElement(Spacer, {\n    style: {\n      height: `${afterHeight}px`\n    },\n    \"data-testid\": \"after\"\n  }) : null;\n  return {\n    after,\n    before,\n    containerElement,\n    end,\n    ref: callbackRef,\n    start\n  };\n};","map":{"version":3,"mappings":"AAMA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAeA,OAAO,MAAMC,SAAS,GAAG,QAMA;EAAA,IANsC;IAC7DC,SAD6D;IAE7DC,OAF6D;IAG7DC,UAH6D;IAI7DC,GAJ6D;IAK7DC,SAAS,EAATA,UAAS,GAAG;EALiD,CAMtC;EACvB,MAAM,CAACC,gBAAD,EAAmBC,WAAnB,IAAkCV,cAAc,CAAIO,GAAJ,CAAtD;EACA,MAAM,CAAC;IAAEI;EAAF,CAAD,IAAeV,kBAAkB,CAACI,OAAO,GAAGI,gBAAH,GAAsB,IAA9B,CAAvC;EACA,MAAMG,cAAc,GAAGV,iBAAiB,CAACG,OAAO,GAAGI,gBAAH,GAAsB,IAA9B,CAAxC;EAEA,MAAM;IAAEI,KAAF;IAASC,GAAT;IAAcC,YAAd;IAA4BC;EAA5B,IAA4ClB,OAAO,CAAC,MAAM;IAC9D,OAAOC,yBAAyB,CAAC;MAC/BM,OAD+B;MAE/BM,MAF+B;MAG/BP,SAH+B;MAI/BE,UAJ+B;MAK/BM;IAL+B,CAAD,CAAhC;EAOD,CARwD,EAQtD,CAACP,OAAD,EAAUD,SAAV,EAAqBO,MAArB,EAA6BL,UAA7B,EAAyCM,cAAzC,CARsD,CAAzD;EAUA,MAAMK,MAAM,GAAGT,UAAf;EAEA,MAAMU,MAAM,GACVH,YAAY,GAAG,CAAfA,GACElB,oBAACoB,MAAD,EAAO;IAACE,KAAK,EAAE;MAAER,MAAM,EAAG,GAAEI,YAAa;IAA1B,CAAR;IAAyC,eAAY;EAArD,CAAP,CADFA,GAEI,IAHN;EAIA,MAAMK,KAAK,GACTJ,WAAW,GAAG,CAAdA,GACEnB,oBAACoB,MAAD,EAAO;IAACE,KAAK,EAAE;MAAER,MAAM,EAAG,GAAEK,WAAY;IAAzB,CAAR;IAAwC,eAAY;EAApD,CAAP,CADFA,GAEI,IAHN;EAKA,OAAO;IACLI,KADK;IAELF,MAFK;IAGLT,gBAHK;IAILK,GAJK;IAKLP,GAAG,EAAEG,WALA;IAMLG;EANK,CAAP;AAQD,CAxCM","names":["React","useMemo","getWindowedListBoundaries","useCallbackRef","useMeasuredElement","useScrollPosition","useWindow","itemCount","enabled","itemHeight","ref","spacerTag","containerElement","callbackRef","height","scrollPosition","start","end","beforeHeight","afterHeight","Spacer","before","style","after"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/utils/useWindow.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { useMemo } from 'react'\nimport type { GetWindowedListBoundaryProps } from './getWindowedListBoundaries'\nimport { getWindowedListBoundaries } from './getWindowedListBoundaries'\nimport { useCallbackRef } from './useCallbackRef'\nimport { useMeasuredElement } from './useMeasuredElement'\nimport { useScrollPosition } from './useScrollPosition'\n\nexport type WindowSpacerTag = 'div' | 'li' | 'tr'\n\nexport type UseWindowProps<E extends HTMLElement> = Omit<\n  GetWindowedListBoundaryProps,\n  'height' | 'scrollPosition'\n> & {\n  /**\n   * Tag to use for the spacers above and below the window\n   */\n  spacerTag?: WindowSpacerTag\n  ref?: Ref<E>\n}\n\nexport const useWindow = <E extends HTMLElement = HTMLElement>({\n  itemCount,\n  enabled,\n  itemHeight,\n  ref,\n  spacerTag = 'div',\n}: UseWindowProps<E>) => {\n  const [containerElement, callbackRef] = useCallbackRef<E>(ref)\n  const [{ height }] = useMeasuredElement(enabled ? containerElement : null)\n  const scrollPosition = useScrollPosition(enabled ? containerElement : null)\n\n  const { start, end, beforeHeight, afterHeight } = useMemo(() => {\n    return getWindowedListBoundaries({\n      enabled,\n      height,\n      itemCount,\n      itemHeight,\n      scrollPosition,\n    })\n  }, [enabled, itemCount, height, itemHeight, scrollPosition])\n\n  const Spacer = spacerTag\n  // after & before are spacers to make scrolling smooth\n  const before =\n    beforeHeight > 0 ? (\n      <Spacer style={{ height: `${beforeHeight}px` }} data-testid=\"before\" />\n    ) : null\n  const after =\n    afterHeight > 0 ? (\n      <Spacer style={{ height: `${afterHeight}px` }} data-testid=\"after\" />\n    ) : null\n\n  return {\n    after,\n    before,\n    containerElement,\n    end,\n    ref: callbackRef,\n    start,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}