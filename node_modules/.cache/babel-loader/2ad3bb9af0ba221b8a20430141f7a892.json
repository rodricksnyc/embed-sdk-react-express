{"ast":null,"code":"export function getCurrentNode(elementOrRefObject) {\n  if (!elementOrRefObject) return null;\n  return elementOrRefObject.addEventListener ? elementOrRefObject : elementOrRefObject.current;\n}","map":{"version":3,"mappings":"AAaA,OAAO,SAASA,cAAT,CACLC,kBADK,EAEK;EACV,IAAI,CAACA,kBAAL,EAAyB,OAAO,IAAP;EACzB,OAAQA,kBAAkB,CAAOC,gBAAzBD,GACHA,kBADGA,GAEHA,kBAAkB,CAAkBE,OAFzC;AAGF","names":["getCurrentNode","elementOrRefObject","addEventListener","current"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/utils/getCurrentNode.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { RefObject } from 'react'\n\nexport type ElementOrRef<E extends HTMLElement = HTMLElement> =\n  | E\n  | null\n  | undefined\n  | RefObject<E>\n\nexport function getCurrentNode<E extends HTMLElement = HTMLElement>(\n  elementOrRefObject: ElementOrRef<E>\n): E | null {\n  if (!elementOrRefObject) return null\n  return (elementOrRefObject as E).addEventListener\n    ? (elementOrRefObject as E)\n    : (elementOrRefObject as RefObject<E>).current\n}\n"]},"metadata":{},"sourceType":"module"}