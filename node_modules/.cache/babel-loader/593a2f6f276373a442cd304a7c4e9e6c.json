{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { generateColors } from '../../color';\nimport { defaultFontFallbacks } from '../../tokens';\nimport { generateDefaults } from '../../defaults';\nimport { generateFontFamilies } from '../../utils/typography';\nexport const generateTheme = (theme, customizations) => {\n  if (!customizations) {\n    return theme;\n  }\n\n  const {\n    fontSources\n  } = customizations;\n  const fonts = customizations.fontFamilies ? generateFontFamilies(theme.fonts, defaultFontFallbacks, customizations.fontFamilies) : theme.fonts;\n  const colors = customizations.colors ? generateColors(theme.colors, customizations.colors) : theme.colors;\n  const defaults = customizations.defaults ? generateDefaults(theme.defaults, customizations.defaults) : theme.defaults;\n  return _objectSpread(_objectSpread({}, theme), {}, {\n    colors,\n    defaults,\n    fontSources,\n    fonts\n  });\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAASA,cAAT,QAA+B,aAA/B;AAEA,SAASC,oBAAT,QAAqC,cAArC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAC3BC,KAD2B,EAE3BC,cAF2B,KAGjB;EACV,IAAI,CAACA,cAAL,EAAqB;IACnB,OAAOD,KAAP;EACF;;EAEA,MAAM;IAAEE;EAAF,IAAkBD,cAAxB;EAEA,MAAME,KAAK,GAAGF,cAAc,CAACG,YAAfH,GACVH,oBAAoB,CAClBE,KAAK,CAACG,KADY,EAElBP,oBAFkB,EAGlBK,cAAc,CAACG,YAHG,CADVH,GAMVD,KAAK,CAACG,KANV;EAQA,MAAME,MAAM,GAAGJ,cAAc,CAACI,MAAfJ,GACXN,cAAc,CAACK,KAAK,CAACK,MAAP,EAAeJ,cAAc,CAACI,MAA9B,CADHJ,GAEXD,KAAK,CAACK,MAFV;EAIA,MAAMC,QAAQ,GAAGL,cAAc,CAACK,QAAfL,GACbJ,gBAAgB,CAACG,KAAK,CAACM,QAAP,EAAiBL,cAAc,CAACK,QAAhC,CADHL,GAEbD,KAAK,CAACM,QAFV;EAIA,uCACKN,KADL,GACU,EADV,EACU;IACRK,MADQ;IAERC,QAFQ;IAGRJ,WAHQ;IAIRC;EAJQ,CADV;AAOD,CAjCM","names":["generateColors","defaultFontFallbacks","generateDefaults","generateFontFamilies","generateTheme","theme","customizations","fontSources","fonts","fontFamilies","colors","defaults"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/design-tokens/src/theme/utils/generateTheme.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { generateColors } from '../../color'\nimport type { Theme } from '../theme'\nimport { defaultFontFallbacks } from '../../tokens'\nimport { generateDefaults } from '../../defaults'\nimport type { ThemeCustomizations } from '../ThemeCustomizations'\nimport { generateFontFamilies } from '../../utils/typography'\n\nexport const generateTheme = (\n  theme: Theme,\n  customizations?: ThemeCustomizations\n): Theme => {\n  if (!customizations) {\n    return theme\n  }\n\n  const { fontSources } = customizations\n\n  const fonts = customizations.fontFamilies\n    ? generateFontFamilies(\n        theme.fonts,\n        defaultFontFallbacks,\n        customizations.fontFamilies\n      )\n    : theme.fonts\n\n  const colors = customizations.colors\n    ? generateColors(theme.colors, customizations.colors)\n    : theme.colors\n\n  const defaults = customizations.defaults\n    ? generateDefaults(theme.defaults, customizations.defaults)\n    : theme.defaults\n\n  return {\n    ...theme,\n    colors,\n    defaults,\n    fontSources,\n    fonts,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}