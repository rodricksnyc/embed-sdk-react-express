{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { ComboboxState } from '../utils/state';\nconst visibleStates = [ComboboxState.SUGGESTING, ComboboxState.NAVIGATING, ComboboxState.INTERACTING];\nexport const getIsVisible = state => visibleStates.includes(state);\nexport function useComboboxToggle(state, option, onOpen, onClose) {\n  const isVisible = getIsVisible(state);\n  const isVisibleRef = useRef(isVisible);\n  useEffect(() => {\n    if (isVisible && !isVisibleRef.current) {\n      onOpen && onOpen(option);\n      isVisibleRef.current = true;\n    } else if (!isVisible && isVisibleRef.current) {\n      onClose && onClose(option);\n      isVisibleRef.current = false;\n    }\n  }, [isVisible, isVisibleRef, onOpen, onClose, option]);\n  return isVisible;\n}","map":{"version":3,"mappings":"AAQA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AAMA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,MAAMC,aAAa,GAAG,CACpBD,aAAa,CAACE,UADM,EAEpBF,aAAa,CAACG,UAFM,EAGpBH,aAAa,CAACI,WAHM,CAAtB;AAKA,OAAO,MAAMC,YAAY,GAAIC,KAAoB,IAC/CL,aAAa,CAACM,QAAdN,CAAuBK,KAAvBL,CADK;AAIP,OAAO,SAASO,iBAAT,CAGLF,KAHK,EAILG,MAJK,EAKLC,MALK,EAMLC,OANK,EAOL;EACA,MAAMC,SAAS,GAAGP,YAAY,CAACC,KAAD,CAA9B;EACA,MAAMO,YAAY,GAAGf,MAAM,CAACc,SAAD,CAA3B;EAEAb,SAAS,CAAC,MAAM;IACd,IAAIa,SAAS,IAAI,CAACC,YAAY,CAACC,OAA/B,EAAwC;MACtCJ,MAAM,IAAIA,MAAM,CAACD,MAAD,CAAhBC;MACAG,YAAY,CAACC,OAAbD,GAAuB,IAAvBA;IACD,CAHD,MAGO,IAAI,CAACD,SAAD,IAAcC,YAAY,CAACC,OAA/B,EAAwC;MAC7CH,OAAO,IAAIA,OAAO,CAACF,MAAD,CAAlBE;MACAE,YAAY,CAACC,OAAbD,GAAuB,KAAvBA;IACF;EACD,CARQ,EAQN,CAACD,SAAD,EAAYC,YAAZ,EAA0BH,MAA1B,EAAkCC,OAAlC,EAA2CF,MAA3C,CARM,CAATV;EAUA,OAAOa,SAAP;AACF","names":["useRef","useEffect","ComboboxState","visibleStates","SUGGESTING","NAVIGATING","INTERACTING","getIsVisible","state","includes","useComboboxToggle","option","onOpen","onClose","isVisible","isVisibleRef","current"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Inputs/Combobox/utils/useComboboxToggle.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\n// Much of the following is pulled from https://github.com/reach/reach-ui\n// because their work is fantastic (but is not in TypeScript)\n\nimport { useRef, useEffect } from 'react'\nimport type {\n  ComboboxCallback,\n  MaybeComboboxOptionObject,\n  ComboboxOptionType,\n} from '../types'\nimport { ComboboxState } from '../utils/state'\n\nconst visibleStates = [\n  ComboboxState.SUGGESTING,\n  ComboboxState.NAVIGATING,\n  ComboboxState.INTERACTING,\n]\nexport const getIsVisible = (state: ComboboxState) =>\n  visibleStates.includes(state)\n\n// Detect when to call onOpen and onClose\nexport function useComboboxToggle<\n  TOption extends ComboboxOptionType = MaybeComboboxOptionObject\n>(\n  state: ComboboxState,\n  option: TOption,\n  onOpen?: ComboboxCallback<TOption>,\n  onClose?: ComboboxCallback<TOption>\n) {\n  const isVisible = getIsVisible(state)\n  const isVisibleRef = useRef(isVisible)\n\n  useEffect(() => {\n    if (isVisible && !isVisibleRef.current) {\n      onOpen && onOpen(option)\n      isVisibleRef.current = true\n    } else if (!isVisible && isVisibleRef.current) {\n      onClose && onClose(option)\n      isVisibleRef.current = false\n    }\n  }, [isVisible, isVisibleRef, onOpen, onClose, option])\n\n  return isVisible\n}\n"]},"metadata":{},"sourceType":"module"}