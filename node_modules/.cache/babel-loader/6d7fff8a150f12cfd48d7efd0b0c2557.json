{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useCallbackRef } from '../utils';\nexport const useElementVisibility = () => {\n  const [element, ref] = useCallbackRef();\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    const observer = typeof IntersectionObserver === 'undefined' ? null : new IntersectionObserver(_ref => {\n      let [entry] = _ref;\n      setIsVisible(entry.intersectionRatio > 0);\n    }, {\n      threshold: [0, 1]\n    });\n\n    if (element && observer) {\n      observer.observe && observer.observe(element);\n    }\n\n    return () => {\n      if (element && observer) {\n        observer.unobserve && observer.unobserve(element);\n      }\n    };\n  }, [element]);\n  return [isVisible, ref];\n};","map":{"version":3,"mappings":"AAKA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAG/B;EACH,MAAM,CAACC,OAAD,EAAUC,GAAV,IAAiBH,cAAc,EAArC;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GACZ,OAAOC,oBAAP,KAAgC,WAAhC,GACI,IADJ,GAEI,IAAIA,oBAAJ,CACE,QAAa;MAAA,IAAZ,CAACC,KAAD,CAAY;MACXH,YAAY,CAACG,KAAK,CAACC,iBAAND,GAA0B,CAA3B,CAAZH;IACD,CAHH,EAIE;MACEK,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ;IADb,CAJF,CAHN;;IAYA,IAAIR,OAAO,IAAII,QAAf,EAAyB;MACvBA,QAAQ,CAACK,OAATL,IAAoBA,QAAQ,CAACK,OAATL,CAAiBJ,OAAjBI,CAApBA;IACF;;IACA,OAAO,MAAM;MACX,IAAIJ,OAAO,IAAII,QAAf,EAAyB;QACvBA,QAAQ,CAACM,SAATN,IAAsBA,QAAQ,CAACM,SAATN,CAAmBJ,OAAnBI,CAAtBA;MACF;IACD,CAJD;EAKD,CArBQ,EAqBN,CAACJ,OAAD,CArBM,CAATJ;EAuBA,OAAO,CAACM,SAAD,EAAYD,GAAZ,CAAP;AACD,CA/BM","names":["useEffect","useState","useCallbackRef","useElementVisibility","element","ref","isVisible","setIsVisible","observer","IntersectionObserver","entry","intersectionRatio","threshold","observe","unobserve"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Menu/MenuHeading.hooks.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useEffect, useState } from 'react'\nimport { useCallbackRef } from '../utils'\n\nexport const useElementVisibility = (): [\n  boolean,\n  (node: HTMLElement | null) => void\n] => {\n  const [element, ref] = useCallbackRef()\n  const [isVisible, setIsVisible] = useState(true)\n\n  useEffect(() => {\n    const observer =\n      typeof IntersectionObserver === 'undefined'\n        ? null\n        : new IntersectionObserver(\n            ([entry]) => {\n              setIsVisible(entry.intersectionRatio > 0)\n            },\n            {\n              threshold: [0, 1],\n            }\n          )\n\n    if (element && observer) {\n      observer.observe && observer.observe(element)\n    }\n    return () => {\n      if (element && observer) {\n        observer.unobserve && observer.unobserve(element)\n      }\n    }\n  }, [element])\n\n  return [isVisible, ref]\n}\n"]},"metadata":{},"sourceType":"module"}