{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport darken from 'polished/lib/color/darken';\nimport getLuminance from 'polished/lib/color/getLuminance';\nimport lighten from 'polished/lib/color/lighten';\nimport { css } from 'styled-components';\nexport const generateIntentShade = color => {\n  const intentColorLuminance = getLuminance(color);\n  const adjustAmount = intentColorLuminance > 0.3 ? intentColorLuminance * 0.55 : 0.125;\n  return css(_t || (_t = _`\n    ${0}\n  `), _ref => {\n    let {\n      theme: {\n        colors\n      }\n    } = _ref;\n    return getLuminance(colors.background) > 0.5 ? darken(adjustAmount, color) : lighten(adjustAmount, color);\n  });\n};","map":{"version":3,"mappings":";;;AAKA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,GAAT,QAAoB,mBAApB;AAIA,OAAO,MAAMC,mBAAmB,GAAIC,KAAa,IAAK;EACpD,MAAMC,oBAAoB,GAAGL,YAAY,CAACI,KAAD,CAAzC;EAEA,MAAME,YAAY,GAChBD,oBAAoB,GAAG,GAAvBA,GAA6BA,oBAAoB,GAAG,IAApDA,GAA2D,KAD7D;EAEA,OAAOH,GAAG,cAAC;AACb,MAAI,CAGmC;AACvC,GALY,GACN;IAAA,IAAC;MAAEK,KAAK,EAAE;QAAEC;MAAF;IAAT,CAAD;IAAA,OACAR,YAAY,CAACQ,MAAM,CAACC,UAAR,CAAZT,GAAkC,GAAlCA,GACID,MAAM,CAACO,YAAD,EAAeF,KAAf,CADVJ,GAEIC,OAAO,CAACK,YAAD,EAAeF,KAAf,CAHX;EAAA,CADM,CAAV;AAMD,CAXM","names":["darken","getLuminance","lighten","css","generateIntentShade","color","intentColorLuminance","adjustAmount","theme","colors","background"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/design-tokens/src/color/utils/generateIntentShade.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport darken from 'polished/lib/color/darken'\nimport getLuminance from 'polished/lib/color/getLuminance'\nimport lighten from 'polished/lib/color/lighten'\nimport { css } from 'styled-components'\n\n// Returns a tint or shade of an intent color, used for text that sits on top of an intentUIBlend\n// Adjust amount of lightening or darkening based on color's luminance as well as background color's luminance\nexport const generateIntentShade = (color: string) => {\n  const intentColorLuminance = getLuminance(color)\n\n  const adjustAmount =\n    intentColorLuminance > 0.3 ? intentColorLuminance * 0.55 : 0.125\n  return css`\n    ${({ theme: { colors } }) =>\n      getLuminance(colors.background) > 0.5\n        ? darken(adjustAmount, color)\n        : lighten(adjustAmount, color)}\n  `\n}\n"]},"metadata":{},"sourceType":"module"}