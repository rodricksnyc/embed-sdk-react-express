{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nexport const paddingDefaultsHelper = (props, defaults) => {\n  const merged = _objectSpread(_objectSpread({}, defaults), props);\n\n  let {\n    p,\n    px,\n    py,\n    pt,\n    pr,\n    pb,\n    pl\n  } = merged;\n  pt = pt || py || p;\n  pb = pb || py || p;\n  py = pb === pt ? pb : undefined;\n  pr = pr || px || p;\n  pl = pl || px || p;\n  px = pr === pl ? pr : undefined;\n\n  if (px && px === py) {\n    return {\n      p\n    };\n  } else {\n    p = undefined;\n  }\n\n  const response = {\n    pb: py ? undefined : pb,\n    pl: px ? undefined : pl,\n    pr: px ? undefined : pr,\n    pt: py ? undefined : pt,\n    px,\n    py\n  };\n  Object.keys(response).forEach(key => {\n    if (typeof response[key] === 'undefined') {\n      delete response[key];\n    }\n  });\n  return response;\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,MAAMA,qBAAqB,GAAG,CACnCC,KADmC,EAEnCC,QAFmC,KAGhC;EACH,MAAMC,MAAM,mCAAQD,QAAR,GAAqBD,KAArB,CAAZ;;EACA,IAAI;IAAEG,CAAF;IAAKC,EAAL;IAASC,EAAT;IAAaC,EAAb;IAAiBC,EAAjB;IAAqBC,EAArB;IAAyBC;EAAzB,IAAgCP,MAApC;EAGAI,EAAE,GAAGA,EAAE,IAAID,EAANC,IAAYH,CAAjBG;EACAE,EAAE,GAAGA,EAAE,IAAIH,EAANG,IAAYL,CAAjBK;EACAH,EAAE,GAAGG,EAAE,KAAKF,EAAPE,GAAYA,EAAZA,GAAiBE,SAAtBL;EAEAE,EAAE,GAAGA,EAAE,IAAIH,EAANG,IAAYJ,CAAjBI;EACAE,EAAE,GAAGA,EAAE,IAAIL,EAANK,IAAYN,CAAjBM;EACAL,EAAE,GAAGG,EAAE,KAAKE,EAAPF,GAAYA,EAAZA,GAAiBG,SAAtBN;;EAEA,IAAIA,EAAE,IAAIA,EAAE,KAAKC,EAAjB,EAAqB;IACnB,OAAO;MAAEF;IAAF,CAAP;EACD,CAFD,MAEO;IACLA,CAAC,GAAGO,SAAJP;EACF;;EAEA,MAAMQ,QAAQ,GAAG;IACfH,EAAE,EAAEH,EAAE,GAAGK,SAAH,GAAeF,EADN;IAEfC,EAAE,EAAEL,EAAE,GAAGM,SAAH,GAAeD,EAFN;IAGfF,EAAE,EAAEH,EAAE,GAAGM,SAAH,GAAeH,EAHN;IAIfD,EAAE,EAAED,EAAE,GAAGK,SAAH,GAAeJ,EAJN;IAKfF,EALe;IAMfC;EANe,CAAjB;EAYAO,MAAM,CAACC,IAAPD,CAAYD,QAAZC,EAAsBE,OAAtBF,CAA8BG,GAAG,IAAI;IACnC,IAAI,OAAOJ,QAAQ,CAACI,GAAD,CAAf,KAAwC,WAA5C,EAAyD;MACvD,OAAOJ,QAAQ,CAACI,GAAD,CAAf;IACF;EACD,CAJDH;EAMA,OAAOD,QAAP;AACD,CAzCM","names":["paddingDefaultsHelper","props","defaults","merged","p","px","py","pt","pr","pb","pl","undefined","response","Object","keys","forEach","key"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/design-tokens/src/utils/paddingDefaultsHelper.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { PaddingProps } from '../system'\n\n/**\n * This function should repeat values specified in \"defaults\"  from the least\n * specific (p, px, py) to the most (pr, pr, pl, pb) without overriding any\n * explicit values specified in \"props\"\n *\n * Test scenarios:\n * ({ p: 'small' }, { p: 'medium' }) => { p: 'small' }\n * ({ pl: 'small' }, { p: 'medium' }) => { pl: 'small', pr: 'medium', py: 'medium'}\n * ({ pl: 'small' }, { px: 'medium' }) => { pl: 'small', pr: 'medium' }\n * ({ py: 'small' }, { p: 'medium' }) => { py: 'small', px: 'medium'}\n */\nexport const paddingDefaultsHelper = (\n  props: PaddingProps,\n  defaults: PaddingProps\n) => {\n  const merged = { ...defaults, ...props }\n  let { p, px, py, pt, pr, pb, pl } = merged\n\n  // Fill in gaps in directional sizes\n  pt = pt || py || p\n  pb = pb || py || p\n  py = pb === pt ? pb : undefined\n\n  pr = pr || px || p\n  pl = pl || px || p\n  px = pr === pl ? pr : undefined\n\n  if (px && px === py) {\n    return { p }\n  } else {\n    p = undefined\n  }\n\n  const response = {\n    pb: py ? undefined : pb,\n    pl: px ? undefined : pl,\n    pr: px ? undefined : pr,\n    pt: py ? undefined : pt,\n    px,\n    py,\n  } as const\n\n  type ResponseKey = keyof typeof response\n\n  /* Remove undefined values */\n  Object.keys(response).forEach(key => {\n    if (typeof response[key as ResponseKey] === 'undefined') {\n      delete response[key as ResponseKey]\n    }\n  })\n\n  return response\n}\n"]},"metadata":{},"sourceType":"module"}