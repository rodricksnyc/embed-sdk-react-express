{"ast":null,"code":"let _ = t => t,\n    _t,\n    _t2,\n    _t3;\n\nimport styled, { keyframes } from 'styled-components';\nconst slideIn = keyframes(_t || (_t = _`\n  0% {transform: translate(var(--direction-translate, 0), 0);}\n  100% {transform: translate(0);}\n`));\nconst slideOut = keyframes(_t2 || (_t2 = _`\n  0% {transform: translate(0);}\n  100% {transform: translate(var(--direction-translate, 0), 0);}\n`));\nexport const PanelSurface = styled.div.attrs(_ref => {\n  let {\n    direction: _direction = 'left'\n  } = _ref;\n  return {\n    'data-panel': true,\n    direction: _direction\n  };\n}).withConfig({\n  displayName: \"PanelSurface\",\n  componentId: \"sc-1ptnzaf-0\"\n})(_t3 || (_t3 = _`\n  --direction-translate: ${0};\n\n  animation-duration: ${0}ms;\n  background: ${0};\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  left: 0;\n  outline: none;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n\n  &.entering {\n    animation-name: ${0};\n  }\n  &.exiting {\n    animation-name: ${0};\n  }\n`), _ref2 => {\n  let {\n    direction\n  } = _ref2;\n  return direction === 'left' ? '-100%' : '100%';\n}, _ref3 => {\n  let {\n    theme: {\n      transitions\n    }\n  } = _ref3;\n  return transitions.moderate;\n}, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.colors.background;\n}, slideIn, slideOut);","map":{"version":3,"mappings":";;;;;AAMA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAMA,MAAMC,OAAkB,GAAGD,SAAS,cAAC;AACrC;AACA;AACA,CAHoC,EAApC;AAIA,MAAME,QAAmB,GAAGF,SAAS,gBAAC;AACtC;AACA;AACA,CAHqC,EAArC;AAUA,OAAO,MAAMG,YAAY,GAAGJ,MAAM,CAACK,GAAPL,CAAWM,KAAXN,CAC1B;EAAA,IAAC;IAAEO,SAAS,EAATA,UAAS,GAAG;EAAd,CAAD;EAAA,OAA6B;IAAE,cAAc,IAAhB;IAAsBA,SAAS,EAATA;EAAtB,CAA7B;AAAA,CAD0BP,EAE3BQ,UAF2BR,CAE3B;EAAAS;EAAAC;AAAA,CAF2BV,EAE3BW,eAAoB;AACrB,2BAAyB,CACmB;AAC5C;AACA,wBAAsB,CAAuD;AAC7E,gBAAc,CAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAoB,CAAU;AAC9B;AACA;AACA,sBAAoB,CAAW;AAC/B;AACA,CAvBC,CAF2BX,EAGD;EAAA,IAAC;IAAEO;EAAF,CAAD;EAAA,OACvBA,SAAS,KAAK,MAAdA,GAAuB,OAAvBA,GAAiC,MADV;AAAA,CAHCP,EAMJ;EAAA,IAAC;IAAEY,KAAK,EAAE;MAAEC;IAAF;EAAT,CAAD;EAAA,OAAgCA,WAAW,CAACC,QAA5C;AAAA,CANId,EAOZ;EAAA,IAAC;IAAEY;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACG,MAANH,CAAaI,UAA5B;AAAA,CAPYhB,EAoBNE,OApBMF,EAuBNG,QAvBMH,CAArB","names":["styled","keyframes","slideIn","slideOut","PanelSurface","div","attrs","direction","withConfig","displayName","componentId","_t3","theme","transitions","moderate","colors","background"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Panel/PanelSurface.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Keyframes } from 'styled-components'\nimport styled, { keyframes } from 'styled-components'\nimport type { PanelSurfaceProps } from './types'\n\n// We have to use animation/keyframes here instead of transition\n// transition starts after the class changes from entering to entered\n// but animation/keyframes starts as soon as the element is rendered\nconst slideIn: Keyframes = keyframes`\n  0% {transform: translate(var(--direction-translate, 0), 0);}\n  100% {transform: translate(0);}\n`\nconst slideOut: Keyframes = keyframes`\n  0% {transform: translate(0);}\n  100% {transform: translate(var(--direction-translate, 0), 0);}\n`\n\n/**\n * Produces the interior \"surface\" of an active `Panel`\n *\n * @private - Don't leverage this directly (it may be removed without notice)\n */\nexport const PanelSurface = styled.div.attrs<PanelSurfaceProps>(\n  ({ direction = 'left' }) => ({ 'data-panel': true, direction })\n)<PanelSurfaceProps>`\n  --direction-translate: ${({ direction }) =>\n    direction === 'left' ? '-100%' : '100%'};\n\n  animation-duration: ${({ theme: { transitions } }) => transitions.moderate}ms;\n  background: ${({ theme }) => theme.colors.background};\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  left: 0;\n  outline: none;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n\n  &.entering {\n    animation-name: ${slideIn};\n  }\n  &.exiting {\n    animation-name: ${slideOut};\n  }\n`\n"]},"metadata":{},"sourceType":"module"}