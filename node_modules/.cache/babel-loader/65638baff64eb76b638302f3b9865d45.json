{"ast":null,"code":"import { sanitizeFontFamily } from './sanitizeFont';\nexport const fontFacesToFamily = (faces, fallbacks) => {\n  const facesStr = typeof faces === 'string' ? faces : faces.join(',');\n  return sanitizeFontFamily(`${facesStr}, ${fallbacks.join(',')}`);\n};","map":{"version":3,"mappings":"AAKA,SAASA,kBAAT,QAAmC,gBAAnC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAC/BC,KAD+B,EAE/BC,SAF+B,KAG5B;EACH,MAAMC,QAAQ,GAAG,OAAOF,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACG,IAANH,CAAW,GAAXA,CAArD;EACA,OAAOF,kBAAkB,CAAE,GAAEI,QAAS,KAAID,SAAS,CAACE,IAAVF,CAAe,GAAfA,CAAoB,EAArC,CAAzB;AACD,CANM","names":["sanitizeFontFamily","fontFacesToFamily","faces","fallbacks","facesStr","join"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/design-tokens/src/utils/typography/fontFacesToFamily.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { sanitizeFontFamily } from './sanitizeFont'\n\nexport const fontFacesToFamily = (\n  faces: string[] | string,\n  fallbacks: string[]\n) => {\n  const facesStr = typeof faces === 'string' ? faces : faces.join(',')\n  return sanitizeFontFamily(`${facesStr}, ${fallbacks.join(',')}`)\n}\n"]},"metadata":{},"sourceType":"module"}