{"ast":null,"code":"let _ = t => t,\n    _t,\n    _t2,\n    _t3;\n\nimport { css } from 'styled-components';\n\nconst textTruncate = props => {\n  const {\n    truncateLines\n  } = props;\n\n  if (truncateLines && truncateLines > 1) {\n    return css(_t || (_t = _`\n      /* stylelint-disable value-no-vendor-prefix, property-no-vendor-prefix */\n      -webkit-box-orient: vertical;\n      display: -webkit-box;\n      -webkit-line-clamp: ${0};\n      overflow: hidden;\n      /* stylelint-enable */\n    `), truncateLines);\n  }\n\n  return css(_t2 || (_t2 = _`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  `));\n};\n\nexport const truncateCSS = props => css(_t3 || (_t3 = _`\n    ${0}\n  `), props.truncate || props.truncateLines ? textTruncate : null);","map":{"version":3,"mappings":";;;;;AAKA,SAASA,GAAT,QAAoB,mBAApB;;AASA,MAAMC,YAAY,GAAIC,KAAuB,IAAK;EAChD,MAAM;IAAEC;EAAF,IAAoBD,KAA1B;;EAEA,IAAIC,aAAa,IAAIA,aAAa,GAAG,CAArC,EAAwC;IAEtC,OAAOH,GAAG,cAAC;AACf;AACA;AACA;AACA,4BAA0B,CAAgB;AAC1C;AACA;AACA,KAPc,GAIcG,aAJd,CAAV;EAQF;;EACA,OAAOH,GAAG,gBAAC;AACb;AACA;AACA;AACA,GAJY,EAAV;AAKD,CAnBD;;AA0BA,OAAO,MAAMI,WAAW,GAAIF,KAAuB,IACjDF,GAAG,gBAAC;AACN,MAAI,CAA8D;AAClE,GAFK,GACCE,KAAK,CAACG,QAANH,IAAkBA,KAAK,CAACC,aAAxBD,GAAwCD,YAAxCC,GAAuD,IADxD,CADE","names":["css","textTruncate","props","truncateLines","truncateCSS","truncate"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Text/truncate.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { css } from 'styled-components'\n\nexport interface TruncateCSSProps {\n  /** Truncate text */\n  truncate?: boolean\n  /** Truncate at a specified number of lines (whole number) */\n  truncateLines?: number\n}\n\nconst textTruncate = (props: TruncateCSSProps) => {\n  const { truncateLines } = props\n\n  if (truncateLines && truncateLines > 1) {\n    // Despite the vendor prefixes below, this works in all modern browsers\n    return css`\n      /* stylelint-disable value-no-vendor-prefix, property-no-vendor-prefix */\n      -webkit-box-orient: vertical;\n      display: -webkit-box;\n      -webkit-line-clamp: ${truncateLines};\n      overflow: hidden;\n      /* stylelint-enable */\n    `\n  }\n  return css`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  `\n}\n\n/**\n * Helper function that allows external developers\n * to leverage `textTruncate` behavior as a CSS interpolated\n * string\n */\nexport const truncateCSS = (props: TruncateCSSProps) =>\n  css`\n    ${props.truncate || props.truncateLines ? textTruncate : null}\n  `\n"]},"metadata":{},"sourceType":"module"}