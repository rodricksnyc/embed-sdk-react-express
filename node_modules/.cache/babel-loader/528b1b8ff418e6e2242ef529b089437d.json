{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport styled from 'styled-components';\nimport { TextBase } from '../Text';\nimport { Truncate } from '../Truncate';\nimport { List } from '../List';\nimport { ListItem, ListItemContent, ListItemDetail, ListItemIcon } from '../ListItem';\nimport { NavTreeDisclosure } from '../NavTree/NavTreeDisclosure';\nimport { INDICATOR_SPACER } from '../NavTree';\nexport const NavList = styled(List).attrs(_ref => {\n  let {\n    color: _color = 'key'\n  } = _ref;\n  return {\n    color: _color\n  };\n}).withConfig({\n  displayName: \"NavList\",\n  componentId: \"sc-6lju3j-0\"\n})(_t || (_t = _`\n  ${0}, ${0} {\n    border-bottom-right-radius: 5rem;\n    border-top-right-radius: 5rem;\n\n    &[aria-selected='true'] {\n      ${0},\n      ${0},\n      ${0},\n      ${0} svg {\n        color: ${0};\n      }\n    }\n  }\n\n  ${0} {\n    svg {\n      transition: color\n        ${0};\n    }\n  }\n\n  & > ${0} {\n    ${0} {\n      padding-left: ${0};\n    }\n  }\n`), NavTreeDisclosure, ListItemContent, ListItemDetail, TextBase, Truncate, ListItemIcon, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.key;\n}, ListItemIcon, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return `${theme.transitions.quick}ms ${theme.easings.ease}`;\n}, ListItem, ListItemContent, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  const iconGutterSize = theme.sizes.medium;\n  return `calc(${iconGutterSize} + ${INDICATOR_SPACER})`;\n});","map":{"version":3,"mappings":";;;AAKA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SACEC,QADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,YAJF,QAKO,aALP;AAMA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAUA,OAAO,MAAMC,OAAO,GAAGV,MAAM,CAACG,IAAD,CAANH,CAAaW,KAAbX,CAAmB;EAAA,IAAC;IAAEY,KAAK,EAALA,MAAK,GAAG;EAAV,CAAD;EAAA,OAAwB;IAAEA,KAAK,EAALA;EAAF,CAAxB;AAAA,CAAnBZ,EAAsDa,UAAtDb,CAAsD;EAAAc;EAAAC;AAAA,CAAtDf,EAAsDgB,aAAC;AAC9E,IAAE,CAAoB,KAAE,CAAkB;AAC1C;AACA;AACA;AACA;AACA,QAAM,CAAiB;AACvB,QAAM,CAAW;AACjB,QAAM,CAAW;AACjB,QAAM,CAAe;AACrB,iBAAe,CAAkC;AACjD;AACA;AACA;AACA;AACA,IAAE,CAAe;AACjB;AACA;AACA,UAAQ,CAAsE;AAC9E;AACA;AACA;AACA,QAAM,CAAW;AACjB,MAAI,CAAkB;AACtB,sBAAoB,CAGZ;AACR;AACA;AACA,CA9B6E,CAAtDhB,EACnBQ,iBADmBR,EACGK,eADHL,EAMfM,cANeN,EAOfC,QAPeD,EAQfE,QAReF,EASfO,YATeP,EAUN;EAAA,IAAC;IAAEiB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,MAAND,CAAaE,GAA5B;AAAA,CAVMnB,EAenBO,YAfmBP,EAkBb;EAAA,IAAC;IAAEiB;EAAF,CAAD;EAAA,OAAgB,GAAEA,KAAK,CAACG,WAANH,CAAkBI,KAAM,MAAKJ,KAAK,CAACK,OAANL,CAAcM,IAAK,EAAlE;AAAA,CAlBavB,EAsBfI,QAtBeJ,EAuBjBK,eAvBiBL,EAwBD,SAAe;EAAA,IAAd;IAAEiB;EAAF,CAAc;EAC7B,MAAMO,cAAc,GAAGP,KAAK,CAACQ,KAANR,CAAYS,MAAnC;EACA,OAAQ,QAAOF,cAAe,MAAKf,gBAAiB,GAApD;AACD,CA3BgBT,CAAhB","names":["styled","TextBase","Truncate","List","ListItem","ListItemContent","ListItemDetail","ListItemIcon","NavTreeDisclosure","INDICATOR_SPACER","NavList","attrs","color","withConfig","displayName","componentId","_t","theme","colors","key","transitions","quick","easings","ease","iconGutterSize","sizes","medium"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/NavList/NavList.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport styled from 'styled-components'\nimport { TextBase } from '../Text'\nimport { Truncate } from '../Truncate'\nimport { List } from '../List'\nimport {\n  ListItem,\n  ListItemContent,\n  ListItemDetail,\n  ListItemIcon,\n} from '../ListItem'\nimport { NavTreeDisclosure } from '../NavTree/NavTreeDisclosure'\nimport { INDICATOR_SPACER } from '../NavTree'\n\n/**\n * `NavList` is a variation of `List` that expects to wrap around a composition of `ListItem`s, `NavTree`s and `NavTreeItem`s\n *   - `ListItem`, `NavTree` and `NavTreeItem`  border-radius circular on the right side\n *   - `ListItem`, `NavTree` and `NavTreeItem` selected or \"active\"\n *     - text color is `theme.colors.key`\n *     - background color is `keySubtle`\n *   - `ListItem` at the root are indented to align properly with `Tree`(s) at the root as well\n */\nexport const NavList = styled(List).attrs(({ color = 'key' }) => ({ color }))`\n  ${NavTreeDisclosure}, ${ListItemContent} {\n    border-bottom-right-radius: 5rem;\n    border-top-right-radius: 5rem;\n\n    &[aria-selected='true'] {\n      ${ListItemDetail},\n      ${TextBase},\n      ${Truncate},\n      ${ListItemIcon} svg {\n        color: ${({ theme }) => theme.colors.key};\n      }\n    }\n  }\n\n  ${ListItemIcon} {\n    svg {\n      transition: color\n        ${({ theme }) => `${theme.transitions.quick}ms ${theme.easings.ease}`};\n    }\n  }\n\n  & > ${ListItem} {\n    ${ListItemContent} {\n      padding-left: ${({ theme }) => {\n        const iconGutterSize = theme.sizes.medium\n        return `calc(${iconGutterSize} + ${INDICATOR_SPACER})`\n      }};\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}