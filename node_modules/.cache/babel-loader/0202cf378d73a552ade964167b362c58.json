{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport function useListWidths(_ref) {\n  let {\n    isVisible,\n    minWidth: propsMinWidth,\n    width: propsWidth,\n    wrapperElement\n  } = _ref;\n  const [width, setWidth] = useState('auto');\n  const [minWidth, setMinWidth] = useState();\n  useEffect(() => {\n    function getWrapperWidth() {\n      return wrapperElement && wrapperElement.getBoundingClientRect().width;\n    }\n\n    if (isVisible) {\n      const newWidth = propsWidth || getWrapperWidth() || 'auto';\n      const newMinWidth = propsMinWidth || (propsWidth === 'auto' ? getWrapperWidth() : undefined);\n      setWidth(newWidth);\n      setMinWidth(newMinWidth);\n    }\n  }, [propsMinWidth, propsWidth, wrapperElement, isVisible]);\n  return {\n    minWidth,\n    width\n  };\n}","map":{"version":3,"mappings":"AAKA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAQA,OAAO,SAASC,aAAT,OAKe;EAAA,IALQ;IAC5BC,SAD4B;IAE5BC,QAAQ,EAAEC,aAFkB;IAG5BC,KAAK,EAAEC,UAHqB;IAI5BC;EAJ4B,CAKR;EACpB,MAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBR,QAAQ,CAAsB,MAAtB,CAAlC;EACA,MAAM,CAACG,QAAD,EAAWM,WAAX,IAA0BT,QAAQ,EAAxC;EAEAD,SAAS,CAAC,MAAM;IAGd,SAASW,eAAT,GAA2B;MACzB,OAAOH,cAAc,IAAIA,cAAc,CAACI,qBAAfJ,GAAuCF,KAAhE;IACF;;IACA,IAAIH,SAAJ,EAAe;MACb,MAAMU,QAAQ,GAAGN,UAAU,IAAII,eAAe,EAA7BJ,IAAmC,MAApD;MACA,MAAMO,WAAW,GACfT,aAAa,KAAKE,UAAU,KAAK,MAAfA,GAAwBI,eAAe,EAAvCJ,GAA4CQ,SAAjD,CADf;MAGAN,QAAQ,CAACI,QAAD,CAARJ;MACAC,WAAW,CAACI,WAAD,CAAXJ;IACF;EACD,CAdQ,EAcN,CAACL,aAAD,EAAgBE,UAAhB,EAA4BC,cAA5B,EAA4CL,SAA5C,CAdM,CAATH;EAgBA,OAAO;IAAEI,QAAF;IAAYE;EAAZ,CAAP;AACF","names":["useEffect","useState","useListWidths","isVisible","minWidth","propsMinWidth","width","propsWidth","wrapperElement","setWidth","setMinWidth","getWrapperWidth","getBoundingClientRect","newWidth","newMinWidth","undefined"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Inputs/Combobox/utils/useListWidths.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useEffect, useState } from 'react'\nimport type { WidthProps, MinWidthProps } from '@looker/design-tokens'\n\nexport interface UseListWidthProps extends MinWidthProps, WidthProps {\n  isVisible?: boolean\n  wrapperElement?: HTMLElement | null\n}\n\nexport function useListWidths({\n  isVisible,\n  minWidth: propsMinWidth,\n  width: propsWidth,\n  wrapperElement,\n}: UseListWidthProps) {\n  const [width, setWidth] = useState<WidthProps['width']>('auto')\n  const [minWidth, setMinWidth] = useState<MinWidthProps['minWidth']>()\n\n  useEffect(() => {\n    // Avoid calling expensive getBoundingClientWidth if width/minWidth are defined in props\n    // or if the list is currently not visible\n    function getWrapperWidth() {\n      return wrapperElement && wrapperElement.getBoundingClientRect().width\n    }\n    if (isVisible) {\n      const newWidth = propsWidth || getWrapperWidth() || 'auto'\n      const newMinWidth =\n        propsMinWidth || (propsWidth === 'auto' ? getWrapperWidth() : undefined)\n\n      setWidth(newWidth)\n      setMinWidth(newMinWidth)\n    }\n  }, [propsMinWidth, propsWidth, wrapperElement, isVisible])\n\n  return { minWidth, width }\n}\n"]},"metadata":{},"sourceType":"module"}