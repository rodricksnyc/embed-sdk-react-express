{"ast":null,"code":"import React from 'react';\nimport { ModalLoading } from '../../Modal/ModalLayout';\nimport { PopoverContent } from './PopoverContent';\nimport { PopoverFooter } from './PopoverFooter';\nimport { PopoverHeader } from './PopoverHeader';\nexport const PopoverLayout = _ref => {\n  let {\n    children,\n    closeButton,\n    footer: _footer = true,\n    header,\n    hideHeader: _hideHeader = false,\n    isLoading\n  } = _ref;\n  const internalFooter = typeof _footer === 'boolean' ? null : _footer;\n  return React.createElement(React.Fragment, null, header && React.createElement(PopoverHeader, {\n    hidden: _hideHeader,\n    hideClose: !!_footer\n  }, header), React.createElement(PopoverContent, {\n    hasFooter: !!_footer,\n    hasHeader: !!header\n  }, isLoading ? React.createElement(ModalLoading, null) : children), _footer && React.createElement(PopoverFooter, {\n    closeButton: closeButton\n  }, internalFooter));\n};","map":{"version":3,"mappings":"AAKA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAWA,OAAO,MAAMC,aAAa,GAAG,QAOH;EAAA,IAPI;IAC5BC,QAD4B;IAE5BC,WAF4B;IAG5BC,MAAM,EAANA,OAAM,GAAG,IAHmB;IAI5BC,MAJ4B;IAK5BC,UAAU,EAAVA,WAAU,GAAG,KALe;IAM5BC;EAN4B,CAOJ;EACxB,MAAMC,cAAc,GAAG,OAAOJ,OAAP,KAAkB,SAAlB,GAA8B,IAA9B,GAAqCA,OAA5D;EAEA,OACER,0CACGS,MAAM,IACLT,oBAACI,aAAD,EAAc;IAACS,MAAM,EAAEH,WAAT;IAAqBI,SAAS,EAAE,CAAC,CAACN;EAAlC,CAAd,EACGC,MADH,CAFJ,EAMET,oBAACE,cAAD,EAAe;IAACa,SAAS,EAAE,CAAC,CAACP,OAAd;IAAsBQ,SAAS,EAAE,CAAC,CAACP;EAAnC,CAAf,EACGE,SAAS,GAAGX,oBAACC,YAAD,EAAa,IAAb,CAAH,GAAsBK,QADlC,CANF,EASGE,OAAM,IACLR,oBAACG,aAAD,EAAc;IAACI,WAAW,EAAEA;EAAd,CAAd,EACGK,cADH,CAVJ,CADF;AAiBD,CA3BM","names":["React","ModalLoading","PopoverContent","PopoverFooter","PopoverHeader","PopoverLayout","children","closeButton","footer","header","hideHeader","isLoading","internalFooter","hidden","hideClose","hasFooter","hasHeader"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Popover/Layout/PopoverLayout.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { ModalLayoutProps } from '../../Modal/ModalLayout'\nimport { ModalLoading } from '../../Modal/ModalLayout'\nimport { PopoverContent } from './PopoverContent'\nimport type { PopoverFooterProps } from './PopoverFooter'\nimport { PopoverFooter } from './PopoverFooter'\nimport { PopoverHeader } from './PopoverHeader'\n\nexport type PopoverLayoutProps = ModalLayoutProps &\n  Pick<PopoverFooterProps, 'closeButton'> & {\n    /**\n     * Header will not be visually available but it will still properly announced in screen reader scenarios\n     * @default false\n     */\n    hideHeader?: boolean\n  }\n\nexport const PopoverLayout = ({\n  children,\n  closeButton,\n  footer = true,\n  header,\n  hideHeader = false,\n  isLoading,\n}: PopoverLayoutProps) => {\n  const internalFooter = typeof footer === 'boolean' ? null : footer\n\n  return (\n    <>\n      {header && (\n        <PopoverHeader hidden={hideHeader} hideClose={!!footer}>\n          {header}\n        </PopoverHeader>\n      )}\n      <PopoverContent hasFooter={!!footer} hasHeader={!!header}>\n        {isLoading ? <ModalLoading /> : children}\n      </PopoverContent>\n      {footer && (\n        <PopoverFooter closeButton={closeButton}>\n          {internalFooter}\n        </PopoverFooter>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}