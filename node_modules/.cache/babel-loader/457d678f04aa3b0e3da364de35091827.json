{"ast":null,"code":"export const mergeLocaleObjects = (locales, localeString, translations, dateLocale) => {\n  const translationsArr = locales.map(locale => locale.resources[localeString]);\n  const mergedTranslations = Object.assign({}, ...translationsArr, translations);\n  const dateLocaleObject = dateLocale ? {\n    dateLocale\n  } : {};\n  return Object.assign({\n    locale: localeString\n  }, dateLocaleObject, ...locales, {\n    resources: {\n      [localeString]: mergedTranslations\n    }\n  });\n};","map":{"version":3,"mappings":"AAkBA,OAAO,MAAMA,kBAAkB,GAAG,CAChCC,OADgC,EAEhCC,YAFgC,EAGhCC,YAHgC,EAIhCC,UAJgC,KAKT;EACvB,MAAMC,eAAe,GAAGJ,OAAO,CAACK,GAARL,CAAYM,MAAM,IAAIA,MAAM,CAACC,SAAPD,CAAiBL,YAAjBK,CAAtBN,CAAxB;EAEA,MAAMQ,kBAAkB,GAAGC,MAAM,CAACC,MAAPD,CAAc,EAAdA,EAAkB,GAAGL,eAArBK,EAAsCP,YAAtCO,CAA3B;EACA,MAAME,gBAAgB,GAAGR,UAAU,GAAG;IAAEA;EAAF,CAAH,GAAoB,EAAvD;EACA,OAAOM,MAAM,CAACC,MAAPD,CAAc;IAAEH,MAAM,EAAEL;EAAV,CAAdQ,EAAwCE,gBAAxCF,EAA0D,GAAGT,OAA7DS,EAAsE;IAE3EF,SAAS,EAAE;MAAE,CAACN,YAAD,GAAgBO;IAAlB;EAFgE,CAAtEC,CAAP;AAID,CAdM","names":["mergeLocaleObjects","locales","localeString","translations","dateLocale","translationsArr","map","locale","resources","mergedTranslations","Object","assign","dateLocaleObject"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/i18n/src/mergeLocaleObjects.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Locale } from 'date-fns'\nimport type { Resource } from 'i18next'\nimport type { I18nStateWithDates } from './types'\n\n/**\n * For use in a package's individual locale files,\n * to merge in imported locale objects from other dependencies\n * @param locales the list of locale objects from dependencies\n * @param localeString e.g. 'en' or 'ja-JP'\n * @param translations the namespaced translations object for the current package\n * @param dateLocale the date-fns locale object, if used\n * @returns a merged locale object that may have dateLocale\n */\nexport const mergeLocaleObjects = (\n  locales: I18nStateWithDates[],\n  localeString: string,\n  translations: Resource,\n  dateLocale?: Locale\n): I18nStateWithDates => {\n  const translationsArr = locales.map(locale => locale.resources[localeString])\n  // Merge all namespaced translations into one object\n  const mergedTranslations = Object.assign({}, ...translationsArr, translations)\n  const dateLocaleObject = dateLocale ? { dateLocale } : {}\n  return Object.assign({ locale: localeString }, dateLocaleObject, ...locales, {\n    // Overwrite resources with the merged resources\n    resources: { [localeString]: mergedTranslations },\n  })\n}\n"]},"metadata":{},"sourceType":"module"}