{"ast":null,"code":"import getLuminance from 'polished/lib/color/getLuminance';\nimport shade from 'polished/lib/color/shade';\nimport tint from 'polished/lib/color/tint';\nimport { scaleMixAmount } from './scaleMixAmount';\nexport const tintOrShadeUiColor = (mixAmount, color) => {\n  const isBright = getLuminance(color) > 0.5;\n  const mixAdjustment = isBright ? mixAmount : scaleMixAmount(mixAmount, 1.5);\n  const mixPercent = mixAdjustment > 100 ? 1 : mixAdjustment / 100;\n  return (isBright ? shade : tint)(mixPercent, color);\n};","map":{"version":3,"mappings":"AAKA,OAAOA,YAAP,MAAyB,iCAAzB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAgBA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,SAAD,EAAoBC,KAApB,KAAsC;EACtE,MAAMC,QAAQ,GAAGP,YAAY,CAACM,KAAD,CAAZN,GAAsB,GAAvC;EACA,MAAMQ,aAAa,GAAGD,QAAQ,GAAGF,SAAH,GAAeF,cAAc,CAACE,SAAD,EAAY,GAAZ,CAA3D;EAGA,MAAMI,UAAU,GAAGD,aAAa,GAAG,GAAhBA,GAAsB,CAAtBA,GAA0BA,aAAa,GAAG,GAA7D;EAEA,OAAO,CAACD,QAAQ,GAAGN,KAAH,GAAWC,IAApB,EAA0BO,UAA1B,EAAsCH,KAAtC,CAAP;AACD,CARM","names":["getLuminance","shade","tint","scaleMixAmount","tintOrShadeUiColor","mixAmount","color","isBright","mixAdjustment","mixPercent"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/design-tokens/src/color/utils/tintOrShadeUiColor.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport getLuminance from 'polished/lib/color/getLuminance'\nimport shade from 'polished/lib/color/shade'\nimport tint from 'polished/lib/color/tint'\nimport { scaleMixAmount } from './scaleMixAmount'\n\n/**\n * Tints or shades a color based on the luminosity of the color\n *\n * Used for generating our UI colors based on the background color\n *\n * If the color has a higher luminosity, a light background for example,\n * the color is shaded, returning a color mixed with black\n *\n * For colors with lower luminosity, dark background colors for example,\n * the colors is tinted,returning a color mixed with white\n *\n * @param mixAmount 0 - 100\n * @param color\n */\nexport const tintOrShadeUiColor = (mixAmount: number, color: string) => {\n  const isBright = getLuminance(color) > 0.5\n  const mixAdjustment = isBright ? mixAmount : scaleMixAmount(mixAmount, 1.5)\n\n  /* shade & tint functions cannot exceed 100% */\n  const mixPercent = mixAdjustment > 100 ? 1 : mixAdjustment / 100\n\n  return (isBright ? shade : tint)(mixPercent, color)\n}\n"]},"metadata":{},"sourceType":"module"}