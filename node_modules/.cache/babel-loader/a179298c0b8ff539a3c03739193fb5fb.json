{"ast":null,"code":"import { useContext } from 'react';\nimport { useSafeLayoutEffect } from '../../../../utils';\nexport function useInputPropRefs(_ref, context) {\n  let {\n    autoComplete = true,\n    freeInput = false,\n    inputReadOnly = false\n  } = _ref;\n  const {\n    autoCompletePropRef,\n    freeInputPropRef,\n    inputReadOnlyPropRef\n  } = useContext(context);\n  useSafeLayoutEffect(() => {\n    if (autoCompletePropRef) autoCompletePropRef.current = autoComplete;\n  }, [autoComplete]);\n  useSafeLayoutEffect(() => {\n    if (freeInputPropRef) freeInputPropRef.current = freeInput;\n  }, [freeInput]);\n  useSafeLayoutEffect(() => {\n    if (inputReadOnlyPropRef) inputReadOnlyPropRef.current = inputReadOnly;\n  }, [inputReadOnly]);\n}","map":{"version":3,"mappings":"AAKA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,mBAAT,QAAoC,mBAApC;AAOA,OAAO,SAASC,gBAAT,OASLC,OATK,EAUL;EAAA,IAFA;IAAEC,YAAY,GAAG,IAAjB;IAAuBC,SAAS,GAAG,KAAnC;IAA0CC,aAAa,GAAG;EAA1D,CAEA;EACA,MAAM;IAAEC,mBAAF;IAAuBC,gBAAvB;IAAyCC;EAAzC,IACJT,UAAU,CAACG,OAAD,CADZ;EAGAF,mBAAmB,CAAC,MAAM;IACxB,IAAIM,mBAAJ,EAAyBA,mBAAmB,CAACG,OAApBH,GAA8BH,YAA9BG;EAE1B,CAHkB,EAGhB,CAACH,YAAD,CAHgB,CAAnBH;EAKAA,mBAAmB,CAAC,MAAM;IACxB,IAAIO,gBAAJ,EAAsBA,gBAAgB,CAACE,OAAjBF,GAA2BH,SAA3BG;EAEvB,CAHkB,EAGhB,CAACH,SAAD,CAHgB,CAAnBJ;EAKAA,mBAAmB,CAAC,MAAM;IACxB,IAAIQ,oBAAJ,EAA0BA,oBAAoB,CAACC,OAArBD,GAA+BH,aAA/BG;EAE3B,CAHkB,EAGhB,CAACH,aAAD,CAHgB,CAAnBL;AAIF","names":["useContext","useSafeLayoutEffect","useInputPropRefs","context","autoComplete","freeInput","inputReadOnly","autoCompletePropRef","freeInputPropRef","inputReadOnlyPropRef","current"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Inputs/Combobox/utils/useInputPropRefs.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { Context } from 'react'\nimport { useContext } from 'react'\nimport { useSafeLayoutEffect } from '../../../../utils'\nimport type { ComboboxInputProps, ComboboxMultiInputProps } from '../types'\nimport type {\n  ComboboxContextProps,\n  ComboboxMultiContextProps,\n} from '../ComboboxContext'\n\nexport function useInputPropRefs<\n  TProps extends\n    | ComboboxInputProps\n    | ComboboxMultiInputProps = ComboboxInputProps,\n  TContext extends\n    | ComboboxContextProps\n    | ComboboxMultiContextProps = ComboboxContextProps\n>(\n  { autoComplete = true, freeInput = false, inputReadOnly = false }: TProps,\n  context: Context<TContext>\n) {\n  const { autoCompletePropRef, freeInputPropRef, inputReadOnlyPropRef } =\n    useContext(context)\n\n  useSafeLayoutEffect(() => {\n    if (autoCompletePropRef) autoCompletePropRef.current = autoComplete\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autoComplete])\n\n  useSafeLayoutEffect(() => {\n    if (freeInputPropRef) freeInputPropRef.current = freeInput\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [freeInput])\n\n  useSafeLayoutEffect(() => {\n    if (inputReadOnlyPropRef) inputReadOnlyPropRef.current = inputReadOnly\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputReadOnly])\n}\n"]},"metadata":{},"sourceType":"module"}