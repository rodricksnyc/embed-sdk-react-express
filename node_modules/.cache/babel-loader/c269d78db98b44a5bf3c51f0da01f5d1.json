{"ast":null,"code":"let _2 = t => t,\n    _t;\n\nimport { endOfMonth, getDay, getDaysInMonth, isSameDay, startOfMonth, setDate, isAfter, isBefore } from 'date-fns';\nimport React, { useCallback } from 'react';\nimport styled, { useTheme } from 'styled-components';\nimport { fadeIn } from '@looker/design-tokens';\nimport { Grid } from '../Layout';\nimport { Day } from './Day';\nimport { Cell } from './Cell';\nimport { MonthTitle } from './MonthTitle';\n\nconst getMonthPadding = (month, firstDayOfWeek) => {\n  const startDate = startOfMonth(month);\n  const endDate = endOfMonth(month);\n  const startDay = getDay(startDate);\n  const endDay = getDay(endDate);\n  const startPadding = correctNegativePadding(startDay - firstDayOfWeek);\n  const endPadding = 6 - endDay + firstDayOfWeek;\n  return {\n    endPadding,\n    startPadding\n  };\n};\n\nconst correctNegativePadding = padding => padding < 0 ? padding + 7 : padding;\n\nconst getDaysArray = (month, startPadding, endPadding) => {\n  const daysInMonth = getDaysInMonth(month);\n  const totalDays = startPadding + daysInMonth + endPadding;\n  return Array.from(Array(totalDays), (_, i) => {\n    if (i < startPadding) return 'before';\n    if (i > totalDays - endPadding - 1) return 'after';\n    const dayOfMonth = i - startPadding + 1;\n    return setDate(month, dayOfMonth);\n  });\n};\n\nconst getRangeType = _ref => {\n  let {\n    datesSelected,\n    draftTo\n  } = _ref;\n  if (datesSelected.length === 2) return 'selected';\n  if (draftTo) return 'draft';\n  return 'none';\n};\n\nconst getRangePosition = (day, month, _ref2) => {\n  let {\n    datesSelected,\n    draftTo\n  } = _ref2;\n  const start = datesSelected[0];\n  const end = datesSelected[1] || draftTo;\n  if (!start || !end) return undefined;\n\n  if (day === 'before') {\n    if (start && end && isBefore(start, startOfMonth(month)) && isAfter(end, startOfMonth(month))) {\n      return 'middle';\n    }\n\n    return undefined;\n  }\n\n  if (day === 'after') {\n    if (start && end && isBefore(start, endOfMonth(month)) && isAfter(end, endOfMonth(month))) {\n      return 'middle';\n    }\n\n    return undefined;\n  }\n\n  if (isSameDay(day, start) && isSameDay(day, end)) return undefined;\n  if (isSameDay(day, start)) return 'start';\n  if (isSameDay(day, end)) return 'end';\n  if (isAfter(day, start) && isBefore(day, end)) return 'middle';\n  return undefined;\n};\n\nexport const Month = styled(_ref3 => {\n  let {\n    className,\n    datesSelected,\n    draftTo,\n    firstDayOfWeek,\n    fullRender,\n    index,\n    locale,\n    onSelect,\n    onDraftSelect,\n    date,\n    setItemPosition\n  } = _ref3;\n  const {\n    startPadding,\n    endPadding\n  } = getMonthPadding(date, firstDayOfWeek);\n  const days = getDaysArray(date, startPadding, endPadding);\n  const rangeType = getRangeType({\n    datesSelected,\n    draftTo\n  });\n  const ref = useCallback(element => {\n    if (element) {\n      setItemPosition(index, element);\n    }\n  }, [setItemPosition, index]);\n  const titleInline = startPadding > 2;\n  const firstDayRangePosition = getRangePosition(startOfMonth(date), date, {\n    datesSelected,\n    draftTo\n  });\n  const titleRangeType = !titleInline && fullRender && firstDayRangePosition === 'middle' ? rangeType : 'none';\n  const {\n    space\n  } = useTheme();\n  const height = `calc(${space.u8} * ${days.length / 7})`;\n  return React.createElement(\"div\", {\n    className: className,\n    ref: ref\n  }, React.createElement(MonthTitle, {\n    month: date,\n    rangePosition: firstDayRangePosition,\n    rangeType: titleRangeType,\n    inline: titleInline,\n    locale: locale\n  }), React.createElement(Grid, {\n    columns: 7,\n    gap: \"none\",\n    height: height,\n    className: fullRender ? 'full-render' : ''\n  }, fullRender && days.map((day, i) => {\n    const rangePosition = getRangePosition(day, date, {\n      datesSelected,\n      draftTo\n    });\n    return React.createElement(Cell, {\n      key: i,\n      weekStart: i % 7 === 0,\n      weekEnd: i % 7 === 6,\n      rangeType: rangeType,\n      rangePosition: rangePosition\n    }, typeof day !== 'string' && React.createElement(Day, {\n      date: day,\n      locale: locale,\n      onSelect: onSelect,\n      onDraftSelect: onDraftSelect,\n      selected: datesSelected.some(date => isSameDay(date, day))\n    }));\n  })));\n}).withConfig({\n  displayName: \"Month\",\n  componentId: \"sc-1d3pod3-0\"\n})(_t || (_t = _2`\n  width: fit-content;\n  ${0} {\n    /* Use auto instead of the default minmax(0, 1fr)\n    so that 1st & last cells in the row can be larger */\n    grid-template-columns: repeat(7, auto);\n    &.full-render {\n      animation-duration: ${0};\n      animation-fill-mode: forwards;\n      animation-name: ${0};\n    }\n  }\n`), Grid, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return `${theme.transitions.moderate}ms`;\n}, fadeIn);","map":{"version":3,"mappings":"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","names":["endOfMonth","getDay","getDaysInMonth","isSameDay","startOfMonth","setDate","isAfter","isBefore","React","useCallback","styled","useTheme","fadeIn","Grid","Day","Cell","MonthTitle","getMonthPadding","month","firstDayOfWeek","startDate","endDate","startDay","endDay","startPadding","correctNegativePadding","endPadding","padding","getDaysArray","daysInMonth","totalDays","Array","from","_","i","dayOfMonth","getRangeType","datesSelected","draftTo","length","getRangePosition","day","start","end","undefined","Month","className","fullRender","index","locale","onSelect","onDraftSelect","date","setItemPosition","days","rangeType","ref","element","titleInline","firstDayRangePosition","titleRangeType","space","height","u8","rangePosition","inline","columns","gap","map","key","weekStart","weekEnd","selected","some","withConfig","displayName","componentId","_t","theme","transitions","moderate"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Calendar/Month.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport {\n  endOfMonth,\n  getDay,\n  getDaysInMonth,\n  isSameDay,\n  startOfMonth,\n  setDate,\n  isAfter,\n  isBefore,\n} from 'date-fns'\nimport React, { useCallback } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { fadeIn } from '@looker/design-tokens'\nimport { Grid } from '../Layout'\nimport { Day } from './Day'\nimport { Cell } from './Cell'\nimport { MonthTitle } from './MonthTitle'\nimport type {\n  ScrollableDateListItemProps,\n  DateStateProps,\n  MonthBaseProps,\n} from './types'\n\nexport type MonthPropsWithScroll = MonthBaseProps & ScrollableDateListItemProps\n\nconst getMonthPadding = (month: Date, firstDayOfWeek: number) => {\n  const startDate = startOfMonth(month)\n  const endDate = endOfMonth(month)\n  const startDay = getDay(startDate)\n  const endDay = getDay(endDate)\n  const startPadding = correctNegativePadding(startDay - firstDayOfWeek)\n  const endPadding = 6 - endDay + firstDayOfWeek\n  return { endPadding, startPadding }\n}\n\n/**\n * Negative padding never makes sense, so add 7 if it's negative.\n * broken use case was 0 start day, 1 firstDayOfWeek which created -1 startPadding\n * before this function\n * @returns padding + 7 if it's negative, otherwise return padding unchanged\n */\nconst correctNegativePadding = (padding: number) =>\n  padding < 0 ? padding + 7 : padding\n\ntype CalendarCell = Date | 'before' | 'after'\n\nconst getDaysArray = (\n  month: Date,\n  startPadding: number,\n  endPadding: number\n): CalendarCell[] => {\n  const daysInMonth = getDaysInMonth(month)\n  const totalDays = startPadding + daysInMonth + endPadding\n  return Array.from(Array(totalDays), (_, i) => {\n    // spacers for the days before the 1st of the month\n    if (i < startPadding) return 'before'\n    // spacers for the days after the last of the month\n    if (i > totalDays - endPadding - 1) return 'after'\n    // date at the nth of the month\n    const dayOfMonth = i - startPadding + 1\n    return setDate(month, dayOfMonth)\n  })\n}\n\nconst getRangeType = ({ datesSelected, draftTo }: DateStateProps) => {\n  if (datesSelected.length === 2) return 'selected'\n  if (draftTo) return 'draft'\n  return 'none'\n}\n\nconst getRangePosition = (\n  day: CalendarCell,\n  month: Date,\n  { datesSelected, draftTo }: DateStateProps\n) => {\n  const start = datesSelected[0]\n  const end = datesSelected[1] || draftTo\n  if (!start || !end) return undefined\n\n  if (day === 'before') {\n    // Empty cell at the beginning of the month & range spans months\n    if (\n      start &&\n      end &&\n      isBefore(start, startOfMonth(month)) &&\n      isAfter(end, startOfMonth(month))\n    ) {\n      return 'middle'\n    }\n    return undefined\n  }\n\n  if (day === 'after') {\n    // Empty cell at the beginning of the month & range spans months\n    if (\n      start &&\n      end &&\n      isBefore(start, endOfMonth(month)) &&\n      isAfter(end, endOfMonth(month))\n    ) {\n      return 'middle'\n    }\n    return undefined\n  }\n\n  // Range starts AND ends on the day\n  if (isSameDay(day, start) && isSameDay(day, end)) return undefined\n  // Range starts on the day\n  if (isSameDay(day, start)) return 'start'\n  // Range ends on the day\n  if (isSameDay(day, end)) return 'end'\n  // Range spans across the day\n  if (isAfter(day, start) && isBefore(day, end)) return 'middle'\n  // Day is outside range\n  return undefined\n}\n\nexport const Month = styled(\n  ({\n    className,\n    datesSelected,\n    draftTo,\n    firstDayOfWeek,\n    fullRender,\n    index,\n    locale,\n    onSelect,\n    onDraftSelect,\n    date,\n    setItemPosition,\n  }: MonthPropsWithScroll) => {\n    const { startPadding, endPadding } = getMonthPadding(date, firstDayOfWeek)\n    const days = getDaysArray(date, startPadding, endPadding)\n    // For highlighting the range on the Cell\n    const rangeType = getRangeType({ datesSelected, draftTo })\n\n    // Calls setItemPosition to store the current child's position\n    // in the parent list\n    const ref = useCallback(\n      (element: HTMLElement | null) => {\n        if (element) {\n          setItemPosition(index, element)\n        }\n      },\n      [setItemPosition, index]\n    )\n\n    // If there are 3 or more empty days in the 1st week\n    // title should go inline\n    const titleInline = startPadding > 2\n    // Does the selected/draft range span this month?\n    const firstDayRangePosition = getRangePosition(startOfMonth(date), date, {\n      datesSelected,\n      draftTo,\n    })\n    // If so, the background should also go on the title\n    // but not till fully rendered and not needed if it's inline\n    const titleRangeType =\n      !titleInline && fullRender && firstDayRangePosition === 'middle'\n        ? rangeType\n        : 'none'\n\n    const { space } = useTheme()\n    const height = `calc(${space.u8} * ${days.length / 7})`\n\n    return (\n      <div className={className} ref={ref}>\n        <MonthTitle\n          month={date}\n          rangePosition={firstDayRangePosition}\n          rangeType={titleRangeType}\n          inline={titleInline}\n          locale={locale}\n        />\n        <Grid\n          columns={7}\n          gap=\"none\"\n          height={height}\n          className={fullRender ? 'full-render' : ''}\n        >\n          {fullRender &&\n            days.map((day, i) => {\n              const rangePosition = getRangePosition(day, date, {\n                datesSelected,\n                draftTo,\n              })\n              return (\n                <Cell\n                  key={i}\n                  weekStart={i % 7 === 0}\n                  weekEnd={i % 7 === 6}\n                  rangeType={rangeType}\n                  rangePosition={rangePosition}\n                >\n                  {typeof day !== 'string' && (\n                    <Day\n                      date={day}\n                      locale={locale}\n                      onSelect={onSelect}\n                      onDraftSelect={onDraftSelect}\n                      selected={datesSelected.some(date =>\n                        isSameDay(date, day)\n                      )}\n                    />\n                  )}\n                </Cell>\n              )\n            })}\n        </Grid>\n      </div>\n    )\n  }\n)`\n  width: fit-content;\n  ${Grid} {\n    /* Use auto instead of the default minmax(0, 1fr)\n    so that 1st & last cells in the row can be larger */\n    grid-template-columns: repeat(7, auto);\n    &.full-render {\n      animation-duration: ${({ theme }) => `${theme.transitions.moderate}ms`};\n      animation-fill-mode: forwards;\n      animation-name: ${fadeIn};\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}