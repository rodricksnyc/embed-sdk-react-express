{"ast":null,"code":"let _ = t => t,\n    _t,\n    _t2;\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TreeContext } from './TreeContext';\nimport { generateIndent } from './utils';\n\nconst TreeBranchLayout = _ref => {\n  let {\n    children,\n    className\n  } = _ref;\n  const {\n    depth,\n    density\n  } = useContext(TreeContext);\n  return React.createElement(TreeBranchIndentSpacer, {\n    className: className,\n    depth: depth + 1,\n    density: density\n  }, children);\n};\n\nconst TreeBranchIndentSpacer = styled.div.withConfig({\n  displayName: \"TreeBranch__TreeBranchIndentSpacer\",\n  componentId: \"sc-1uogj9w-0\"\n})(_t || (_t = _`\n  ${0}\n`), generateIndent);\nexport const TreeBranch = styled(TreeBranchLayout).withConfig({\n  displayName: \"TreeBranch\",\n  componentId: \"sc-1uogj9w-1\"\n})(_t2 || (_t2 = _``));","map":{"version":3,"mappings":";;;;AAKA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAT,QAA+B,SAA/B;;AAOA,MAAMC,gBAAgB,GAAG,QAA8C;EAAA,IAA7C;IAAEC,QAAF;IAAYC;EAAZ,CAA6C;EACrE,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAqBR,UAAU,CAACE,WAAD,CAArC;EACA,OACEH,oBAACU,sBAAD,EAAuB;IACrBH,SAAS,EAAEA,SADU;IAMrBC,KAAK,EAAEA,KAAK,GAAG,CANM;IAOrBC,OAAO,EAAEA;EAPY,CAAvB,EASGH,QATH,CADF;AAaD,CAfD;;AAiBA,MAAMI,sBAAsB,GAAGR,MAAM,CAACS,GAAPT,CAAUU,UAAVV,CAAU;EAAAW;EAAAC;AAAA,CAAVZ,EAAUa,aAAC;AAC1C,IAAE,CAAiB;AACnB,CAFyC,CAAVb,EAC3BE,cAD2BF,CAA/B;AAIA,OAAO,MAAMc,UAAU,GAAGd,MAAM,CAACG,gBAAD,CAANH,CAAwBU,UAAxBV,CAAwB;EAAAW;EAAAC;AAAA,CAAxBZ,EAAwBe,eAAC,EAAD,CAAxBf,CAAnB","names":["React","useContext","styled","TreeContext","generateIndent","TreeBranchLayout","children","className","depth","density","TreeBranchIndentSpacer","div","withConfig","displayName","componentId","_t","TreeBranch","_t2"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Tree/TreeBranch.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useContext } from 'react'\nimport type { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { TreeContext } from './TreeContext'\nimport { generateIndent } from './utils'\n\nexport interface TreeBranchProps {\n  className?: string\n  children?: ReactNode\n}\n\nconst TreeBranchLayout = ({ children, className }: TreeBranchProps) => {\n  const { depth, density } = useContext(TreeContext)\n  return (\n    <TreeBranchIndentSpacer\n      className={className}\n      /**\n       * Child items should be +1 depth more than their parents so that their label\n       * aligns with the label of the parent as opposed to the indicator\n       */\n      depth={depth + 1}\n      density={density}\n    >\n      {children}\n    </TreeBranchIndentSpacer>\n  )\n}\n\nconst TreeBranchIndentSpacer = styled.div`\n  ${generateIndent}\n`\n\nexport const TreeBranch = styled(TreeBranchLayout)``\n"]},"metadata":{},"sourceType":"module"}