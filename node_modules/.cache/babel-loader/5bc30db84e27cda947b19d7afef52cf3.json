{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Span } from '../Text';\nimport { formatDateString, rangeTypeStyle } from './utils';\nexport const MonthTitle = styled(_ref => {\n  let {\n    className,\n    locale,\n    month\n  } = _ref;\n  return React.createElement(Span, {\n    className: className,\n    fontSize: \"xsmall\",\n    color: \"text2\",\n    fontWeight: \"bold\",\n    px: \"u8\",\n    py: \"u2\"\n  }, formatDateString(month, 'MMM yyyy', locale));\n}).withConfig({\n  displayName: \"MonthTitle\",\n  componentId: \"sc-1cr2h3a-0\"\n})(_t || (_t = _`\n  ${0}\n  display: block;\n  /* Title is inline with first week if month starts > 3 days after firstDayOfWeek */\n  /* stylelint-disable */\n  margin: ${0};\n  /* stylelint-enable */\n  position: relative;\n  width: fit-content;\n  z-index: ${0};\n`), rangeTypeStyle, _ref2 => {\n  let {\n    inline,\n    theme: {\n      space\n    }\n  } = _ref2;\n  return inline ? `0 0 -${space.u8} 0` : `${space.u05} 0`;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.zIndexFloor;\n});","map":{"version":3,"mappings":";;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,SAAjD;AASA,OAAO,MAAMC,UAAU,GAAGJ,MAAM,CAC9B,QAAmD;EAAA,IAAlD;IAAEK,SAAF;IAAaC,MAAb;IAAqBC;EAArB,CAAkD;EACjD,OACER,oBAACE,IAAD,EAAK;IACHI,SAAS,EAAEA,SADR;IAEHG,QAAQ,EAAC,QAFN;IAGHC,KAAK,EAAC,OAHH;IAIHC,UAAU,EAAC,MAJR;IAKHC,EAAE,EAAC,IALA;IAMHC,EAAE,EAAC;EANA,CAAL,EAQGV,gBAAgB,CAACK,KAAD,EAAQ,UAAR,EAAoBD,MAApB,CARnB,CADF;AAYD,CAd6B,CAANN,CAezBa,UAfyBb,CAezB;EAAAc;EAAAC;AAAA,CAfyBf,EAezBgB,aAAC;AACF,IAAE,CAAiB;AACnB;AACA;AACA;AACA,YAAU,CAC2C;AACrD;AACA;AACA;AACA,aAAW,CAAmC;AAC9C,CAXC,CAfyBhB,EAgBtBG,cAhBsBH,EAoBd;EAAA,IAAC;IAAEiB,MAAF;IAAUC,KAAK,EAAE;MAAEC;IAAF;EAAjB,CAAD;EAAA,OACRF,MAAM,GAAI,QAAOE,KAAK,CAACC,EAAG,IAApB,GAA2B,GAAED,KAAK,CAACE,GAAI,IADrC;AAAA,CApBcrB,EAyBb;EAAA,IAAC;IAAEkB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACI,WAArB;AAAA,CAzBatB,CAAnB","names":["React","styled","Span","formatDateString","rangeTypeStyle","MonthTitle","className","locale","month","fontSize","color","fontWeight","px","py","withConfig","displayName","componentId","_t","inline","theme","space","u8","u05","zIndexFloor"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Calendar/MonthTitle.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Span } from '../Text'\nimport type { CalendarLocaleProps, RangeProps } from './types'\nimport { formatDateString, rangeTypeStyle } from './utils'\n\nexport type MonthTitleProps = Pick<CalendarLocaleProps, 'locale'> &\n  RangeProps & {\n    className?: string\n    month: Date\n    inline: boolean\n  }\n\nexport const MonthTitle = styled(\n  ({ className, locale, month }: MonthTitleProps) => {\n    return (\n      <Span\n        className={className}\n        fontSize=\"xsmall\"\n        color=\"text2\"\n        fontWeight=\"bold\"\n        px=\"u8\"\n        py=\"u2\"\n      >\n        {formatDateString(month, 'MMM yyyy', locale)}\n      </Span>\n    )\n  }\n)`\n  ${rangeTypeStyle}\n  display: block;\n  /* Title is inline with first week if month starts > 3 days after firstDayOfWeek */\n  /* stylelint-disable */\n  margin: ${({ inline, theme: { space } }) =>\n    inline ? `0 0 -${space.u8} 0` : `${space.u05} 0`};\n  /* stylelint-enable */\n  position: relative;\n  width: fit-content;\n  z-index: ${({ theme }) => theme.zIndexFloor};\n`\n"]},"metadata":{},"sourceType":"module"}