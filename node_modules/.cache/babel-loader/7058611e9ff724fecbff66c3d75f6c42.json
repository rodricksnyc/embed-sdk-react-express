{"ast":null,"code":"import { useCallbackRef, useSafeLayoutEffect } from '../../../../utils';\nimport { ComboboxActionType } from './state';\nexport function useFocusManagement(lastActionType) {\n  const [inputElement, inputCallbackRef] = useCallbackRef();\n  useSafeLayoutEffect(() => {\n    if (lastActionType === ComboboxActionType.SELECT_WITH_CLICK || lastActionType === ComboboxActionType.INTERACT) {\n      if (inputElement) {\n        inputElement.focus();\n        inputElement.scrollLeft = 0;\n      }\n    }\n  }, [lastActionType]);\n  return {\n    inputCallbackRef,\n    inputElement\n  };\n}","map":{"version":3,"mappings":"AAKA,SAASA,cAAT,EAAyBC,mBAAzB,QAAoD,mBAApD;AACA,SAASC,kBAAT,QAAmC,SAAnC;AAMA,OAAO,SAASC,kBAAT,CAA4BC,cAA5B,EAAiE;EACtE,MAAM,CAACC,YAAD,EAAeC,gBAAf,IAAmCN,cAAc,EAAvD;EAGAC,mBAAmB,CAAC,MAAM;IACxB,IACEG,cAAc,KAAKF,kBAAkB,CAACK,iBAAtCH,IACAA,cAAc,KAAKF,kBAAkB,CAACM,QAFxC,EAGE;MACA,IAAIH,YAAJ,EAAkB;QAChBA,YAAY,CAACI,KAAbJ;QACAA,YAAY,CAACK,UAAbL,GAA0B,CAA1BA;MACF;IACF;EAED,CAXkB,EAWhB,CAACD,cAAD,CAXgB,CAAnBH;EAaA,OAAO;IAAEK,gBAAF;IAAoBD;EAApB,CAAP;AACF","names":["useCallbackRef","useSafeLayoutEffect","ComboboxActionType","useFocusManagement","lastActionType","inputElement","inputCallbackRef","SELECT_WITH_CLICK","INTERACT","focus","scrollLeft"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Inputs/Combobox/utils/useFocusManagement.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useCallbackRef, useSafeLayoutEffect } from '../../../../utils'\nimport { ComboboxActionType } from './state'\n\n// Move focus back to the input if we start navigating w/ the\n// keyboard after focus has moved to any focus-able content in\n// the popup.\n\nexport function useFocusManagement(lastActionType?: ComboboxActionType) {\n  const [inputElement, inputCallbackRef] = useCallbackRef<HTMLInputElement>()\n  // useSafeLayoutEffect so that the cursor goes to the end of the input instead\n  // of awkwardly at the beginning, unclear to my why ...\n  useSafeLayoutEffect(() => {\n    if (\n      lastActionType === ComboboxActionType.SELECT_WITH_CLICK ||\n      lastActionType === ComboboxActionType.INTERACT\n    ) {\n      if (inputElement) {\n        inputElement.focus()\n        inputElement.scrollLeft = 0\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lastActionType])\n\n  return { inputCallbackRef, inputElement }\n}\n"]},"metadata":{},"sourceType":"module"}