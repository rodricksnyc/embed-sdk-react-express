{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"children\", \"content\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport React, { isValidElement, cloneElement } from 'react';\nimport { usePanel } from './usePanel';\n\nconst isRenderProp = children => typeof children === 'function';\n\nexport const Panel = _ref => {\n  let {\n    children,\n    content\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const {\n    domProps,\n    panel\n  } = usePanel(_objectSpread({\n    content\n  }, props));\n\n  if (isValidElement(children)) {\n    children = cloneElement(children, _objectSpread({}, domProps));\n  } else if (isRenderProp(children)) {\n    children = children(domProps);\n  } else {\n    console.warn(`Element \"${typeof children}\" can't be used as target for Panel`);\n  }\n\n  return React.createElement(React.Fragment, null, children, panel);\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,OAAOA,KAAP,IAAgBC,cAAhB,EAAgCC,YAAhC,QAAoD,OAApD;AAEA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,YAAY,GAChBC,QAAqC,IACL,OAAOA,QAAP,KAAoB,UAFtD;;AAIA,OAAO,MAAMC,KAAK,GAAGC,QAAiD;EAAA,IAAhD;IAAEF,QAAF;IAAYG;EAAZ,IAA2CD,IAAK;EAAA,IAAxBE,KAAK,4CAAmB;;EACpE,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAAsBR,QAAQ;IAAGK;EAAH,GAAeC,KAAf,EAApC;;EAEA,IAAIR,cAAc,CAACI,QAAD,CAAlB,EAA8B;IAC5BA,QAAQ,GAAGH,YAAY,CAACG,QAAD,EAASO,kBAC3BF,QAD2B,CAAT,CAAvBL;EAGD,CAJD,MAIO,IAAID,YAAY,CAACC,QAAD,CAAhB,EAA4B;IACjCA,QAAQ,GAAGA,QAAQ,CAACK,QAAD,CAAnBL;EACD,CAFM,MAEA;IAELQ,OAAO,CAACC,IAARD,CACG,YAAW,OAAOR,QAAS,qCAD9BQ;EAGF;;EAEA,OACEb,0CACGK,QADH,EAEGM,KAFH,CADF;AAMD,CAtBM","names":["React","isValidElement","cloneElement","usePanel","isRenderProp","children","Panel","_ref","content","props","domProps","panel","_objectSpread","console","warn"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Panel/Panel.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ReactNode } from 'react'\nimport React, { isValidElement, cloneElement } from 'react'\nimport type { PanelProps, PanelRenderProp } from './types'\nimport { usePanel } from './usePanel'\n\nconst isRenderProp = (\n  children: ReactNode | PanelRenderProp\n): children is PanelRenderProp => typeof children === 'function'\n\nexport const Panel = ({ children, content, ...props }: PanelProps) => {\n  const { domProps, panel } = usePanel({ content, ...props })\n\n  if (isValidElement(children)) {\n    children = cloneElement(children, {\n      ...domProps,\n    })\n  } else if (isRenderProp(children)) {\n    children = children(domProps)\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Element \"${typeof children}\" can't be used as target for Panel`\n    )\n  }\n\n  return (\n    <>\n      {children}\n      {panel}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}