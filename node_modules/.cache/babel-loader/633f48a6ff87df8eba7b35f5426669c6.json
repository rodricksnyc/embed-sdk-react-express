{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nlet _ = t => t,\n    _t;\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useID } from '../../../utils';\nimport { useFormContext } from '../../Form';\nimport { TextArea } from '../../Inputs/TextArea';\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field';\nimport { getHasValue } from '../Field/useFloatingLabel';\nexport const FieldTextArea = styled(props => {\n  const id = useID(props.id);\n  const validationMessage = useFormContext(props);\n  return React.createElement(FloatingLabelField, _extends({}, pickFieldProps(props), {\n    id: id,\n    validationMessage: validationMessage,\n    hasValue: getHasValue(props)\n  }), React.createElement(TextArea, _extends({}, omitFieldProps(props), {\n    id: id,\n    \"aria-describedby\": `describedby-${id}`,\n    validationType: validationMessage && validationMessage.type\n  })));\n}).withConfig({\n  displayName: \"FieldTextArea\",\n  componentId: \"sc-1nmc8fy-0\"\n})(_t || (_t = _``));","map":{"version":3,"mappings":";;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,SAASC,kBAAT,EAA6BC,cAA7B,EAA6CC,cAA7C,QAAmE,UAAnE;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAMA,OAAO,MAAMC,aAAa,GAAGR,MAAM,CAAES,KAAyB,IAAK;EACjE,MAAMC,EAAE,GAAGT,KAAK,CAACQ,KAAK,CAACC,EAAP,CAAhB;EACA,MAAMC,iBAAiB,GAAGT,cAAc,CAACO,KAAD,CAAxC;EACA,OACEV,oBAACK,kBAAD,EAAmBQ,aACbN,cAAc,CAACG,KAAD,CADD,EACQ;IACzBC,EAAE,EAAEA,EADqB;IAEzBC,iBAAiB,EAAEA,iBAFM;IAGzBE,QAAQ,EAAEN,WAAW,CAACE,KAAD;EAHI,CADR,CAAnB,EAMEV,oBAACI,QAAD,EAASS,aACHP,cAAc,CAACI,KAAD,CADX,EACkB;IACzBC,EAAE,EAAEA,EADqB;IAEzB,oBAAmB,eAAcA,EAAG,EAFX;IAGzBI,cAAc,EAAEH,iBAAiB,IAAIA,iBAAiB,CAACI;EAH9B,CADlB,CAAT,CANF,CADF;AAeD,CAlBkC,CAANf,CAkB3BgB,UAlB2BhB,CAkB3B;EAAAiB;EAAAC;AAAA,CAlB2BlB,EAkB3BmB,aAAC,EAAD,CAlB2BnB,CAAtB","names":["React","styled","useID","useFormContext","TextArea","FloatingLabelField","omitFieldProps","pickFieldProps","getHasValue","FieldTextArea","props","id","validationMessage","_extends","hasValue","validationType","type","withConfig","displayName","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Fields/FieldTextArea/FieldTextArea.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { useID } from '../../../utils'\nimport { useFormContext } from '../../Form'\nimport type { TextAreaProps } from '../../Inputs/TextArea'\nimport { TextArea } from '../../Inputs/TextArea'\nimport type { FloatingLabelFieldProps } from '../Field'\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field'\nimport { getHasValue } from '../Field/useFloatingLabel'\n\nexport interface FieldTextAreaProps\n  extends FloatingLabelFieldProps,\n    TextAreaProps {}\n\nexport const FieldTextArea = styled((props: FieldTextAreaProps) => {\n  const id = useID(props.id)\n  const validationMessage = useFormContext(props)\n  return (\n    <FloatingLabelField\n      {...pickFieldProps(props)}\n      id={id}\n      validationMessage={validationMessage}\n      hasValue={getHasValue(props)}\n    >\n      <TextArea\n        {...omitFieldProps(props)}\n        id={id}\n        aria-describedby={`describedby-${id}`}\n        validationType={validationMessage && validationMessage.type}\n      />\n    </FloatingLabelField>\n  )\n})``\n"]},"metadata":{},"sourceType":"module"}