{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3;\n\nconst _excluded = [\"children\", \"indicator\", \"indicatorPosition\"];\nimport React, { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { shouldForwardProp } from '@looker/design-tokens';\nimport { focusVisibleCSSWrapper } from '../utils';\nimport { AccordionLabel } from './AccordionLabel';\nconst Accordion2DisclosureInternal = forwardRef((_ref, ref) => {\n  let {\n    children,\n    indicator,\n    indicatorPosition\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, props), indicatorPosition === 'left' && indicator, React.createElement(AccordionLabel, null, children), indicatorPosition !== 'left' && indicator);\n});\nAccordion2DisclosureInternal.displayName = 'Accordion2DisclosureInternal';\nconst labelTypographyDefaults = css(_t || (_t = _`\n  font-weight: ${0};\n  text-align: left;\n`), _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.fontWeights.semiBold;\n});\nexport const Accordion2Disclosure = styled(Accordion2DisclosureInternal).withConfig({\n  shouldForwardProp: prop => ['indicator', 'indicatorPosition'].includes(prop) ? true : shouldForwardProp(prop),\n  displayName: \"Accordion2Disclosure\",\n  componentId: \"sc-n100ke-0\"\n})(_t2 || (_t2 = _`\n  align-items: center;\n  color: ${0};\n  cursor: pointer;\n  display: flex;\n  outline: none;\n  position: relative;\n  width: 100%;\n\n  ${0}\n\n  &[disabled] {\n    color: ${0};\n    cursor: not-allowed;\n  }\n\n  ${0}\n`), _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.text5;\n}, labelTypographyDefaults, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.colors.text1;\n}, focusVisibleCSSWrapper(_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return css(_t3 || (_t3 = _`\n      box-shadow: inset 0 0 0 2px ${0};\n    `), theme.colors.keyFocus);\n}));","map":{"version":3,"mappings":";;;;;;;;;AA2BA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,SAASC,sBAAT,QAAuC,UAAvC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAUA,MAAMC,4BAA4B,GAAGN,UAAU,CAC7C,OAOEO,GAPF,KAO2B;EAAA,IANzB;IACEC,QADF;IAEEC,SAFF;IAGEC;EAHF,IAK4BC,IACH;EAAA,IAFpBC,KAAK,4CAEe;;EAFf,OAIVb;IAAKQ,GAAG,EAAEA;EAAV,GAAmBK,KAAnB,GACGF,iBAAiB,KAAK,MAAtBA,IAAgCD,SADnC,EAEEV,oBAACM,cAAD,EAAe,IAAf,EAAiBG,QAAjB,CAFF,EAGGE,iBAAiB,KAAK,MAAtBA,IAAgCD,SAHnC,CAJU;AASX,CAf4C,CAA/C;AAkBAH,4BAA4B,CAACO,WAA7BP,GAA2C,8BAA3CA;AAWA,MAAMQ,uBAAuB,GAAGZ,GAAG,cAAC;AACpC,iBAAe,CAA4C;AAC3D;AACA,CAHmC,GAClB;EAAA,IAAC;IAAEa;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,WAAND,CAAkBE,QAAjC;AAAA,CADkB,CAAnC;AAYA,OAAO,MAAMC,oBAAoB,GAAGjB,MAAM,CACxCK,4BADwC,CAANL,CAElCkB,UAFkClB,CAEvB;EACXE,iBAAiB,EAAEiB,IAAI,IACrB,CAAC,WAAD,EAAc,mBAAd,EAAmCC,QAAnC,CAA4CD,IAA5C,IACI,IADJ,GAEIjB,iBAAiB,CAACiB,IAAD,CAJZ;EAIkBP,mCAJlB;EAIkBS;AAJlB,CAFuBrB,EAOlCsB,eAAC;AACH;AACA,WAAS,CAAoC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,IAAE,CAA0B;AAC5B;AACA;AACA,aAAW,CAAoC;AAC/C;AACA;AACA;AACA,IAAE,CAIE;AACJ,CArBE,CAPkCtB,EASzB;EAAA,IAAC;IAAEc;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACS,MAANT,CAAaU,KAA5B;AAAA,CATyBxB,EAgBhCa,uBAhBgCb,EAmBvB;EAAA,IAAC;IAAEc;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACS,MAANT,CAAaW,KAA5B;AAAA,CAnBuBzB,EAuBhCG,sBAAsB,CACtB;EAAA,IAAC;IAAEW;EAAF,CAAD;EAAA,OAAeb,GAAG,gBAAC;AACvB,oCAAkC,CAAwB;AAC1D,KAFsB,GACca,KAAK,CAACS,MAANT,CAAaY,QAD3B,CAAlB;AAAA,CADsB,CAvBU1B,CAA7B","names":["React","forwardRef","styled","css","shouldForwardProp","focusVisibleCSSWrapper","AccordionLabel","Accordion2DisclosureInternal","ref","children","indicator","indicatorPosition","_ref","props","displayName","labelTypographyDefaults","theme","fontWeights","semiBold","Accordion2Disclosure","withConfig","prop","includes","componentId","_t2","colors","text5","text1","keyFocus"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Accordion2/Accordion2Disclosure.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { Ref, ReactNode } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled, { css } from 'styled-components'\nimport type { CompatibleHTMLProps, DensityProp } from '@looker/design-tokens'\nimport { shouldForwardProp } from '@looker/design-tokens'\nimport type { FocusVisibleProps } from '../utils'\nimport { focusVisibleCSSWrapper } from '../utils'\nimport { AccordionLabel } from './AccordionLabel'\nimport type { AccordionIndicatorPosition } from './types'\n\nexport type Accordion2DisclosureProps = CompatibleHTMLProps<HTMLElement> &\n  DensityProp &\n  FocusVisibleProps & {\n    indicator: ReactNode\n    indicatorPosition?: AccordionIndicatorPosition\n  }\n\nconst Accordion2DisclosureInternal = forwardRef(\n  (\n    {\n      children,\n      indicator,\n      indicatorPosition,\n      ...props\n    }: Accordion2DisclosureProps,\n    ref?: Ref<HTMLDivElement>\n  ) => (\n    <div ref={ref} {...props}>\n      {indicatorPosition === 'left' && indicator}\n      <AccordionLabel>{children}</AccordionLabel>\n      {indicatorPosition !== 'left' && indicator}\n    </div>\n  )\n)\n\nAccordion2DisclosureInternal.displayName = 'Accordion2DisclosureInternal'\n\n/**\n * Default AccordionLabel typography styles.\n *\n * Must be specified on `Accordion2Disclosure` so that `Accordion` can override\n * these depending on props specified. When `Accordion` is remove this can be merged\n * directly into`AccordionLabel`\n *\n * @TODO 3.x / Accordion removal\n */\nconst labelTypographyDefaults = css`\n  font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n  text-align: left;\n`\n\n/**\n * This is provided for legacy implementation support within `Tree` & `NavList`\n * The component may be removed without triggering a MAJOR release. Use with caution\n *\n * @private\n * @deprecated Use `useAccordion2` if you need to control styling within an Accordion2\n */\nexport const Accordion2Disclosure = styled(\n  Accordion2DisclosureInternal\n).withConfig({\n  shouldForwardProp: prop =>\n    ['indicator', 'indicatorPosition'].includes(prop)\n      ? true\n      : shouldForwardProp(prop),\n})`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text5};\n  cursor: pointer;\n  display: flex;\n  outline: none;\n  position: relative;\n  width: 100%;\n\n  ${labelTypographyDefaults}\n\n  &[disabled] {\n    color: ${({ theme }) => theme.colors.text1};\n    cursor: not-allowed;\n  }\n\n  ${focusVisibleCSSWrapper(\n    ({ theme }) => css`\n      box-shadow: inset 0 0 0 2px ${theme.colors.keyFocus};\n    `\n  )}\n`\n"]},"metadata":{},"sourceType":"module"}