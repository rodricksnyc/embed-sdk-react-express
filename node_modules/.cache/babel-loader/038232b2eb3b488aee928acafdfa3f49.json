{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"imageUrl\", \"label\", \"size\"];\n\nlet _ = t => t,\n    _t;\n\nimport { AccountCircle } from '@styled-icons/material-outlined/AccountCircle';\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from '../utils';\nimport { IconButton } from '../Button';\nexport const AvatarButton = styled(forwardRef((_ref, forwardedRef) => {\n  let {\n    imageUrl,\n    label,\n    size = 'large'\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const {\n    t\n  } = useTranslation('AvatarButton');\n  return React.createElement(IconButton, _extends({\n    label: label,\n    \"aria-label\": typeof label === 'string' ? label : '',\n    icon: React.createElement(AccountCircle, null),\n    size: size,\n    ref: forwardedRef\n  }, rest), imageUrl && React.createElement(\"img\", {\n    alt: t('Profile Picture'),\n    className: \"default-image\",\n    src: imageUrl\n  }));\n})).withConfig({\n  displayName: \"AvatarButton\",\n  componentId: \"sc-yers8c-0\"\n})(_t || (_t = _`\n  position: relative;\n\n  img {\n    border-radius: 50%;\n    height: ${0};\n    position: absolute;\n    width: ${0};\n  }\n`), _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.sizes.medium;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.sizes.medium;\n});","map":{"version":3,"mappings":";;;;;;;AAKA,SAASA,aAAT,QAA8B,+CAA9B;AAEA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,UAAT,QAA2B,WAA3B;AAYA,OAAO,MAAMC,YAAY,GAAGH,MAAM,CAEhCD,UAAU,CACR,OAEEK,YAFF,KAGK;EAAA,IAFH;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,IAAI,GAAG;EAA1B,IAA+DC,IAE5D;EAAA,IAFmCC,IAAI,4CAEvC;;EACH,MAAM;IAAEC;EAAF,IAAQT,cAAc,CAAC,cAAD,CAA5B;EAEA,OACEH,oBAACI,UAAD,EAAWS;IACTL,KAAK,EAAEA,KADE;IAET,cAAY,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,EAFvC;IAGTM,IAAI,EAAEd,oBAACD,aAAD,EAAc,IAAd,CAHG;IAITU,IAAI,EAAEA,IAJG;IAKTM,GAAG,EAAET;EALI,GAMLK,IANK,CAAX,EAQGJ,QAAQ,IACPP;IACEgB,GAAG,EAAEJ,CAAC,CAAC,iBAAD,CADR;IAEEK,SAAS,EAAC,eAFZ;IAGEC,GAAG,EAAEX;EAHP,EATJ,CADF;AAkBD,CAzBO,CAFsB,CAANL,CA6B3BiB,UA7B2BjB,CA6B3B;EAAAkB;EAAAC;AAAA,CA7B2BnB,EA6B3BoB,aAAC;AACF;AACA;AACA;AACA;AACA,cAAY,CAAoC;AAChD;AACA,aAAW,CAAoC;AAC/C;AACA,CATC,CA7B2BpB,EAkCd;EAAA,IAAC;IAAEqB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,KAAND,CAAYE,MAA3B;AAAA,CAlCcvB,EAoCf;EAAA,IAAC;IAAEqB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,KAAND,CAAYE,MAA3B;AAAA,CApCevB,CAArB","names":["AccountCircle","React","forwardRef","styled","useTranslation","IconButton","AvatarButton","forwardedRef","imageUrl","label","size","_ref","rest","t","_extends","icon","ref","alt","className","src","withConfig","displayName","componentId","_t","theme","sizes","medium"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Avatar/AvatarButton.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { AccountCircle } from '@styled-icons/material-outlined/AccountCircle'\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from '../utils'\nimport { IconButton } from '../Button'\nimport type { IconButtonProps } from '../Button'\n\nexport type AvatarButtonProps = Omit<IconButtonProps, 'icon'> & {\n  /**\n   * `imageUrl != null`  indicates that `gravatar` feature is enabled on instance but NOT whether or not the user has\n   * gravatar actually specified. Gravatar responds with transparent image if the user doesn't have a gravatar specified\n   * in which case the underlying `Account` icon is visible.\n   */\n  imageUrl?: string | null\n}\n\nexport const AvatarButton = styled(\n  // eslint-disable-next-line react/display-name\n  forwardRef(\n    (\n      { imageUrl, label, size = 'large', ...rest }: AvatarButtonProps,\n      forwardedRef: Ref<HTMLButtonElement>\n    ) => {\n      const { t } = useTranslation('AvatarButton')\n\n      return (\n        <IconButton\n          label={label}\n          aria-label={typeof label === 'string' ? label : ''}\n          icon={<AccountCircle />}\n          size={size}\n          ref={forwardedRef}\n          {...rest}\n        >\n          {imageUrl && (\n            <img\n              alt={t('Profile Picture')}\n              className=\"default-image\"\n              src={imageUrl}\n            />\n          )}\n        </IconButton>\n      )\n    }\n  )\n)`\n  position: relative;\n\n  img {\n    border-radius: 50%;\n    height: ${({ theme }) => theme.sizes.medium};\n    position: absolute;\n    width: ${({ theme }) => theme.sizes.medium};\n  }\n`\n"]},"metadata":{},"sourceType":"module"}