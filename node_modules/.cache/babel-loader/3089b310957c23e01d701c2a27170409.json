{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nlet _ = t => t,\n    _t,\n    _t2;\n\nimport { reset, omitStyledProps } from '@looker/design-tokens';\nimport React, { useContext, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useGlobalHotkeys } from '../utils';\nimport { DialogContext } from './DialogContext';\n\nconst SurfaceLayout = props => {\n  const {\n    closeModal\n  } = useContext(DialogContext);\n  const ref = useRef(null);\n  useGlobalHotkeys('Escape', closeModal, ref);\n  return React.createElement(\"div\", _extends({\n    \"data-overlay-surface\": true,\n    ref: ref,\n    tabIndex: -1\n  }, omitStyledProps(props)));\n};\n\nexport const surfaceTransition = () => css(_t || (_t = _`\n  ${0}\n`), _ref => {\n  let {\n    theme\n  } = _ref;\n  return `${theme.transitions.moderate}ms ${theme.easings.ease}`;\n});\nexport const SurfaceBase = styled(SurfaceLayout).attrs(() => ({\n  'aria-modal': true,\n  role: 'dialog'\n})).withConfig({\n  displayName: \"SurfaceBase\",\n  componentId: \"sc-7dy58h-0\"\n})(_t2 || (_t2 = _`\n  ${0}\n\n  background: ${0};\n  color: ${0};\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  &:focus {\n    outline: none;\n  }\n`), reset, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.background;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.text;\n});","map":{"version":3,"mappings":";;;;;;AAKA,SAASA,KAAT,EAAgBC,eAAhB,QAAuC,uBAAvC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAOA,MAAMC,aAAa,GAAIC,KAAyB,IAAK;EACnD,MAAM;IAAEC;EAAF,IAAiBR,UAAU,CAACK,aAAD,CAAjC;EAEA,MAAMI,GAAG,GAAGR,MAAM,CAAwB,IAAxB,CAAlB;EAEAG,gBAAgB,CAAC,QAAD,EAAWI,UAAX,EAAuBC,GAAvB,CAAhBL;EAEA,OACEL;IACE,wBAAsB,IADxB;IAEEU,GAAG,EAAEA,GAFP;IAGEC,QAAQ,EAAE,CAAC;EAHb,GAIMZ,eAAe,CAACS,KAAD,CAJrB,EADF;AAQD,CAfD;;AAiBA,OAAO,MAAMI,iBAAiB,GAAG,MAAMR,GAAG,cAAC;AAC3C,IAAE,CAAyE;AAC3E,CAF0C,GACtC;EAAA,IAAC;IAAES;EAAF,CAAD;EAAA,OAAgB,GAAEA,KAAK,CAACC,WAAND,CAAkBE,QAAS,MAAKF,KAAK,CAACG,OAANH,CAAcI,IAAK,EAArE;AAAA,CADsC,CAAnC;AAIP,OAAO,MAAMC,WAAW,GAAGf,MAAM,CAACI,aAAD,CAANJ,CAAsBgB,KAAtBhB,CAA4B,OAAO;EAC5D,cAAc,IAD8C;EAE5DiB,IAAI,EAAE;AAFsD,CAAP,CAA5BjB,EAGxBkB,UAHwBlB,CAGxB;EAAAmB;EAAAC;AAAA,CAHwBpB,EAGxBqB,eAAC;AACJ,IAAE,CAAQ;AACV;AACA,gBAAc,CAAyC;AACvD,WAAS,CAAmC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZG,CAHwBrB,EAIvBL,KAJuBK,EAMX;EAAA,IAAC;IAAEU;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACY,MAANZ,CAAaa,UAA5B;AAAA,CANWvB,EAOhB;EAAA,IAAC;IAAEU;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACY,MAANZ,CAAac,IAA5B;AAAA,CAPgBxB,CAApB","names":["reset","omitStyledProps","React","useContext","useRef","styled","css","useGlobalHotkeys","DialogContext","SurfaceLayout","props","closeModal","ref","tabIndex","surfaceTransition","theme","transitions","moderate","easings","ease","SurfaceBase","attrs","role","withConfig","displayName","componentId","_t2","colors","background","text"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Dialog/SurfaceBase.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { reset, omitStyledProps } from '@looker/design-tokens'\nimport React, { useContext, useRef } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useGlobalHotkeys } from '../utils'\nimport { DialogContext } from './DialogContext'\n\ntype SurfaceLayoutProps = {\n  className?: string\n  id?: string\n}\n\nconst SurfaceLayout = (props: SurfaceLayoutProps) => {\n  const { closeModal } = useContext(DialogContext)\n\n  const ref = useRef<null | HTMLDivElement>(null)\n\n  useGlobalHotkeys('Escape', closeModal, ref)\n\n  return (\n    <div\n      data-overlay-surface={true}\n      ref={ref}\n      tabIndex={-1}\n      {...omitStyledProps(props)}\n    />\n  )\n}\n\nexport const surfaceTransition = () => css`\n  ${({ theme }) => `${theme.transitions.moderate}ms ${theme.easings.ease}`}\n`\n\nexport const SurfaceBase = styled(SurfaceLayout).attrs(() => ({\n  'aria-modal': true,\n  role: 'dialog',\n}))`\n  ${reset}\n\n  background: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  &:focus {\n    outline: none;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}