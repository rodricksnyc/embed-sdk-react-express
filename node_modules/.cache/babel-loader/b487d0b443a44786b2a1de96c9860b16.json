{"ast":null,"code":"import { useCallback, useReducer } from 'react';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'START':\n      return state === 'ON' ? 'DOUBLE_ON' : 'ON';\n\n    case 'END':\n      return state === 'DOUBLE_ON' ? 'ON' : 'OFF';\n  }\n};\n\nexport const useRippleStateBG = () => {\n  const [state, dispatch] = useReducer(reducer, 'OFF');\n  return {\n    className: state === 'OFF' ? '' : 'bg-on',\n    end: useCallback(() => {\n      dispatch({\n        type: 'END'\n      });\n    }, []),\n    start: useCallback(() => {\n      dispatch({\n        type: 'START'\n      });\n    }, [])\n  };\n};","map":{"version":3,"mappings":"AAMA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;;AAQA,MAAMC,OAA+C,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACzE,QAAQA,MAAM,CAACC,IAAf;IAGE,KAAK,OAAL;MACE,OAAOF,KAAK,KAAK,IAAVA,GAAiB,WAAjBA,GAA+B,IAAtC;;IACF,KAAK,KAAL;MACE,OAAOA,KAAK,KAAK,WAAVA,GAAwB,IAAxBA,GAA+B,KAAtC;EANJ;AAQD,CATD;;AAWA,OAAO,MAAMG,gBAAgB,GAAG,MAAM;EACpC,MAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBN,UAAU,CAACC,OAAD,EAAU,KAAV,CAApC;EACA,OAAO;IACLM,SAAS,EAAEL,KAAK,KAAK,KAAVA,GAAkB,EAAlBA,GAAuB,OAD7B;IAELM,GAAG,EAAET,WAAW,CAAC,MAAM;MACrBO,QAAQ,CAAC;QAAEF,IAAI,EAAE;MAAR,CAAD,CAARE;IACD,CAFe,EAEb,EAFa,CAFX;IAKLG,KAAK,EAAEV,WAAW,CAAC,MAAM;MACvBO,QAAQ,CAAC;QAAEF,IAAI,EAAE;MAAR,CAAD,CAARE;IACD,CAFiB,EAEf,EAFe;EALb,CAAP;AASD,CAXM","names":["useCallback","useReducer","reducer","state","action","type","useRippleStateBG","dispatch","className","end","start"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Ripple/useRippleStateBG.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Reducer } from 'react'\nimport { useCallback, useReducer } from 'react'\n\nexport interface RippleActionBG {\n  type: 'START' | 'END'\n}\n\nexport type RippleStateBG = 'ON' | 'DOUBLE_ON' | 'OFF'\n\nconst reducer: Reducer<RippleStateBG, RippleActionBG> = (state, action) => {\n  switch (action.type) {\n    // 'DOUBLE_ON' allows detection of \"hover & focus\" state\n    // background should only turn off when hovered out AND blurred\n    case 'START':\n      return state === 'ON' ? 'DOUBLE_ON' : 'ON'\n    case 'END':\n      return state === 'DOUBLE_ON' ? 'ON' : 'OFF'\n  }\n}\n\nexport const useRippleStateBG = () => {\n  const [state, dispatch] = useReducer(reducer, 'OFF')\n  return {\n    className: state === 'OFF' ? '' : 'bg-on',\n    end: useCallback(() => {\n      dispatch({ type: 'END' })\n    }, []),\n    start: useCallback(() => {\n      dispatch({ type: 'START' })\n    }, []),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}