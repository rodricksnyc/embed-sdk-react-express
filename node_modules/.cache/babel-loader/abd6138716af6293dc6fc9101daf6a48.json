{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nlet _ = t => t,\n    _t;\n\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useID } from '../../../utils';\nimport { useFormContext } from '../../Form';\nimport { Select } from '../../Inputs/Select/Select';\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field';\nimport { getHasValue } from '../Field/useFloatingLabel';\nconst FieldSelectComponent = forwardRef((props, ref) => {\n  const validationMessage = useFormContext(props);\n  const id = useID(props.id);\n  return React.createElement(FloatingLabelField, _extends({}, pickFieldProps(props), {\n    id: id,\n    validationMessage: validationMessage,\n    hasValue: getHasValue(props)\n  }), React.createElement(Select, _extends({}, omitFieldProps(props), {\n    \"aria-describedby\": `describedby-${id}`,\n    \"aria-labelledby\": `labelledby-${id}`,\n    id: id,\n    validationType: validationMessage && validationMessage.type,\n    ref: ref,\n    wrapperAriaLabel: `${props.label}`\n  })));\n});\nFieldSelectComponent.displayName = 'FieldSelectComponent';\nexport const FieldSelect = styled(FieldSelectComponent).withConfig({\n  displayName: \"FieldSelect\",\n  componentId: \"sc-60bbtf-0\"\n})(_t || (_t = _``));","map":{"version":3,"mappings":";;;;;AAMA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,SAASC,MAAT,QAAuB,4BAAvB;AAEA,SAASC,kBAAT,EAA6BC,cAA7B,EAA6CC,cAA7C,QAAmE,UAAnE;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAMA,MAAMC,oBAAoB,GAAGT,UAAU,CACrC,CAACU,KAAD,EAA0BC,GAA1B,KAAyD;EACvD,MAAMC,iBAAiB,GAAGT,cAAc,CAACO,KAAD,CAAxC;EACA,MAAMG,EAAE,GAAGX,KAAK,CAACQ,KAAK,CAACG,EAAP,CAAhB;EACA,OACEd,oBAACM,kBAAD,EAAmBS,aACbP,cAAc,CAACG,KAAD,CADD,EACQ;IACzBG,EAAE,EAAEA,EADqB;IAEzBD,iBAAiB,EAAEA,iBAFM;IAGzBG,QAAQ,EAAEP,WAAW,CAACE,KAAD;EAHI,CADR,CAAnB,EAMEX,oBAACK,MAAD,EAAOU,aACDR,cAAc,CAACI,KAAD,CADb,EACoB;IACzB,oBAAmB,eAAcG,EAAG,EADX;IAEzB,mBAAkB,cAAaA,EAAG,EAFT;IAGzBA,EAAE,EAAEA,EAHqB;IAIzBG,cAAc,EAAEJ,iBAAiB,IAAIA,iBAAiB,CAACK,IAJ9B;IAKzBN,GAAG,EAAEA,GALoB;IAMzBO,gBAAgB,EAAG,GAAER,KAAK,CAACS,KAAM;EANR,CADpB,CAAP,CANF,CADF;AAkBD,CAtBoC,CAAvC;AAyBAV,oBAAoB,CAACW,WAArBX,GAAmC,sBAAnCA;AAEA,OAAO,MAAMY,WAAW,GAAGpB,MAAM,CAACQ,oBAAD,CAANR,CAA4BqB,UAA5BrB,CAA4B;EAAAmB;EAAAG;AAAA,CAA5BtB,EAA4BuB,aAAC,EAAD,CAA5BvB,CAApB","names":["React","forwardRef","styled","useID","useFormContext","Select","FloatingLabelField","omitFieldProps","pickFieldProps","getHasValue","FieldSelectComponent","props","ref","validationMessage","id","_extends","hasValue","validationType","type","wrapperAriaLabel","label","displayName","FieldSelect","withConfig","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Fields/FieldSelect/FieldSelect.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { useID } from '../../../utils'\nimport { useFormContext } from '../../Form'\nimport type { SelectProps } from '../../Inputs/Select/Select'\nimport { Select } from '../../Inputs/Select/Select'\nimport type { FloatingLabelFieldProps } from '../Field'\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field'\nimport { getHasValue } from '../Field/useFloatingLabel'\n\nexport interface FieldSelectProps\n  extends FloatingLabelFieldProps,\n    SelectProps {}\n\nconst FieldSelectComponent = forwardRef(\n  (props: FieldSelectProps, ref: Ref<HTMLInputElement>) => {\n    const validationMessage = useFormContext(props)\n    const id = useID(props.id)\n    return (\n      <FloatingLabelField\n        {...pickFieldProps(props)}\n        id={id}\n        validationMessage={validationMessage}\n        hasValue={getHasValue(props)}\n      >\n        <Select\n          {...omitFieldProps(props)}\n          aria-describedby={`describedby-${id}`}\n          aria-labelledby={`labelledby-${id}`}\n          id={id}\n          validationType={validationMessage && validationMessage.type}\n          ref={ref}\n          wrapperAriaLabel={`${props.label}`}\n        />\n      </FloatingLabelField>\n    )\n  }\n)\n\nFieldSelectComponent.displayName = 'FieldSelectComponent'\n\nexport const FieldSelect = styled(FieldSelectComponent)``\n"]},"metadata":{},"sourceType":"module"}