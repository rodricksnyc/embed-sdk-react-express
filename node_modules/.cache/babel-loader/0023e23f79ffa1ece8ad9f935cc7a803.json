{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nexport const densityPositive1 = {\n  fontSize: 'medium',\n  indicatorGap: 'u1',\n  indicatorSize: 'medium'\n};\nexport const density0 = _objectSpread(_objectSpread({}, densityPositive1), {}, {\n  fontSize: 'small',\n  indicatorSize: 'small'\n});\nexport const densityNegative1 = _objectSpread({}, density0);\nexport const densityNegative2 = _objectSpread({}, densityNegative1);\nexport const densityNegative3 = _objectSpread(_objectSpread({}, densityNegative2), {}, {\n  fontSize: 'xsmall',\n  indicatorSize: 'xxsmall'\n});\nexport const densities = {\n  '-1': densityNegative1,\n  '-2': densityNegative2,\n  '-3': densityNegative3,\n  '0': density0,\n  '1': densityPositive1\n};\nexport const accordionDimensions = function () {\n  let density = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return densities[density];\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,MAAMA,gBAA4C,GAAG;EAC1DC,QAAQ,EAAE,QADgD;EAE1DC,YAAY,EAAE,IAF4C;EAG1DC,aAAa,EAAE;AAH2C,CAArD;AAMP,OAAO,MAAMC,QAAoC,mCAC5CJ,gBAD4C,GAC5B,EAD4B,EAC5B;EACnBC,QAAQ,EAAE,OADS;EAEnBE,aAAa,EAAE;AAFI,CAD4B,CAA1C;AAOP,OAAO,MAAME,gBAA4C,qBACpDD,QADoD,CAAlD;AAGP,OAAO,MAAME,gBAA4C,qBACpDD,gBADoD,CAAlD;AAGP,OAAO,MAAME,gBAA4C,mCACpDD,gBADoD,GACpC,EADoC,EACpC;EACnBL,QAAQ,EAAE,QADS;EAEnBE,aAAa,EAAE;AAFI,CADoC,CAAlD;AAOP,OAAO,MAAMK,SAAS,GAAG;EACvB,MAAMH,gBADiB;EAEvB,MAAMC,gBAFiB;EAGvB,MAAMC,gBAHiB;EAIvB,KAAKH,QAJkB;EAKvB,KAAKJ;AALkB,CAAlB;AAYP,OAAO,MAAMS,mBAAmB,GAAG;EAAA,IACjCC,OADiC,uEACV,CADU;EAAA,OAEFF,SAAS,CAACE,OAAD,CAFP;AAAA,CAA5B","names":["densityPositive1","fontSize","indicatorGap","indicatorSize","density0","densityNegative1","densityNegative2","densityNegative3","densities","accordionDimensions","density"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Accordion2/accordionDimensions.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type {\n  DensityRamp,\n  FontSizes,\n  SpacingSizes,\n} from '@looker/design-tokens'\nimport type { IconSize } from '../Icon'\n\ntype AccordionDensityDimensions = {\n  indicatorGap: SpacingSizes\n  indicatorSize: IconSize\n  fontSize: FontSizes\n}\n\n// Positive density values\nexport const densityPositive1: AccordionDensityDimensions = {\n  fontSize: 'medium',\n  indicatorGap: 'u1',\n  indicatorSize: 'medium',\n}\n\nexport const density0: AccordionDensityDimensions = {\n  ...densityPositive1,\n  fontSize: 'small',\n  indicatorSize: 'small',\n}\n\n// Negative density values\nexport const densityNegative1: AccordionDensityDimensions = {\n  ...density0,\n}\nexport const densityNegative2: AccordionDensityDimensions = {\n  ...densityNegative1,\n}\nexport const densityNegative3: AccordionDensityDimensions = {\n  ...densityNegative2,\n  fontSize: 'xsmall',\n  indicatorSize: 'xxsmall',\n}\n\n// Lookup object\nexport const densities = {\n  '-1': densityNegative1,\n  '-2': densityNegative2,\n  '-3': densityNegative3,\n  '0': density0,\n  '1': densityPositive1,\n}\n\n/**\n * Returns an object with size and spacing scaled to \"density\" parameter value\n * @param density Accepts values from -3 (smallest) to 1 (largest)\n */\nexport const accordionDimensions = (\n  density: DensityRamp = 0\n): AccordionDensityDimensions => densities[density]\n"]},"metadata":{},"sourceType":"module"}