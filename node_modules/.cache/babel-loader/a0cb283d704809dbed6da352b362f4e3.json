{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { textBlends } from '../blendPoints';\nimport { accentBlendScale, generateInteractive } from './generateStatefulColors';\nimport { mixColors } from './mixColors';\nimport { mixScaledColors } from './mixScaledColors';\nexport const generateDerivativeColors = (_ref, _ref2) => {\n  let {\n    background,\n    inform,\n    link,\n    positive,\n    text,\n    warn,\n    title,\n    body\n  } = _ref;\n  let {\n    text5\n  } = _ref2;\n  const accents = {\n    informAccent: mixScaledColors(accentBlendScale, inform, background),\n    positiveAccent: mixScaledColors(accentBlendScale, positive, background),\n    warnAccent: mixScaledColors(accentBlendScale, warn, background)\n  };\n  return _objectSpread({\n    body: body || text5,\n    field: background,\n    inverse: text,\n    inverseOn: background,\n    linkInteractive: generateInteractive(link),\n    neutral: mixColors(textBlends[1], text, background),\n    title: title || text5\n  }, accents);\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAASA,UAAT,QAA2B,gBAA3B;AAEA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,0BAAtD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAO,MAAMC,wBAAwB,GAAG,iBAYjB;EAAA,IAXrB;IACEC,UADF;IAEEC,MAFF;IAGEC,IAHF;IAIEC,QAJF;IAKEC,IALF;IAMEC,IANF;IAOEC,KAPF;IAQEC;EARF,CAWqB;EAAA,IADrB;IAAEC;EAAF,CACqB;EACrB,MAAMC,OAAO,GAAG;IACdC,YAAY,EAAEZ,eAAe,CAACH,gBAAD,EAAmBM,MAAnB,EAA2BD,UAA3B,CADf;IAEdW,cAAc,EAAEb,eAAe,CAACH,gBAAD,EAAmBQ,QAAnB,EAA6BH,UAA7B,CAFjB;IAGdY,UAAU,EAAEd,eAAe,CAACH,gBAAD,EAAmBU,IAAnB,EAAyBL,UAAzB;EAHb,CAAhB;EAMA;IACEO,IAAI,EAAEA,IAAI,IAAIC,KADhB;IAEEK,KAAK,EAAEb,UAFT;IAGEc,OAAO,EAAEV,IAHX;IAIEW,SAAS,EAAEf,UAJb;IAKEgB,eAAe,EAAEpB,mBAAmB,CAACM,IAAD,CALtC;IAMEe,OAAO,EAAEpB,SAAS,CAACH,UAAU,CAAC,CAAD,CAAX,EAAgBU,IAAhB,EAAsBJ,UAAtB,CANpB;IAOEM,KAAK,EAAEA,KAAK,IAAIE;EAPlB,GAQKC,OARL;AAUD,CA7BM","names":["textBlends","accentBlendScale","generateInteractive","mixColors","mixScaledColors","generateDerivativeColors","background","inform","link","positive","text","warn","title","body","text5","accents","informAccent","positiveAccent","warnAccent","field","inverse","inverseOn","linkInteractive","neutral"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/design-tokens/src/color/utils/generateDerivativeColors.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { textBlends } from '../blendPoints'\nimport type { BlendColors, DerivativeColors, SpecifiableColors } from '../types'\nimport { accentBlendScale, generateInteractive } from './generateStatefulColors'\nimport { mixColors } from './mixColors'\nimport { mixScaledColors } from './mixScaledColors'\n\nexport const generateDerivativeColors = (\n  {\n    background,\n    inform,\n    link,\n    positive,\n    text,\n    warn,\n    title,\n    body,\n  }: SpecifiableColors,\n  { text5 }: BlendColors\n): DerivativeColors => {\n  const accents = {\n    informAccent: mixScaledColors(accentBlendScale, inform, background),\n    positiveAccent: mixScaledColors(accentBlendScale, positive, background),\n    warnAccent: mixScaledColors(accentBlendScale, warn, background),\n  }\n\n  return {\n    body: body || text5,\n    field: background,\n    inverse: text,\n    inverseOn: background,\n    linkInteractive: generateInteractive(link),\n    neutral: mixColors(textBlends[1], text, background),\n    title: title || text5,\n    ...accents,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}