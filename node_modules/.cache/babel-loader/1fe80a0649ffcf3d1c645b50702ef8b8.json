{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nlet _ = t => t,\n    _t;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport styled from 'styled-components';\nimport { space } from '@looker/design-tokens';\nimport { DividerBase } from './Divider';\nexport const DividerVertical = styled(DividerBase).attrs(props => {\n  if (props.height && props.stretch) {\n    console.warn('When using DividerVertical, the props height and stretch are incompatible. The stretch value will be discarded');\n  }\n\n  const {\n    height = '1rem',\n    mx = 'xsmall',\n    my = 'xsmall'\n  } = props;\n  return _objectSpread(_objectSpread({}, props), {}, {\n    'aria-orientation': 'vertical',\n    height,\n    mx,\n    my\n  });\n}).withConfig({\n  displayName: \"DividerVertical\",\n  componentId: \"sc-10179s7-0\"\n})(_t || (_t = _`\n  ${0}\n  display: inline-block;\n  width: ${0};\n  ${0}\n`), space, _ref => {\n  let {\n    size\n  } = _ref;\n  return size;\n}, _ref2 => {\n  let {\n    height,\n    stretch\n  } = _ref2;\n  return stretch ? `align-self: stretch; height: inherit;` : `height: ${height};`;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,SAASC,WAAT,QAA4B,WAA5B;AAOA,OAAO,MAAMC,eAAe,GAAGH,MAAM,CAACE,WAAD,CAANF,CAAoBI,KAApBJ,CAC7BK,KAAK,IAAI;EACP,IAAIA,KAAK,CAACC,MAAND,IAAgBA,KAAK,CAACE,OAA1B,EAAmC;IAEjCC,OAAO,CAACC,IAARD,CACE,gHADFA;EAGF;;EAEA,MAAM;IAAEF,MAAM,GAAG,MAAX;IAAmBI,EAAE,GAAG,QAAxB;IAAkCC,EAAE,GAAG;EAAvC,IAAoDN,KAA1D;EAEA,uCACKA,KADL,GACU,EADV,EACU;IACR,oBAAoB,UADZ;IAERC,MAFQ;IAGRI,EAHQ;IAIRC;EAJQ,CADV;AAOD,CAlB4BX,EAmB9BY,UAnB8BZ,CAmB9B;EAAAa;EAAAC;AAAA,CAnB8Bd,EAmB9Be,aAAuB;AACxB,IAAE,CAAQ;AACV;AACA,WAAS,CAAqB;AAC9B,IAAE,CAC2E;AAC7E,CANC,CAnB8Bf,EAoB3BC,KApB2BD,EAsBpB;EAAA,IAAC;IAAEgB;EAAF,CAAD;EAAA,OAAcA,IAAd;AAAA,CAtBoBhB,EAuB3B;EAAA,IAAC;IAAEM,MAAF;IAAUC;EAAV,CAAD;EAAA,OACAA,OAAO,GAAI,uCAAJ,GAA8C,WAAUD,MAAO,GADtE;AAAA,CAvB2BN,CAAxB","names":["styled","space","DividerBase","DividerVertical","attrs","props","height","stretch","console","warn","mx","my","withConfig","displayName","componentId","_t","size"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Divider/DividerVertical.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport styled from 'styled-components'\nimport { space } from '@looker/design-tokens'\nimport type { DividerProps } from './Divider'\nimport { DividerBase } from './Divider'\n\nexport interface DividerVerticalProps extends DividerProps {\n  height?: number | string\n  stretch?: boolean\n}\n\nexport const DividerVertical = styled(DividerBase).attrs<DividerVerticalProps>(\n  props => {\n    if (props.height && props.stretch) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'When using DividerVertical, the props height and stretch are incompatible. The stretch value will be discarded'\n      )\n    }\n\n    const { height = '1rem', mx = 'xsmall', my = 'xsmall' } = props\n\n    return {\n      ...props,\n      'aria-orientation': 'vertical',\n      height,\n      mx,\n      my,\n    }\n  }\n)<DividerVerticalProps>`\n  ${space}\n  display: inline-block;\n  width: ${({ size }) => size};\n  ${({ height, stretch }) =>\n    stretch ? `align-self: stretch; height: inherit;` : `height: ${height};`}\n`\n"]},"metadata":{},"sourceType":"module"}