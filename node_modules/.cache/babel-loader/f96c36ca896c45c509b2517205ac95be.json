{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport React, { createContext, useCallback, useContext } from 'react';\nimport { useDelayedState } from '../utils';\nconst nestedMenuContext = {\n  change: () => undefined,\n  delayChange: () => undefined,\n  value: '',\n  waitChange: () => undefined\n};\nexport const NestedMenuContext = createContext(nestedMenuContext);\nexport const NestedMenuProvider = _ref => {\n  let {\n    children,\n    closeParentMenu\n  } = _ref;\n  const delayedStateProps = useDelayedState('');\n  const {\n    closeParentMenu: closeGrandparentMenu\n  } = useContext(NestedMenuContext);\n  const wrappedCloseParentMenu = useCallback(() => {\n    closeGrandparentMenu === null || closeGrandparentMenu === void 0 ? void 0 : closeGrandparentMenu();\n    closeParentMenu === null || closeParentMenu === void 0 ? void 0 : closeParentMenu();\n  }, [closeGrandparentMenu, closeParentMenu]);\n  return React.createElement(NestedMenuContext.Provider, {\n    value: _objectSpread(_objectSpread({}, delayedStateProps), {}, {\n      closeParentMenu: wrappedCloseParentMenu\n    })\n  }, children);\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,QAA8D,OAA9D;AAGA,SAASC,eAAT,QAAgC,UAAhC;AASA,MAAMC,iBAAyC,GAAG;EAChDC,MAAM,EAAE,MAAMC,SADkC;EAEhDC,WAAW,EAAE,MAAMD,SAF6B;EAGhDE,KAAK,EAAE,EAHyC;EAIhDC,UAAU,EAAE,MAAMH;AAJ8B,CAAlD;AAOA,OAAO,MAAMI,iBAAiB,GAAGV,aAAa,CAACI,iBAAD,CAAvC;AAIP,OAAO,MAAMO,kBAAkB,GAAG,QAGqB;EAAA,IAHpB;IACjCC,QADiC;IAEjCC;EAFiC,CAGoB;EACrD,MAAMC,iBAAiB,GAAGX,eAAe,CAAS,EAAT,CAAzC;EACA,MAAM;IAAEU,eAAe,EAAEE;EAAnB,IACJb,UAAU,CAACQ,iBAAD,CADZ;EAGA,MAAMM,sBAAsB,GAAGf,WAAW,CAAC,MAAM;IAE/Cc,oBAAoB,SAApBA,wBAAoB,WAApBA,GAAoB,MAApBA,uBAAoB,EAApBA;IACAF,eAAe,SAAfA,mBAAe,WAAfA,GAAe,MAAfA,kBAAe,EAAfA;EACD,CAJyC,EAIvC,CAACE,oBAAD,EAAuBF,eAAvB,CAJuC,CAA1C;EAMA,OACEd,oBAACW,iBAAiB,CAACO,QAAnB,EAA2B;IACzBT,KAAK,kCAAOM,iBAAP,GAAwB,EAAxB,EAAwB;MAAED,eAAe,EAAEG;IAAnB,CAAxB;EADoB,CAA3B,EAGGJ,QAHH,CADF;AAOD,CArBM","names":["React","createContext","useCallback","useContext","useDelayedState","nestedMenuContext","change","undefined","delayChange","value","waitChange","NestedMenuContext","NestedMenuProvider","children","closeParentMenu","delayedStateProps","closeGrandparentMenu","wrappedCloseParentMenu","Provider"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Menu/NestedMenuProvider.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { createContext, useCallback, useContext } from 'react'\nimport type { ReactNode } from 'react'\nimport type { UseDelayedStateReturn } from '../utils'\nimport { useDelayedState } from '../utils'\n\nexport type CloseParentMenuProps = {\n  closeParentMenu?: () => void\n}\n\nexport type NestedMenuContextProps = UseDelayedStateReturn<string> &\n  CloseParentMenuProps\n\nconst nestedMenuContext: NestedMenuContextProps = {\n  change: () => undefined,\n  delayChange: () => undefined,\n  value: '',\n  waitChange: () => undefined,\n}\n\nexport const NestedMenuContext = createContext(nestedMenuContext)\n\n// Stores the id for the current nestedMenu to prevent them\n// from competing with each other (e.g. from hover vs arrow key)\nexport const NestedMenuProvider = ({\n  children,\n  closeParentMenu,\n}: CloseParentMenuProps & { children?: ReactNode }) => {\n  const delayedStateProps = useDelayedState<string>('')\n  const { closeParentMenu: closeGrandparentMenu } =\n    useContext(NestedMenuContext)\n\n  const wrappedCloseParentMenu = useCallback(() => {\n    // Close the grandparent menu, if there is one\n    closeGrandparentMenu?.()\n    closeParentMenu?.()\n  }, [closeGrandparentMenu, closeParentMenu])\n\n  return (\n    <NestedMenuContext.Provider\n      value={{ ...delayedStateProps, closeParentMenu: wrappedCloseParentMenu }}\n    >\n      {children}\n    </NestedMenuContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}