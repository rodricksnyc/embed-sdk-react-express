{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { useResize } from './useResize';\nexport const measureElement = element => {\n  if (!element) {\n    return typeof DOMRect === 'function' ? new DOMRect() : {\n      bottom: 0,\n      height: 0,\n      left: 0,\n      rect: {},\n      right: 0,\n      toJSON: () => null,\n      top: 0,\n      width: 0,\n      x: 0,\n      y: 0\n    };\n  }\n\n  return element.getBoundingClientRect();\n};\nexport const useMeasuredElement = element => {\n  const [rect, setRect] = useState(measureElement());\n  const refreshDomRect = useCallback(() => {\n    element && setRect(measureElement(element));\n  }, [element]);\n  useResize(element, refreshDomRect);\n  return [rect, refreshDomRect];\n};","map":{"version":3,"mappings":"AAKA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,cAAc,GAAIC,OAA4B,IAAK;EAC9D,IAAI,CAACA,OAAL,EAAc;IACZ,OAAO,OAAOC,OAAP,KAAmB,UAAnB,GACH,IAAIA,OAAJ,EADG,GAEH;MACEC,MAAM,EAAE,CADV;MAEEC,MAAM,EAAE,CAFV;MAGEC,IAAI,EAAE,CAHR;MAIEC,IAAI,EAAE,EAJR;MAKEC,KAAK,EAAE,CALT;MAMEC,MAAM,EAAE,MAAM,IANhB;MAOEC,GAAG,EAAE,CAPP;MAQEC,KAAK,EAAE,CART;MASEC,CAAC,EAAE,CATL;MAUEC,CAAC,EAAE;IAVL,CAFJ;EAcF;;EAEA,OAAOX,OAAO,CAACY,qBAARZ,EAAP;AACD,CAnBM;AAqBP,OAAO,MAAMa,kBAAkB,GAC7Bb,OAA2B,IACD;EAC1B,MAAM,CAACK,IAAD,EAAOS,OAAP,IAAkBjB,QAAQ,CAACE,cAAc,EAAf,CAAhC;EAEA,MAAMgB,cAAc,GAAGnB,WAAW,CAAC,MAAM;IAEvCI,OAAO,IAAIc,OAAO,CAACf,cAAc,CAACC,OAAD,CAAf,CAAlBA;EACD,CAHiC,EAG/B,CAACA,OAAD,CAH+B,CAAlC;EAKAF,SAAS,CAACE,OAAD,EAAUe,cAAV,CAATjB;EAEA,OAAO,CAACO,IAAD,EAAOU,cAAP,CAAP;AACD,CAbM","names":["useCallback","useState","useResize","measureElement","element","DOMRect","bottom","height","left","rect","right","toJSON","top","width","x","y","getBoundingClientRect","useMeasuredElement","setRect","refreshDomRect"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/utils/useMeasuredElement.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useCallback, useState } from 'react'\nimport { useResize } from './useResize'\n\nexport const measureElement = (element?: HTMLElement | null) => {\n  if (!element) {\n    return typeof DOMRect === 'function'\n      ? new DOMRect()\n      : {\n          bottom: 0,\n          height: 0,\n          left: 0,\n          rect: {},\n          right: 0,\n          toJSON: () => null,\n          top: 0,\n          width: 0,\n          x: 0,\n          y: 0,\n        }\n  }\n\n  return element.getBoundingClientRect()\n}\n\nexport const useMeasuredElement = (\n  element: HTMLElement | null\n): [DOMRect, () => void] => {\n  const [rect, setRect] = useState(measureElement())\n\n  const refreshDomRect = useCallback(() => {\n    // Update client rect\n    element && setRect(measureElement(element))\n  }, [element])\n\n  useResize(element, refreshDomRect)\n\n  return [rect, refreshDomRect]\n}\n"]},"metadata":{},"sourceType":"module"}