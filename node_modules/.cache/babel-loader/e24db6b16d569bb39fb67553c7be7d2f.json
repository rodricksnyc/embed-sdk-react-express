{"ast":null,"code":"import { useState } from 'react';\nimport { useTheme } from 'styled-components';\nimport { getPortalRoot } from '../../../Portal';\nimport { useSyncedState } from '../../../utils';\n\nconst defaultCheckValueOnBlur = e => {\n  const target = e.currentTarget;\n  const input = target.querySelector('input') || target.querySelector('textarea');\n  return (input === null || input === void 0 ? void 0 : input.value) !== undefined && input.value !== '';\n};\n\nconst getIsInSelectList = (nextFocusTarget, inputArea) => {\n  const portalRoot = getPortalRoot();\n\n  if (!portalRoot.contains(nextFocusTarget)) {\n    return false;\n  }\n\n  if (portalRoot.contains(inputArea)) {\n    return (nextFocusTarget === null || nextFocusTarget === void 0 ? void 0 : nextFocusTarget.closest('portal-child')) !== inputArea.closest('portal-child');\n  }\n\n  return true;\n};\n\nexport const getHasValue = _ref => {\n  let {\n    value,\n    defaultValue\n  } = _ref;\n  if (value !== undefined) return value !== '';\n  if (defaultValue !== undefined) return defaultValue !== '';\n  return false;\n};\nexport const useFloatingLabel = _ref2 => {\n  let {\n    checkValueOnBlur: _checkValueOnBlur = defaultCheckValueOnBlur,\n    hasValue: propsHasValue,\n    labelOffset: _labelOffset = '0rem'\n  } = _ref2;\n  const [isFocused, setIsFocused] = useState(false);\n  const [hasValue, setHasValue] = useSyncedState(propsHasValue);\n  const theme = useTheme();\n  const style = {\n    '--label-translate': `${_labelOffset}, ${theme.space.u4}`\n  };\n  return {\n    className: hasValue || isFocused ? 'label-up' : 'label-down',\n    handlers: {\n      onBlur: e => {\n        if (_checkValueOnBlur) {\n          setHasValue(_checkValueOnBlur(e));\n        }\n\n        const nextFocusTarget = e.relatedTarget;\n        const isInSelectList = getIsInSelectList(nextFocusTarget, e.currentTarget);\n\n        if (nextFocusTarget && !e.currentTarget.contains(nextFocusTarget) && !isInSelectList) {\n          setIsFocused(false);\n        }\n      },\n      onFocus: () => {\n        setIsFocused(true);\n      }\n    },\n    isFocused,\n    style\n  };\n};","map":{"version":3,"mappings":"AA4BA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,cAAT,QAA+B,gBAA/B;;AAGA,MAAMC,uBAAuB,GAAIC,CAAa,IAAK;EACjD,MAAMC,MAAM,GAAGD,CAAC,CAACE,aAAjB;EACA,MAAMC,KAAK,GACTF,MAAM,CAACG,aAAPH,CAAqB,OAArBA,KAAiCA,MAAM,CAACG,aAAPH,CAAqB,UAArBA,CADnC;EAEA,OAAO,MAAK,SAALE,SAAK,WAALA,GAAK,MAALA,QAAK,CAAEE,KAAP,MAAiBC,SAAjB,IAA8BH,KAAK,CAACE,KAANF,KAAgB,EAArD;AACD,CALD;;AAOA,MAAMI,iBAAiB,GAAG,CACxBC,eADwB,EAExBC,SAFwB,KAGrB;EACH,MAAMC,UAAU,GAAGb,aAAa,EAAhC;;EACA,IAAI,CAACa,UAAU,CAACC,QAAXD,CAAoBF,eAApBE,CAAL,EAA2C;IACzC,OAAO,KAAP;EACF;;EACA,IAAIA,UAAU,CAACC,QAAXD,CAAoBD,SAApBC,CAAJ,EAAoC;IAClC,OACE,CAACF,eAAe,SAAfA,mBAAe,WAAfA,GAAe,MAAfA,kBAAe,CAAyBI,OAAxCJ,CAAgD,cAAhDA,CAAD,MACAC,SAAS,CAACG,OAAVH,CAAkB,cAAlBA,CAFF;EAIF;;EACA,OAAO,IAAP;AACD,CAfD;;AAqBA,OAAO,MAAMI,WAAW,GAAG,QAQkB;EAAA,IAH3C;IACAR,KADA;IAEAS;EAFA,CAG2C;EAC3C,IAAIT,KAAK,KAAKC,SAAd,EAAyB,OAAOD,KAAK,KAAK,EAAjB;EACzB,IAAIS,YAAY,KAAKR,SAArB,EAAgC,OAAOQ,YAAY,KAAK,EAAxB;EAChC,OAAO,KAAP;AACD,CAZM;AAiBP,OAAO,MAAMC,gBAAgB,GAAG,SAIH;EAAA,IAJI;IAC/BC,gBAAgB,EAAhBA,iBAAgB,GAAGjB,uBADY;IAE/BkB,QAAQ,EAAEC,aAFqB;IAG/BC,WAAW,EAAXA,YAAW,GAAG;EAHiB,CAIJ;EAC3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACsB,QAAD,EAAWK,WAAX,IAA0BxB,cAAc,CAACoB,aAAD,CAA9C;EAEA,MAAMK,KAAK,GAAG3B,QAAQ,EAAtB;EAGA,MAAM4B,KAA6B,GAAG;IACpC,qBAAsB,GAAEL,YAAY,KAAII,KAAK,CAACE,KAANF,CAAYG,EAAG;EADnB,CAAtC;EAIA,OAAO;IACLC,SAAS,EAAEV,QAAQ,IAAIG,SAAZH,GAAwB,UAAxBA,GAAqC,YAD3C;IAELW,QAAQ,EAAE;MACRC,MAAM,EAAG7B,CAA6B,IAAK;QAGzC,IAAIgB,iBAAJ,EAAsB;UACpBM,WAAW,CAACN,iBAAgB,CAAChB,CAAD,CAAjB,CAAXsB;QACF;;QAEA,MAAMd,eAAe,GAAGR,CAAC,CAAC8B,aAA1B;QAIA,MAAMC,cAAc,GAAGxB,iBAAiB,CACtCC,eADsC,EAEtCR,CAAC,CAACE,aAFoC,CAAxC;;QAIA,IACEM,eAAe,IACf,CAACR,CAAC,CAACE,aAAFF,CAAgBW,QAAhBX,CAAyBQ,eAAzBR,CADDQ,IAEA,CAACuB,cAHH,EAIE;UACAV,YAAY,CAAC,KAAD,CAAZA;QACF;MACD,CAvBO;MAwBRW,OAAO,EAAE,MAAM;QACbX,YAAY,CAAC,IAAD,CAAZA;MACF;IA1BQ,CAFL;IA8BLD,SA9BK;IA+BLI;EA/BK,CAAP;AAiCD,CAhDM","names":["useState","useTheme","getPortalRoot","useSyncedState","defaultCheckValueOnBlur","e","target","currentTarget","input","querySelector","value","undefined","getIsInSelectList","nextFocusTarget","inputArea","portalRoot","contains","closest","getHasValue","defaultValue","useFloatingLabel","checkValueOnBlur","hasValue","propsHasValue","labelOffset","isFocused","setIsFocused","setHasValue","theme","style","space","u4","className","handlers","onBlur","relatedTarget","isInSelectList","onFocus"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Fields/Field/useFloatingLabel.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { CompatibleHTMLProps } from '@looker/design-tokens'\nimport type { FocusEvent } from 'react'\nimport { useState } from 'react'\nimport { useTheme } from 'styled-components'\nimport { getPortalRoot } from '../../../Portal'\nimport { useSyncedState } from '../../../utils'\nimport type { UseFloatingLabelProps } from './types'\n\nconst defaultCheckValueOnBlur = (e: FocusEvent) => {\n  const target = e.currentTarget\n  const input =\n    target.querySelector('input') || target.querySelector('textarea')\n  return input?.value !== undefined && input.value !== ''\n}\n\nconst getIsInSelectList = (\n  nextFocusTarget: Element | Node | null,\n  inputArea: HTMLElement\n) => {\n  const portalRoot = getPortalRoot()\n  if (!portalRoot.contains(nextFocusTarget)) {\n    return false\n  }\n  if (portalRoot.contains(inputArea)) {\n    return (\n      (nextFocusTarget as unknown as Element)?.closest('portal-child') !==\n      inputArea.closest('portal-child')\n    )\n  }\n  return true\n}\n\n/**\n * A helper function to derive the hasValue prop from the value and defaultValue props.\n * Use custom logic for fields that have different value-related props (see FieldChips).\n */\nexport const getHasValue = <\n  Props extends {\n    value?: unknown\n    defaultValue?: unknown\n  } = CompatibleHTMLProps<HTMLInputElement>\n>({\n  value,\n  defaultValue,\n}: Pick<Props, 'value' | 'defaultValue'>) => {\n  if (value !== undefined) return value !== ''\n  if (defaultValue !== undefined) return defaultValue !== ''\n  return false\n}\n\n/**\n * Controls the label position for FloatingLabelField\n */\nexport const useFloatingLabel = ({\n  checkValueOnBlur = defaultCheckValueOnBlur,\n  hasValue: propsHasValue,\n  labelOffset = '0rem',\n}: UseFloatingLabelProps) => {\n  const [isFocused, setIsFocused] = useState(false)\n  const [hasValue, setHasValue] = useSyncedState(propsHasValue)\n\n  const theme = useTheme()\n  // Limitations of style/CSSProperties type\n  // https://github.com/frenic/csstype#what-should-i-do-when-i-get-type-errors\n  const style: Record<string, string> = {\n    '--label-translate': `${labelOffset}, ${theme.space.u4}`,\n  }\n\n  return {\n    className: hasValue || isFocused ? 'label-up' : 'label-down',\n    handlers: {\n      onBlur: (e: FocusEvent<HTMLDivElement>) => {\n        // Check for a value on blur â€“ if there is one,\n        // the label shouldn't move back down\n        if (checkValueOnBlur) {\n          setHasValue(checkValueOnBlur(e))\n        }\n\n        const nextFocusTarget = e.relatedTarget\n        // For FieldSelect, focus can move (briefly) into the list,\n        // which is in a Portal\n        // (and a separate portal child from the input, if the input is also in aportal)\n        const isInSelectList = getIsInSelectList(\n          nextFocusTarget,\n          e.currentTarget\n        )\n        if (\n          nextFocusTarget &&\n          !e.currentTarget.contains(nextFocusTarget) &&\n          !isInSelectList\n        ) {\n          setIsFocused(false)\n        }\n      },\n      onFocus: () => {\n        setIsFocused(true)\n      },\n    },\n    isFocused,\n    style,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}