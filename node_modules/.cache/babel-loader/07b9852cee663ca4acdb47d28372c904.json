{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport i18next from 'i18next';\nexport const i18nInitOptions = {\n  fallbackLng: 'en',\n  initImmediate: false,\n  interpolation: {\n    escapeValue: false\n  },\n  keySeparator: false,\n  lng: 'en',\n  missingKeyHandler: (languages, ns, key) => {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Missing i18n key (${languages.join(', ')}): \"${key}\" in ${ns}`);\n    }\n  },\n  nsSeparator: false,\n  saveMissing: true\n};\nexport const i18nUpdate = _ref => {\n  let {\n    resources,\n    locale\n  } = _ref;\n\n  if (resources) {\n    Object.keys(resources).forEach(lng => {\n      const allNamespaces = resources[lng];\n      Object.keys(allNamespaces).forEach(ns => {\n        i18next.addResourceBundle(lng, ns, allNamespaces[ns]);\n      });\n    });\n  }\n\n  if (locale && locale !== i18next.language) {\n    i18next.changeLanguage(locale);\n  }\n};\nexport async function i18nInit(options) {\n  if (i18next.isInitialized) {\n    i18nUpdate(options);\n  }\n\n  i18next.init(_objectSpread(_objectSpread({}, i18nInitOptions), {}, {\n    lng: options.locale,\n    resources: options.resources\n  }));\n  return i18next;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,OAAOA,OAAP,MAAoB,SAApB;AAIA,OAAO,MAAMC,eAA4B,GAAG;EAC1CC,WAAW,EAAE,IAD6B;EAE1CC,aAAa,EAAE,KAF2B;EAG1CC,aAAa,EAAE;IACbC,WAAW,EAAE;EADA,CAH2B;EAM1CC,YAAY,EAAE,KAN4B;EAO1CC,GAAG,EAAE,IAPqC;EAQ1CC,iBAAiB,EAAE,CAACC,SAAD,EAAsBC,EAAtB,EAAkCC,GAAlC,KAAkD;IACnE,IAAIC,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;MACzC,MAAM,IAAIG,KAAJ,CACH,qBAAoBN,SAAS,CAACO,IAAVP,CAAe,IAAfA,CAAqB,OAAME,GAAI,QAAOD,EAAG,EAD1D,CAAN;IAGF;EACD,CAdyC;EAe1CO,WAAW,EAAE,KAf6B;EAgB1CC,WAAW,EAAE;AAhB6B,CAArC;AAmBP,OAAO,MAAMC,UAAU,GAAG,QAA+C;EAAA,IAA9C;IAAEC,SAAF;IAAaC;EAAb,CAA8C;;EACvE,IAAID,SAAJ,EAAe;IACbE,MAAM,CAACC,IAAPD,CAAYF,SAAZE,EAAuBE,OAAvBF,CAAgCf,GAAW,IAAK;MAC9C,MAAMkB,aAAa,GAAGL,SAAS,CAACb,GAAD,CAA/B;MACAe,MAAM,CAACC,IAAPD,CAAYG,aAAZH,EAA2BE,OAA3BF,CAAoCZ,EAAU,IAAK;QACjDV,OAAO,CAAC0B,iBAAR1B,CAA0BO,GAA1BP,EAA+BU,EAA/BV,EAAmCyB,aAAa,CAACf,EAAD,CAAhDV;MACD,CAFDsB;IAGD,CALDA;EAMF;;EACA,IAAID,MAAM,IAAIA,MAAM,KAAKrB,OAAO,CAAC2B,QAAjC,EAA2C;IACzC3B,OAAO,CAAC4B,cAAR5B,CAAuBqB,MAAvBrB;EACF;AACD,CAZM;AAcP,OAAO,eAAe6B,QAAf,CAAwBC,OAAxB,EAA4C;EACjD,IAAI9B,OAAO,CAAC+B,aAAZ,EAA2B;IACzBZ,UAAU,CAACW,OAAD,CAAVX;EACF;;EACAnB,OAAO,CAACgC,IAARhC,CAAYiC,gCACPhC,eADO,GACQ,EADR,EACQ;IAClBM,GAAG,EAAEuB,OAAO,CAACT,MADK;IAGlBD,SAAS,EAAEU,OAAO,CAACV;EAHD,CADR,CAAZpB;EAMA,OAAOA,OAAP;AACF","names":["i18next","i18nInitOptions","fallbackLng","initImmediate","interpolation","escapeValue","keySeparator","lng","missingKeyHandler","languages","ns","key","process","env","NODE_ENV","Error","join","nsSeparator","saveMissing","i18nUpdate","resources","locale","Object","keys","forEach","allNamespaces","addResourceBundle","language","changeLanguage","i18nInit","options","isInitialized","init","_objectSpread"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/i18n/src/i18nInit.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport i18next from 'i18next'\nimport type { InitOptions } from 'i18next'\nimport type { I18nState } from './types'\n\nexport const i18nInitOptions: InitOptions = {\n  fallbackLng: 'en',\n  initImmediate: false,\n  interpolation: {\n    escapeValue: false,\n  },\n  keySeparator: false,\n  lng: 'en',\n  missingKeyHandler: (languages: string[], ns: string, key: string) => {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        `Missing i18n key (${languages.join(', ')}): \"${key}\" in ${ns}`\n      )\n    }\n  },\n  nsSeparator: false,\n  saveMissing: true,\n}\n\nexport const i18nUpdate = ({ resources, locale }: Partial<I18nState>) => {\n  if (resources) {\n    Object.keys(resources).forEach((lng: string) => {\n      const allNamespaces = resources[lng]\n      Object.keys(allNamespaces).forEach((ns: string) => {\n        i18next.addResourceBundle(lng, ns, allNamespaces[ns])\n      })\n    })\n  }\n  if (locale && locale !== i18next.language) {\n    i18next.changeLanguage(locale)\n  }\n}\n\nexport async function i18nInit(options: I18nState) {\n  if (i18next.isInitialized) {\n    i18nUpdate(options)\n  }\n  i18next.init({\n    ...i18nInitOptions,\n    lng: options.locale,\n    // add optional resources from args\n    resources: options.resources,\n  })\n  return i18next\n}\n"]},"metadata":{},"sourceType":"module"}