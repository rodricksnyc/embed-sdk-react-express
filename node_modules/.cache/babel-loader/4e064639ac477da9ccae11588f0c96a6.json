{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nlet _ = t => t,\n    _t;\n\nconst _excluded = [\"children\", \"closeParentMenu\"];\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { List } from '../../List';\nimport { listPadding } from '../../List/utils';\nimport { NestedMenuProvider } from '../NestedMenuProvider';\nexport const MenuListInternal = forwardRef((_ref, forwardedRef) => {\n  let {\n    children,\n    closeParentMenu\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(NestedMenuProvider, {\n    closeParentMenu: closeParentMenu\n  }, React.createElement(List, _extends({\n    role: \"menu\",\n    ref: forwardedRef\n  }, props), children));\n});\nMenuListInternal.displayName = 'MenuListInternal';\nexport const MenuList = styled(MenuListInternal).withConfig({\n  displayName: \"MenuList\",\n  componentId: \"sc-qdtl3f-0\"\n})(_t || (_t = _`\n  min-width: 12rem;\n\n  ${0}\n`), listPadding);","map":{"version":3,"mappings":";;;;;;;AAMA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,kBAAT,QAAmC,uBAAnC;AAIA,OAAO,MAAMC,gBAAgB,GAAGL,UAAU,CACxC,OAEEM,YAFF,KAEqC;EAAA,IADnC;IAAEC,QAAF;IAAYC;EAAZ,IAAsDC,IACnB;EAAA,IADHC,KAAK,4CACF;;EADE,OAGrCX,oBAACK,kBAAD,EAAmB;IAACI,eAAe,EAAEA;EAAlB,CAAnB,EACET,oBAACG,IAAD,EAAKS;IAACC,IAAI,EAAC,MAAN;IAAaC,GAAG,EAAEP;EAAlB,GAAoCI,KAApC,CAAL,EACGH,QADH,CADF,CAHqC;AAQtC,CAVuC,CAAnC;AAYPF,gBAAgB,CAACS,WAAjBT,GAA+B,kBAA/BA;AAMA,OAAO,MAAMU,QAAQ,GAAGd,MAAM,CAACI,gBAAD,CAANJ,CAAwBe,UAAxBf,CAAwB;EAAAa;EAAAG;AAAA,CAAxBhB,EAAwBiB,aAAC;AACjD;AACA;AACA,IAAE,CAAc;AAChB,CAJgD,CAAxBjB,EAGpBE,WAHoBF,CAAjB","names":["React","forwardRef","styled","List","listPadding","NestedMenuProvider","MenuListInternal","forwardedRef","children","closeParentMenu","_ref","props","_extends","role","ref","displayName","MenuList","withConfig","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Menu/MenuList/MenuList.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport type { ListProps } from '../../List'\nimport { List } from '../../List'\nimport { listPadding } from '../../List/utils'\nimport type { CloseParentMenuProps } from '../NestedMenuProvider'\nimport { NestedMenuProvider } from '../NestedMenuProvider'\n\nexport type MenuListProps = Omit<ListProps, 'color'> & CloseParentMenuProps\n\nexport const MenuListInternal = forwardRef(\n  (\n    { children, closeParentMenu, ...props }: MenuListProps,\n    forwardedRef: Ref<HTMLUListElement>\n  ) => (\n    <NestedMenuProvider closeParentMenu={closeParentMenu}>\n      <List role=\"menu\" ref={forwardedRef} {...props}>\n        {children}\n      </List>\n    </NestedMenuProvider>\n  )\n)\nMenuListInternal.displayName = 'MenuListInternal'\n\n/**\n * @private Should only be used when a more complicated <Popover> + <MenuList>\n * composition is needed over a normal <Menu> element.\n */\nexport const MenuList = styled(MenuListInternal)`\n  min-width: 12rem;\n\n  ${listPadding}\n`\n"]},"metadata":{},"sourceType":"module"}