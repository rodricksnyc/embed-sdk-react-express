{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"children\", \"className\", \"disabled\", \"hovered\", \"ripple\", \"selected\", \"style\"],\n      _excluded2 = [\"callbacks\"];\n\nlet _ = t => t,\n    _t;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport pick from 'lodash/pick';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { rippleHandlerKeys, rippleStyle, useBoundedRipple, useRippleHandlers } from '../Ripple';\nimport { generateIndent } from '../Tree/utils';\nimport { listItemBackgroundColor } from '../ListItem/utils';\nexport const NavTreeDisclosure = styled(_ref => {\n  let {\n    children,\n    className,\n    disabled,\n    hovered,\n    ripple,\n    selected,\n    style\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const _useBoundedRipple = useBoundedRipple({\n    className,\n    color: selected ? 'key' : 'neutral',\n    style\n  }),\n        {\n    callbacks\n  } = _useBoundedRipple,\n        ripplePropsRest = _objectWithoutProperties(_useBoundedRipple, _excluded2);\n\n  const rippleHandlers = useRippleHandlers(callbacks, pick(props, rippleHandlerKeys), disabled);\n\n  const rippleProps = _objectSpread(_objectSpread({}, ripplePropsRest), rippleHandlers);\n\n  return React.createElement(\"li\", _extends({}, props, rippleProps), children);\n}).withConfig({\n  displayName: \"NavTreeDisclosure\",\n  componentId: \"sc-iyovyt-0\"\n})(_t || (_t = _`\n  ${0}\n  ${0}\n  ${0}\n\n  color: ${0};\n  display: flex;\n`), generateIndent, listItemBackgroundColor, rippleStyle, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.text5;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SACEC,iBADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,iBAJF,QAKO,WALP;AAMA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,uBAAT,QAAwC,mBAAxC;AAEA,OAAO,MAAMC,iBAAiB,GAAGP,MAAM,CACrCQ,QAa4B;EAAA,IAb3B;IACCC,QADD;IAECC,SAFD;IAGCC,QAHD;IAMCC,OAND;IAOCC,MAPD;IAUCC,QAVD;IAWCC;EAXD,IAasBP,IAAK;EAAA,IADvBQ,KAAK,4CACkB;;EAC1B,0BAA0Cb,gBAAgB,CAAgB;IACxEO,SADwE;IAExEO,KAAK,EAAEH,QAAQ,GAAG,KAAH,GAAW,SAF8C;IAGxEC;EAHwE,CAAhB,CAA1D;EAAA,MAAM;IAAEG;EAAF,IAAiCC,iBAAvC;EAAA,MAAsBC,eAAe,0DAArC;;EAMA,MAAMC,cAAc,GAAGjB,iBAAiB,CACtCc,SADsC,EAEtCpB,IAAI,CAACkB,KAAD,EAAQf,iBAAR,CAFkC,EAGtCU,QAHsC,CAAxC;;EAMA,MAAMW,WAAW,mCAAQF,eAAR,GAA4BC,cAA5B,CAAjB;;EAEA,OACEtB,uCAAQiB,KAAR,EAAmBM,WAAnB,GACGb,QADH,CADF;AAKD,CAlCoC,CAANT,CAmChCuB,UAnCgCvB,CAmChC;EAAAwB;EAAAC;AAAA,CAnCgCzB,EAmChC0B,aAAC;AACF,IAAE,CAAiB;AACnB,IAAE,CAA0B;AAC5B,IAAE,CAAc;AAChB;AACA,WAAS,CAAoC;AAC7C;AACA,CAPC,CAnCgC1B,EAoC7BK,cApC6BL,EAqC7BM,uBArC6BN,EAsC7BE,WAtC6BF,EAwCtB;EAAA,IAAC;IAAE2B;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,MAAND,CAAaE,KAA5B;AAAA,CAxCsB7B,CAA1B","names":["pick","React","styled","rippleHandlerKeys","rippleStyle","useBoundedRipple","useRippleHandlers","generateIndent","listItemBackgroundColor","NavTreeDisclosure","_ref","children","className","disabled","hovered","ripple","selected","style","props","color","callbacks","_useBoundedRipple","ripplePropsRest","rippleHandlers","rippleProps","withConfig","displayName","componentId","_t","theme","colors","text5"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/NavTree/NavTreeDisclosure.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport pick from 'lodash/pick'\nimport React from 'react'\nimport styled from 'styled-components'\nimport type { ListItemContentProps } from '../ListItem'\nimport {\n  rippleHandlerKeys,\n  rippleStyle,\n  useBoundedRipple,\n  useRippleHandlers,\n} from '../Ripple'\nimport { generateIndent } from '../Tree/utils'\nimport { listItemBackgroundColor } from '../ListItem/utils'\n\nexport const NavTreeDisclosure = styled(\n  ({\n    children,\n    className,\n    disabled,\n\n    // destructure to omit these styling-only props\n    hovered,\n    ripple,\n    // end destructure to omit\n\n    selected,\n    style,\n    ...props\n  }: ListItemContentProps) => {\n    const { callbacks, ...ripplePropsRest } = useBoundedRipple<HTMLLIElement>({\n      className,\n      color: selected ? 'key' : 'neutral',\n      style,\n    })\n\n    const rippleHandlers = useRippleHandlers(\n      callbacks,\n      pick(props, rippleHandlerKeys),\n      disabled\n    )\n\n    const rippleProps = { ...ripplePropsRest, ...rippleHandlers }\n\n    return (\n      <li {...props} {...rippleProps}>\n        {children}\n      </li>\n    )\n  }\n)`\n  ${generateIndent}\n  ${listItemBackgroundColor}\n  ${rippleStyle}\n\n  color: ${({ theme }) => theme.colors.text5};\n  display: flex;\n`\n"]},"metadata":{},"sourceType":"module"}