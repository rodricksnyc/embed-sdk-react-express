{"ast":null,"code":"import { generateTheme } from '@looker/design-tokens';\nimport { ThemeProvider, useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nexport const ExtendComponentsThemeProvider = _ref => {\n  let {\n    children,\n    themeCustomizations\n  } = _ref;\n  const parentTheme = useTheme();\n  const theme = useMemo(() => {\n    return generateTheme(parentTheme, themeCustomizations);\n  }, [parentTheme, themeCustomizations]);\n  return React.createElement(ThemeProvider, {\n    theme: theme\n  }, children);\n};","map":{"version":3,"mappings":"AAMA,SAASA,aAAT,QAA8B,uBAA9B;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,mBAAxC;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAgBA,OAAO,MAAMC,6BAA6B,GAAG,QAGhB;EAAA,IAHiB;IAC5CC,QAD4C;IAE5CC;EAF4C,CAGjB;EAC3B,MAAMC,WAAW,GAAGN,QAAQ,EAA5B;EAEA,MAAMO,KAAK,GAAGL,OAAO,CAAC,MAAM;IAC1B,OAAOJ,aAAa,CAACQ,WAAD,EAAcD,mBAAd,CAApB;EACD,CAFoB,EAElB,CAACC,WAAD,EAAcD,mBAAd,CAFkB,CAArB;EAIA,OAAOJ,oBAACF,aAAD,EAAc;IAACQ,KAAK,EAAEA;EAAR,CAAd,EAA8BH,QAA9B,CAAP;AACD,CAXM","names":["generateTheme","ThemeProvider","useTheme","React","useMemo","ExtendComponentsThemeProvider","children","themeCustomizations","parentTheme","theme"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components-providers/src/ExtendComponentsProvider.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ThemeCustomizations } from '@looker/design-tokens'\nimport { generateTheme } from '@looker/design-tokens'\nimport { ThemeProvider, useTheme } from 'styled-components'\nimport React, { useMemo } from 'react'\nimport type { ReactNode } from 'react'\n\nexport interface ExtendComponentsTheme {\n  themeCustomizations?: ThemeCustomizations\n  children?: ReactNode\n}\n\n/**\n * This component is designed for making adjustments to the Theme without\n * initializing an entire ComponentsProvider. ExtendComponentsThemeProvider\n * will merge the themeCustomizations with the theme already established.\n *\n * This component is intended for use cases where a portion of page carries\n * a different theme than the rest.\n */\nexport const ExtendComponentsThemeProvider = ({\n  children,\n  themeCustomizations,\n}: ExtendComponentsTheme) => {\n  const parentTheme = useTheme()\n\n  const theme = useMemo(() => {\n    return generateTheme(parentTheme, themeCustomizations)\n  }, [parentTheme, themeCustomizations])\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n"]},"metadata":{},"sourceType":"module"}