{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nlet _ = t => t,\n    _t;\n\nimport React, { Children, cloneElement, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useArrowKeyNav, useTranslation } from '../utils';\nimport { tabListCSS } from '../Tabs2/TabList2';\nexport const TabList = styled(forwardRef((_ref, ref) => {\n  let {\n    children,\n    selectedIndex,\n    onSelectTab,\n    className\n  } = _ref;\n  const {\n    t\n  } = useTranslation('TabList');\n  const clonedChildren = Children.map(children, (child, index) => {\n    return cloneElement(child, {\n      index,\n      onSelect: () => onSelectTab && onSelectTab(index),\n      selected: index === selectedIndex\n    });\n  });\n  const navProps = useArrowKeyNav({\n    axis: 'horizontal',\n    ref\n  });\n  return React.createElement(\"div\", _extends({\n    \"aria-label\": t('Tabs'),\n    className: className,\n    role: \"tablist\"\n  }, navProps), clonedChildren);\n})).attrs(_ref2 => {\n  let {\n    fontSize: _fontSize = 'small'\n  } = _ref2;\n  return {\n    fontSize: _fontSize\n  };\n}).withConfig({\n  displayName: \"TabList\",\n  componentId: \"sc-1xnjj79-0\"\n})(_t || (_t = _`\n  ${0}\n`), tabListCSS);","map":{"version":3,"mappings":";;;;;AAMA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,YAA1B,EAAwCC,UAAxC,QAA0D,OAA1D;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,UAA/C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAaA,OAAO,MAAMC,OAAO,GAAGJ,MAAM,CAC3BD,UAAU,CACR,OAEEM,GAFF,KAGK;EAAA,IAFH;IAAEC,QAAF;IAAYC,aAAZ;IAA2BC,WAA3B;IAAwCC;EAAxC,CAEG;EACH,MAAM;IAAEC;EAAF,IAAQR,cAAc,CAAC,SAAD,CAA5B;EAEA,MAAMS,cAAc,GAAGd,QAAQ,CAACe,GAATf,CACrBS,QADqBT,EAErB,CAACgB,KAAD,EAAqBC,KAArB,KAAuC;IACrC,OAAOhB,YAAY,CAACe,KAAD,EAAQ;MACzBC,KADyB;MAEzBC,QAAQ,EAAE,MAAMP,WAAW,IAAIA,WAAW,CAACM,KAAD,CAFjB;MAGzBE,QAAQ,EAAEF,KAAK,KAAKP;IAHK,CAAR,CAAnB;EAKD,CARoBV,CAAvB;EAWA,MAAMoB,QAAQ,GAAGhB,cAAc,CAAC;IAAEiB,IAAI,EAAE,YAAR;IAAsBb;EAAtB,CAAD,CAA/B;EAEA,OACET;IACE,cAAYc,CAAC,CAAC,MAAD,CADf;IAEED,SAAS,EAAEA,SAFb;IAGEU,IAAI,EAAC;EAHP,GAIMF,QAJN,GAMGN,cANH,CADF;AAUD,CA9BO,CADiB,CAANX,CAiCrBoB,KAjCqBpB,CAiCf;EAAA,IAAC;IAAEqB,QAAQ,EAARA,SAAQ,GAAG;EAAb,CAAD;EAAA,OAA6B;IACnCA,QAAQ,EAARA;EADmC,CAA7B;AAAA,CAjCerB,EAmCpBsB,UAnCoBtB,CAmCpB;EAAAuB;EAAAC;AAAA,CAnCoBxB,EAmCpByB,aAAC;AACJ,IAAE,CAAa;AACf,CAFG,CAnCoBzB,EAoCnBG,UApCmBH,CAAhB","names":["React","Children","cloneElement","forwardRef","styled","useArrowKeyNav","useTranslation","tabListCSS","TabList","ref","children","selectedIndex","onSelectTab","className","t","clonedChildren","map","child","index","onSelect","selected","navProps","axis","role","attrs","fontSize","withConfig","displayName","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Tabs/TabList.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { Children, cloneElement, forwardRef } from 'react'\nimport type { FontSizeProps, PaddingProps } from '@looker/design-tokens'\nimport styled from 'styled-components'\nimport { useArrowKeyNav, useTranslation } from '../utils'\nimport { tabListCSS } from '../Tabs2/TabList2'\n\nexport interface TabListProps extends PaddingProps, FontSizeProps {\n  children: JSX.Element[]\n  selectedIndex?: number\n  onSelectTab?: (index: number) => void\n  className?: string\n  distribute?: boolean\n}\n\n/**\n * @deprecated Use `Tabs2` & `Tab2` instead\n */\nexport const TabList = styled(\n  forwardRef(\n    (\n      { children, selectedIndex, onSelectTab, className }: TabListProps,\n      ref: Ref<HTMLDivElement>\n    ) => {\n      const { t } = useTranslation('TabList')\n\n      const clonedChildren = Children.map(\n        children,\n        (child: JSX.Element, index: number) => {\n          return cloneElement(child, {\n            index,\n            onSelect: () => onSelectTab && onSelectTab(index),\n            selected: index === selectedIndex,\n          })\n        }\n      )\n\n      const navProps = useArrowKeyNav({ axis: 'horizontal', ref })\n\n      return (\n        <div\n          aria-label={t('Tabs')}\n          className={className}\n          role=\"tablist\"\n          {...navProps}\n        >\n          {clonedChildren}\n        </div>\n      )\n    }\n  )\n).attrs(({ fontSize = 'small' }) => ({\n  fontSize,\n}))`\n  ${tabListCSS}\n`\n"]},"metadata":{},"sourceType":"module"}