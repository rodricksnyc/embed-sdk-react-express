{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport styled from 'styled-components';\nimport { textTransform } from '@looker/design-tokens';\nimport { TextBase } from '../Text/TextBase';\nimport { truncateCSS } from '../truncate';\n\nconst headingLevelFontSize = as => {\n  switch (as) {\n    case 'h1':\n      return 'xxlarge';\n\n    case 'h3':\n      return 'large';\n\n    case 'h4':\n      return 'medium';\n\n    case 'h5':\n      return 'small';\n\n    case 'h6':\n      return 'xsmall';\n\n    case 'h2':\n    default:\n      return 'xlarge';\n  }\n};\n\nconst headingLineHeight = (as, fontSize) => fontSize || headingLevelFontSize(as);\n\nexport const Heading = styled(TextBase).attrs(_ref => {\n  let {\n    as: _as = 'h2',\n    color: _color = 'title',\n    fontFamily: _fontFamily = 'brand',\n    fontSize,\n    fontWeight: _fontWeight = 'normal',\n    lineHeight\n  } = _ref;\n  return {\n    as: _as,\n    color: _color,\n    fontFamily: _fontFamily,\n    fontSize: fontSize || headingLevelFontSize(_as),\n    fontWeight: _fontWeight,\n    lineHeight: lineHeight || headingLineHeight(_as, fontSize)\n  };\n}).withConfig({\n  displayName: \"Heading\",\n  componentId: \"sc-m5s1gl-0\"\n})(_t || (_t = _`\n  ${0}\n  ${0}\n`), textTransform, truncateCSS);","map":{"version":3,"mappings":";;;AAKA,OAAOA,MAAP,MAAmB,mBAAnB;AAOA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,WAAT,QAA4B,aAA5B;;AAeA,MAAMC,oBAAoB,GAAIC,EAAiB,IAAK;EAClD,QAAQA,EAAR;IACE,KAAK,IAAL;MACE,OAAO,SAAP;;IACF,KAAK,IAAL;MACE,OAAO,OAAP;;IACF,KAAK,IAAL;MACE,OAAO,QAAP;;IACF,KAAK,IAAL;MACE,OAAO,OAAP;;IACF,KAAK,IAAL;MACE,OAAO,QAAP;;IACF,KAAK,IAAL;IACA;MACE,OAAO,QAAP;EAbJ;AAeD,CAhBD;;AAkBA,MAAMC,iBAAiB,GAAG,CACxBD,EADwB,EAExBE,QAFwB,KAGOA,QAAQ,IAAIH,oBAAoB,CAACC,EAAD,CAHjE;;AAKA,OAAO,MAAMG,OAAO,GAAGR,MAAM,CAACE,QAAD,CAANF,CAAiBS,KAAjBT,CACrB;EAAA,IAAC;IACCK,EAAE,EAAFA,GAAE,GAAG,IADN;IAECK,KAAK,EAALA,MAAK,GAAG,OAFT;IAGCC,UAAU,EAAVA,WAAU,GAAG,OAHd;IAICJ,QAJD;IAKCK,UAAU,EAAVA,WAAU,GAAG,QALd;IAMCC;EAND,CAAD;EAAA,OAOO;IACLR,EAAE,EAAFA,GADK;IAELK,KAAK,EAALA,MAFK;IAGLC,UAAU,EAAVA,WAHK;IAILJ,QAAQ,EAAEA,QAAQ,IAAIH,oBAAoB,CAACC,GAAD,CAJrC;IAKLO,UAAU,EAAVA,WALK;IAMLC,UAAU,EAAEA,UAAU,IAAIP,iBAAiB,CAACD,GAAD,EAAKE,QAAL;EANtC,CAPP;AAAA,CADqBP,EAgBtBc,UAhBsBd,CAgBtB;EAAAe;EAAAC;AAAA,CAhBsBhB,EAgBtBiB,aAAe;AAChB,IAAE,CAAgB;AAClB,IAAE,CAAc;AAChB,CAHC,CAhBsBjB,EAiBnBC,aAjBmBD,EAkBnBG,WAlBmBH,CAAhB","names":["styled","textTransform","TextBase","truncateCSS","headingLevelFontSize","as","headingLineHeight","fontSize","Heading","attrs","color","fontFamily","fontWeight","lineHeight","withConfig","displayName","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Text/Heading/Heading.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport styled from 'styled-components'\nimport type {\n  CompatibleHTMLProps,\n  FontSizes,\n  ResponsiveValue,\n  TextTransformProps,\n} from '@looker/design-tokens'\nimport { textTransform } from '@looker/design-tokens'\nimport type { TextBaseProps } from '../Text/TextBase'\nimport { TextBase } from '../Text/TextBase'\nimport type { TruncateCSSProps } from '../truncate'\nimport { truncateCSS } from '../truncate'\n\ntype HeadingLevels = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n\nexport interface HeadingProps\n  extends TextBaseProps,\n    TextTransformProps,\n    TruncateCSSProps,\n    Omit<CompatibleHTMLProps<HTMLHeadingElement>, 'wrap'> {\n  /** Heading level from h1-h6\n   * @default: 'h2'\n   */\n  as?: HeadingLevels\n}\n\nconst headingLevelFontSize = (as: HeadingLevels) => {\n  switch (as) {\n    case 'h1':\n      return 'xxlarge'\n    case 'h3':\n      return 'large'\n    case 'h4':\n      return 'medium'\n    case 'h5':\n      return 'small'\n    case 'h6':\n      return 'xsmall'\n    case 'h2':\n    default:\n      return 'xlarge'\n  }\n}\n\nconst headingLineHeight = (\n  as: HeadingLevels,\n  fontSize?: ResponsiveValue<FontSizes>\n): ResponsiveValue<FontSizes> => fontSize || headingLevelFontSize(as)\n\nexport const Heading = styled(TextBase).attrs<HeadingProps>(\n  ({\n    as = 'h2',\n    color = 'title',\n    fontFamily = 'brand',\n    fontSize,\n    fontWeight = 'normal',\n    lineHeight,\n  }) => ({\n    as,\n    color,\n    fontFamily,\n    fontSize: fontSize || headingLevelFontSize(as),\n    fontWeight,\n    lineHeight: lineHeight || headingLineHeight(as, fontSize),\n  })\n)<HeadingProps>`\n  ${textTransform}\n  ${truncateCSS}\n`\n"]},"metadata":{},"sourceType":"module"}