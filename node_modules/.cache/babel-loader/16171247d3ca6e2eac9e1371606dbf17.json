{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nlet _ = t => t,\n    _t;\n\nconst _excluded = [\"collapse\", \"children\"];\nimport React, { forwardRef } from 'react';\nimport { shouldForwardProp } from '@looker/design-tokens';\nimport styled from 'styled-components';\nimport { OverflowShadow, useOverflow } from '../../../utils';\nimport { commonLayoutCSS } from '../../utils/common';\nimport { asideWidth } from './asideWidth';\nconst AsideLayout = forwardRef((_ref, forwardedRef) => {\n  let {\n    collapse,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const [hasOverflow, ref] = useOverflow(forwardedRef);\n  return collapse ? null : React.createElement(OverflowShadow, _extends({\n    as: \"aside\",\n    hasOverflow: hasOverflow,\n    ref: ref\n  }, props), children);\n});\nAsideLayout.displayName = 'AsideLayout';\nexport const Aside = styled(AsideLayout).withConfig({\n  shouldForwardProp: prop => prop === 'collapse' || shouldForwardProp(prop),\n  displayName: \"Aside\",\n  componentId: \"sc-1t83syr-0\"\n}).attrs(_ref2 => {\n  let {\n    width: _width = 'sidebar'\n  } = _ref2;\n  return {\n    width: _width\n  };\n})(_t || (_t = _`\n${0}\n\nflex: 0 0 ${0};\nmax-width: ${0};\nmin-width: ${0};\noverflow: auto;\nwidth: 0;\n${0}\n\n${0}`), commonLayoutCSS, _ref3 => {\n  let {\n    width\n  } = _ref3;\n  return width;\n}, _ref4 => {\n  let {\n    width\n  } = _ref4;\n  return width;\n}, _ref5 => {\n  let {\n    width\n  } = _ref5;\n  return width;\n}, _ref6 => {\n  let {\n    scrollWithin\n  } = _ref6;\n  return scrollWithin && 'height: fit-content;';\n}, asideWidth);","map":{"version":3,"mappings":";;;;;;;AAMA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAKA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,gBAA5C;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,SAASC,UAAT,QAA2B,cAA3B;AAuBA,MAAMC,WAAW,GAAGP,UAAU,CAC5B,OAEEQ,YAFF,KAGK;EAAA,IAFH;IAAEC,QAAF;IAAYC;EAAZ,IAA4CC,IAEzC;EAAA,IAFsBC,KAAK,4CAE3B;;EACH,MAAM,CAACC,WAAD,EAAcC,GAAd,IAAqBV,WAAW,CAACI,YAAD,CAAtC;EAEA,OAAOC,QAAQ,GAAG,IAAH,GACbV,oBAACI,cAAD,EAAeY;IAACC,EAAE,EAAC,OAAJ;IAAYH,WAAW,EAAEA,WAAzB;IAAsCC,GAAG,EAAEA;EAA3C,GAAoDF,KAApD,CAAf,EACGF,QADH,CADF;AAKD,CAZ2B,CAA9B;AAeAH,WAAW,CAACU,WAAZV,GAA0B,aAA1BA;AAEA,OAAO,MAAMW,KAAK,GAAGhB,MAAM,CAACK,WAAD,CAANL,CAClBiB,UADkBjB,CACK;EACtBD,iBAAiB,EAAEmB,IAAI,IAAIA,IAAI,KAAK,UAATA,IAAuBnB,iBAAiB,CAACmB,IAAD,CAD7C;EACmDH,oBADnD;EACmDI;AADnD,CADLnB,EAIlBoB,KAJkBpB,CAIA;EAAA,IAAC;IAAEqB,KAAK,EAALA,MAAK,GAAG;EAAV,CAAD;EAAA,OAA4B;IAC7CA,KAAK,EAALA;EAD6C,CAA5B;AAAA,CAJArB,EAMhBsB,aAAa;AAClB,GAAkB;AAClB;AACA,YAAU,CAAuB;AACjC,aAAW,CAAuB;AAClC,aAAW,CAAuB;AAClC;AACA;AACA,GAA+D;AAC/D;AACA,GAAa,EAVR,CANgBtB,EAOnBG,eAPmBH,EAST;EAAA,IAAC;IAAEqB;EAAF,CAAD;EAAA,OAAeA,KAAf;AAAA,CATSrB,EAUR;EAAA,IAAC;IAAEqB;EAAF,CAAD;EAAA,OAAeA,KAAf;AAAA,CAVQrB,EAWR;EAAA,IAAC;IAAEqB;EAAF,CAAD;EAAA,OAAeA,KAAf;AAAA,CAXQrB,EAcnB;EAAA,IAAC;IAAEuB;EAAF,CAAD;EAAA,OAAsBA,YAAY,IAAI,sBAAtC;AAAA,CAdmBvB,EAgBnBI,UAhBmBJ,CAAd","names":["React","forwardRef","shouldForwardProp","styled","OverflowShadow","useOverflow","commonLayoutCSS","asideWidth","AsideLayout","forwardedRef","collapse","children","_ref","props","hasOverflow","ref","_extends","as","displayName","Aside","withConfig","prop","componentId","attrs","width","_t","scrollWithin"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Layout/Semantics/Aside/Aside.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport type {\n  CompatibleHTMLProps,\n  ResponsiveValue,\n} from '@looker/design-tokens'\nimport { shouldForwardProp } from '@looker/design-tokens'\nimport styled from 'styled-components'\nimport { OverflowShadow, useOverflow } from '../../../utils'\nimport type { CommonLayoutProps } from '../../utils/common'\nimport { commonLayoutCSS } from '../../utils/common'\nimport type { AsideSizeRamp } from './asideWidth'\nimport { asideWidth } from './asideWidth'\n\nexport type AsideProps = CommonLayoutProps &\n  CompatibleHTMLProps<HTMLElement> & {\n    /**\n     * Prevent `Aside` from being rendered.\n     * @default false\n     */\n    collapse?: boolean\n    /**\n     * To be used within the context of `<Page fixed>` container.\n     * When true, this removes the inner overflow-y scrolling\n     * and allows content within a Layout group to scroll together.\n     * @default false\n     */\n    scrollWithin?: boolean\n    /**\n     * Specify width of aside\n     * @default sidebar\n     */\n    width?: ResponsiveValue<AsideSizeRamp | string>\n  }\n\nconst AsideLayout = forwardRef(\n  (\n    { collapse, children, ...props }: AsideProps,\n    forwardedRef: Ref<HTMLDivElement>\n  ) => {\n    const [hasOverflow, ref] = useOverflow(forwardedRef)\n\n    return collapse ? null : (\n      <OverflowShadow as=\"aside\" hasOverflow={hasOverflow} ref={ref} {...props}>\n        {children}\n      </OverflowShadow>\n    )\n  }\n)\n\nAsideLayout.displayName = 'AsideLayout'\n\nexport const Aside = styled(AsideLayout)\n  .withConfig<AsideProps>({\n    shouldForwardProp: prop => prop === 'collapse' || shouldForwardProp(prop),\n  })\n  .attrs<AsideProps>(({ width = 'sidebar' }) => ({\n    width,\n  }))<AsideProps>`\n${commonLayoutCSS}\n\nflex: 0 0 ${({ width }) => width};\nmax-width: ${({ width }) => width};\nmin-width: ${({ width }) => width};\noverflow: auto;\nwidth: 0;\n${({ scrollWithin }) => scrollWithin && 'height: fit-content;'}\n\n${asideWidth}`\n"]},"metadata":{},"sourceType":"module"}