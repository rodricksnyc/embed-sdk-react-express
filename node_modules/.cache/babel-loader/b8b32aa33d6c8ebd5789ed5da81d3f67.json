{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport { css } from 'styled-components';\nexport const edgeShadow = function () {\n  let placement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'left';\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  let pseudo = ':after';\n  let relativeTo = 'right';\n  let shadowReverse = '';\n\n  if (placement === 'right') {\n    pseudo = ':before';\n    relativeTo = 'left';\n    shadowReverse = '-';\n  }\n\n  const shadow = `${`${shadowReverse}${depth}px`} 0 ${depth}px -${depth}px rgba( 0, 0, 0, 0.25) inset`;\n  const position = depth + 7;\n  return css(_t || (_t = _`\n    &${0} {\n      box-shadow: ${0};\n      content: ' ';\n      height: 100%;\n      position: absolute;\n      ${0}\n      top: 0;\n      width: ${0}px;\n    }\n  `), pseudo, shadow, `${relativeTo}: -${position}px;`, position);\n};","map":{"version":3,"mappings":";;;AAKA,SAASA,GAAT,QAAoB,mBAApB;AAOA,OAAO,MAAMC,UAAU,GAAG,YAAqD;EAAA,IAApDC,SAAoD,uEAAtB,MAAsB;EAAA,IAAdC,KAAc,uEAAN,CAAM;EAC7E,IAAIC,MAAM,GAAG,QAAb;EACA,IAAIC,UAAU,GAAG,OAAjB;EACA,IAAIC,aAAa,GAAG,EAApB;;EAEA,IAAIJ,SAAS,KAAK,OAAlB,EAA2B;IACzBE,MAAM,GAAG,SAATA;IACAC,UAAU,GAAG,MAAbA;IACAC,aAAa,GAAG,GAAhBA;EACF;;EAEA,MAAMC,MAAM,GAAI,GAAG,GAAED,aAAc,GAAEH,KAAM,IAAI,MAAKA,KAAM,OAAMA,KAAM,+BAAtE;EAMA,MAAMK,QAAQ,GAAGL,KAAK,GAAG,CAAzB;EAEA,OAAOH,GAAG,cAAC;AACb,OAAK,CAAS;AACd,oBAAkB,CAAS;AAC3B;AACA;AACA;AACA,QAAM,CAAmC;AACzC;AACA,eAAa,CAAW;AACxB;AACA,GAVY,GACLI,MADK,EAEQG,MAFR,EAMH,GAAEF,UAAW,MAAKG,QAAS,KANxB,EAQGA,QARH,CAAV;AAWD,CA9BM","names":["css","edgeShadow","placement","depth","pseudo","relativeTo","shadowReverse","shadow","position"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/DataTable/utils/edgeShadow.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { css } from 'styled-components'\n\n/**\n * This utility function produces a shadow on the outside edge of the DOM element to which it is assigned\n * @param placement which side to place the shadow on\n * @param depth size of the shadow in pixels\n */\nexport const edgeShadow = (placement: 'left' | 'right' = 'left', depth = 4) => {\n  let pseudo = ':after'\n  let relativeTo = 'right'\n  let shadowReverse = ''\n\n  if (placement === 'right') {\n    pseudo = ':before'\n    relativeTo = 'left'\n    shadowReverse = '-'\n  }\n\n  const shadow = `${`${shadowReverse}${depth}px`} 0 ${depth}px -${depth}px rgba( 0, 0, 0, 0.25) inset`\n\n  /**\n   * NOTE: In Safari for reasons we can't entirely explain the `::after`` pseudo element\n   * is obscured by a black area unless it's moved at least 11px\n   **/\n  const position = depth + 7\n\n  return css`\n    &${pseudo} {\n      box-shadow: ${shadow};\n      content: ' ';\n      height: 100%;\n      position: absolute;\n      ${`${relativeTo}: -${position}px;`}\n      top: 0;\n      width: ${position}px;\n    }\n  `\n}\n"]},"metadata":{},"sourceType":"module"}