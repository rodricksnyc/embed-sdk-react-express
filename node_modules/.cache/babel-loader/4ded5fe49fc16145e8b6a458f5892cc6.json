{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"ripple\", \"truncate\"];\n\nlet _ = t => t,\n    _t,\n    _t2;\n\nimport React, { useContext } from 'react';\nimport styled, { useTheme } from 'styled-components';\nimport { generateIndentCalculation } from '../../Tree/utils/generateIndent';\nimport { TreeContext } from '../../Tree/TreeContext';\nimport { ListItemDetail, listItemDimensions } from '../../ListItem';\nimport { TreeItem } from '../../Tree';\nimport { accordionDimensions } from '../../Accordion2/accordionDimensions';\nimport { TreeItemContent } from '../../Tree/TreeItemContent';\nimport { INDICATOR_SPACER } from '../NavTree';\nconst IndentOverrideTreeItem = styled(TreeItem).withConfig({\n  shouldForwardProp: prop => !['depth', 'density', 'gap', 'indicatorGap', 'parentIcon', 'px'].includes(prop),\n  displayName: \"NavTreeItem__IndentOverrideTreeItem\",\n  componentId: \"sc-1eonsb8-0\"\n})(_t || (_t = _`\n  ${0} {\n    ${0}\n  }\n\n  ${0} {\n    padding-right: ${0};\n  }\n`), TreeItemContent, _ref2 => {\n  let {\n    depth: _depth = 0,\n    density,\n    gap,\n    indicatorGap,\n    parentIcon,\n    theme\n  } = _ref2;\n  return `padding-left: calc(${generateIndentCalculation(parentIcon ? _depth + 1 : _depth, density || theme.defaults.density, theme)} + ${theme.space[gap]} - ${theme.space[indicatorGap]} + ${INDICATOR_SPACER});`;\n}, ListItemDetail, _ref3 => {\n  let {\n    px,\n    theme\n  } = _ref3;\n  return theme.space[px];\n});\nexport const NavTreeItem = styled(_ref => {\n  let {\n    ripple = true,\n    truncate = true\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const theme = useTheme();\n  const {\n    depth\n  } = useContext(TreeContext);\n  const {\n    gap,\n    px\n  } = listItemDimensions(theme.defaults.density);\n  const {\n    indicatorGap\n  } = accordionDimensions();\n  return React.createElement(IndentOverrideTreeItem, _extends({\n    depth: depth,\n    color: \"key\",\n    gap: gap,\n    indicatorGap: indicatorGap,\n    itemRole: props.href ? 'link' : props.itemRole,\n    px: px,\n    ripple: ripple,\n    truncate: truncate\n  }, props));\n}).withConfig({\n  displayName: \"NavTreeItem\",\n  componentId: \"sc-1eonsb8-1\"\n})(_t2 || (_t2 = _``));","map":{"version":3,"mappings":";;;;;;;;AAKA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,mBAAjC;AAGA,SAASC,yBAAT,QAA0C,iCAA1C;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,gBAAnD;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAEA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,MAAMC,sBAAsB,GAAGV,MAAM,CAACM,QAAD,CAANN,CAAiBW,UAAjBX,CAO7B;EACAY,iBAAiB,EAAEC,IAAI,IACrB,CAAC,CAAC,OAAD,EAAU,SAAV,EAAqB,KAArB,EAA4B,cAA5B,EAA4C,YAA5C,EAA0D,IAA1D,EAAgEC,QAAhE,CACCD,IADD,CAFH;EAIGE,kDAJH;EAIGC;AAJH,CAP6BhB,EAY7BiB,aAAC;AACH,IAAE,CAAkB;AACpB,MAAI,CAO6B;AACjC;AACA;AACA,IAAE,CAAiB;AACnB,qBAAmB,CAAqC;AACxD;AACA,CAfE,CAZ6BjB,EAa3BQ,eAb2BR,EAczB;EAAA,IAAC;IAAEkB,KAAK,EAALA,MAAK,GAAG,CAAV;IAAaC,OAAb;IAAsBC,GAAtB;IAA2BC,YAA3B;IAAyCC,UAAzC;IAAqDC;EAArD,CAAD;EAAA,OACC,sBAAqBrB,yBAAyB,CAC7CoB,UAAU,GAAGJ,MAAK,GAAG,CAAX,GAAeA,MADoB,EAE7CC,OAAO,IAAII,KAAK,CAACC,QAAND,CAAeJ,OAFmB,EAG7CI,KAH6C,CAI7C,MAAKA,KAAK,CAACE,KAANF,CAAYH,GAAZG,CAAiB,MACtBA,KAAK,CAACE,KAANF,CAAYF,YAAZE,CACD,MAAKd,gBAAiB,IAPvB;AAAA,CAdyBT,EAwB3BI,cAxB2BJ,EAyBV;EAAA,IAAC;IAAE0B,EAAF;IAAMH;EAAN,CAAD;EAAA,OAAmBA,KAAK,CAACE,KAANF,CAAYG,EAAZH,CAAnB;AAAA,CAzBUvB,CAA/B;AA6BA,OAAO,MAAM2B,WAAW,GAAG3B,MAAM,CAC/B4B,QAAoE;EAAA,IAAnE;IAAEC,MAAM,GAAG,IAAX;IAAiBC,QAAQ,GAAG;EAA5B,IAA8DF,IAAK;EAAA,IAA9BG,KAAK,4CAAyB;;EAClE,MAAMR,KAAK,GAAGtB,QAAQ,EAAtB;EACA,MAAM;IAAEiB;EAAF,IAAYnB,UAAU,CAACI,WAAD,CAA5B;EACA,MAAM;IAAEiB,GAAF;IAAOM;EAAP,IAAcrB,kBAAkB,CAACkB,KAAK,CAACC,QAAND,CAAeJ,OAAhB,CAAtC;EACA,MAAM;IAAEE;EAAF,IAAmBd,mBAAmB,EAA5C;EAEA,OACET,oBAACY,sBAAD,EAAuBsB;IACrBd,KAAK,EAAEA,KADc;IAErBe,KAAK,EAAC,KAFe;IAGrBb,GAAG,EAAEA,GAHgB;IAIrBC,YAAY,EAAEA,YAJO;IAKrBa,QAAQ,EAAEH,KAAK,CAACI,IAANJ,GAAa,MAAbA,GAAsBA,KAAK,CAACG,QALjB;IAMrBR,EAAE,EAAEA,EANiB;IAOrBG,MAAM,EAAEA,MAPa;IAQrBC,QAAQ,EAAEA;EARW,GASjBC,KATiB,CAAvB,CADF;AAaD,CApB8B,CAAN/B,CAqB1BW,UArB0BX,CAqB1B;EAAAe;EAAAC;AAAA,CArB0BhB,EAqB1BoC,eAAC,EAAD,CArB0BpC,CAApB","names":["React","useContext","styled","useTheme","generateIndentCalculation","TreeContext","ListItemDetail","listItemDimensions","TreeItem","accordionDimensions","TreeItemContent","INDICATOR_SPACER","IndentOverrideTreeItem","withConfig","shouldForwardProp","prop","includes","displayName","componentId","_t","depth","density","gap","indicatorGap","parentIcon","theme","defaults","space","px","NavTreeItem","_ref","ripple","truncate","props","_extends","color","itemRole","href","_t2"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/NavTree/NavTreeItem/NavTreeItem.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useContext } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport type { SpacingSizes } from '@looker/design-tokens'\nimport type { GenerateIndentProps } from '../../Tree/utils/generateIndent'\nimport { generateIndentCalculation } from '../../Tree/utils/generateIndent'\nimport { TreeContext } from '../../Tree/TreeContext'\nimport { ListItemDetail, listItemDimensions } from '../../ListItem'\nimport { TreeItem } from '../../Tree'\nimport { accordionDimensions } from '../../Accordion2/accordionDimensions'\nimport { TreeItemContent } from '../../Tree/TreeItemContent'\nimport type { NavTreeItemProps } from '../types'\nimport { INDICATOR_SPACER } from '../NavTree'\n\nconst IndentOverrideTreeItem = styled(TreeItem).withConfig<\n  {\n    gap: SpacingSizes\n    indicatorGap: SpacingSizes\n    px: SpacingSizes\n  } & GenerateIndentProps &\n    NavTreeItemProps\n>({\n  shouldForwardProp: prop =>\n    !['depth', 'density', 'gap', 'indicatorGap', 'parentIcon', 'px'].includes(\n      prop\n    ),\n})`\n  ${TreeItemContent} {\n    ${({ depth = 0, density, gap, indicatorGap, parentIcon, theme }) =>\n      `padding-left: calc(${generateIndentCalculation(\n        parentIcon ? depth + 1 : depth,\n        density || theme.defaults.density,\n        theme\n      )} + ${theme.space[gap]} - ${\n        theme.space[indicatorGap]\n      } + ${INDICATOR_SPACER});`}\n  }\n\n  ${ListItemDetail} {\n    padding-right: ${({ px, theme }) => theme.space[px]};\n  }\n`\n\nexport const NavTreeItem = styled(\n  ({ ripple = true, truncate = true, ...props }: NavTreeItemProps) => {\n    const theme = useTheme()\n    const { depth } = useContext(TreeContext)\n    const { gap, px } = listItemDimensions(theme.defaults.density)\n    const { indicatorGap } = accordionDimensions()\n\n    return (\n      <IndentOverrideTreeItem\n        depth={depth}\n        color=\"key\"\n        gap={gap}\n        indicatorGap={indicatorGap}\n        itemRole={props.href ? 'link' : props.itemRole}\n        px={px}\n        ripple={ripple}\n        truncate={truncate}\n        {...props}\n      />\n    )\n  }\n)``\n"]},"metadata":{},"sourceType":"module"}