{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport { variant } from '@looker/design-tokens';\nimport { css } from 'styled-components';\nexport const sizeInfersTruncate = size => size && typeof size !== 'number' && !['auto', 'nowrap'].includes(size);\nconst columnSizeVariants = variant({\n  prop: 'size',\n  variants: {\n    small: {\n      maxWidth: '3rem',\n      minWidth: '3rem'\n    },\n    medium: {\n      maxWidth: '12rem',\n      minWidth: '12rem'\n    },\n    large: {\n      maxWidth: '20rem',\n      minWidth: '20rem'\n    },\n    nowrap: {\n      whiteSpace: 'nowrap'\n    }\n  }\n});\n\nconst percentWidth = width => `width: ${width}%;`;\n\nexport const columnSize = css(_t || (_t = _`\n  ${0}\n`), _ref => {\n  let {\n    size\n  } = _ref;\n  return size && typeof size === 'number' ? percentWidth(size) : columnSizeVariants;\n});","map":{"version":3,"mappings":";;;AAMA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,GAAT,QAAoB,mBAApB;AAUA,OAAO,MAAMC,kBAAkB,GAAIC,IAAyB,IAC1DA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxBA,IAAoC,CAAC,CAAC,MAAD,EAAS,QAAT,EAAmBC,QAAnB,CAA4BD,IAA5B,CADhC;AAIP,MAAME,kBAAkB,GAAGL,OAAO,CAAC;EACjCM,IAAI,EAAE,MAD2B;EAEjCC,QAAQ,EAAE;IACRC,KAAK,EAAE;MACLC,QAAQ,EAAE,MADL;MAELC,QAAQ,EAAE;IAFL,CADC;IAKRC,MAAM,EAAE;MACNF,QAAQ,EAAE,OADJ;MAENC,QAAQ,EAAE;IAFJ,CALA;IASRE,KAAK,EAAE;MACLH,QAAQ,EAAE,OADL;MAELC,QAAQ,EAAE;IAFL,CATC;IAaRG,MAAM,EAAE;MACNC,UAAU,EAAE;IADN;EAbA;AAFuB,CAAD,CAAlC;;AAqBA,MAAMC,YAAY,GAAIC,KAAa,IAAM,UAASA,KAAM,IAAxD;;AAEA,OAAO,MAAMC,UAAU,GAAGhB,GAAG,cAAiC;AAC9D,IAAE,CAC6E;AAC/E,CAH6B,GACzB;EAAA,IAAC;IAAEE;EAAF,CAAD;EAAA,OACAA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxBA,GAAmCY,YAAY,CAACZ,IAAD,CAA/CA,GAAwDE,kBADxD;AAAA,CADyB,CAAtB","names":["variant","css","sizeInfersTruncate","size","includes","columnSizeVariants","prop","variants","small","maxWidth","minWidth","medium","large","nowrap","whiteSpace","percentWidth","width","columnSize"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/DataTable/Column/columnSize.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { SizeSmall, SizeMedium, SizeLarge } from '@looker/design-tokens'\nimport { variant } from '@looker/design-tokens'\nimport { css } from 'styled-components'\n\nexport type DataTableColumnSize =\n  | SizeSmall\n  | SizeMedium\n  | SizeLarge\n  | 'auto'\n  | 'nowrap'\n  | number\n\nexport const sizeInfersTruncate = (size: DataTableColumnSize) =>\n  size && typeof size !== 'number' && !['auto', 'nowrap'].includes(size)\n\n/* eslint-disable sort-keys-fix/sort-keys-fix */\nconst columnSizeVariants = variant({\n  prop: 'size',\n  variants: {\n    small: {\n      maxWidth: '3rem',\n      minWidth: '3rem',\n    },\n    medium: {\n      maxWidth: '12rem',\n      minWidth: '12rem',\n    },\n    large: {\n      maxWidth: '20rem',\n      minWidth: '20rem',\n    },\n    nowrap: {\n      whiteSpace: 'nowrap',\n    },\n  },\n})\n\nconst percentWidth = (width: number) => `width: ${width}%;`\n\nexport const columnSize = css<{ size?: DataTableColumnSize }>`\n  ${({ size }) =>\n    size && typeof size === 'number' ? percentWidth(size) : columnSizeVariants}\n`\n"]},"metadata":{},"sourceType":"module"}