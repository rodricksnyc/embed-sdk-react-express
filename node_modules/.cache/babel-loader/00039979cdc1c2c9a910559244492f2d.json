{"ast":null,"code":"import React, { createContext, useContext, useEffect, useLayoutEffect as reactUseLayoutEffect } from 'react';\nexport const SafeSSRContext = createContext(false);\nexport const SafeSSRProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  return React.createElement(SafeSSRContext.Provider, {\n    value: true\n  }, children);\n};\nexport const useSafeLayoutEffect = function () {\n  const value = useContext(SafeSSRContext);\n  const isSSR = value || typeof window === 'undefined';\n  const useLayoutEffect = isSSR ? useEffect : reactUseLayoutEffect;\n  return useLayoutEffect(...arguments);\n};","map":{"version":3,"mappings":"AAKA,OAAOA,KAAP,IACEC,aADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,eAAe,IAAIC,oBAJrB,QAKO,OALP;AAOA,OAAO,MAAMC,cAAc,GAAGL,aAAa,CAAC,KAAD,CAApC;AAMP,OAAO,MAAMM,eAAe,GAAG,QAES;EAAA,IAFR;IAC9BC;EAD8B,CAEQ;EACtC,OAAOR,oBAACM,cAAc,CAACG,QAAhB,EAAwB;IAACC,KAAK;EAAN,CAAxB,EAAgCF,QAAhC,CAAP;AACD,CAJM;AAYP,OAAO,MAAMG,mBAAgD,GAAG,YAAa;EAC3E,MAAMD,KAAK,GAAGR,UAAU,CAACI,cAAD,CAAxB;EAEA,MAAMM,KAAK,GAAGF,KAAK,IAAI,OAAOG,MAAP,KAAkB,WAAzC;EAEA,MAAMT,eAAe,GAAGQ,KAAK,GAAGT,SAAH,GAAeE,oBAA5C;EAEA,OAAOD,eAAe,CAAC,YAAD,CAAtB;AACD,CARM","names":["React","createContext","useContext","useEffect","useLayoutEffect","reactUseLayoutEffect","SafeSSRContext","SafeSSRProvider","children","Provider","value","useSafeLayoutEffect","isSSR","window"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/utils/useSafeLayoutEffect.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useLayoutEffect as reactUseLayoutEffect,\n} from 'react'\n\nexport const SafeSSRContext = createContext(false)\n\n/**\n * Avoid the React useLayoutEffect when using renderToString\n * on the client side\n */\nexport const SafeSSRProvider = ({\n  children,\n}: React.PropsWithChildren<unknown>) => {\n  return <SafeSSRContext.Provider value>{children}</SafeSSRContext.Provider>\n}\n\n/**\n * Avoids the React useLayoutEffect error by falling back to useEffect.\n * Note: A component that calls useLayoutEffect will most likely\n * not behave correctly in SSR. Instead, consider delaying rendering\n * until client-side JS loads, via useEffect.\n */\nexport const useSafeLayoutEffect: typeof reactUseLayoutEffect = (...args) => {\n  const value = useContext(SafeSSRContext)\n  // SSR is detected via undefined window, or set with SafeSSRProvider\n  const isSSR = value || typeof window === 'undefined'\n\n  const useLayoutEffect = isSSR ? useEffect : reactUseLayoutEffect\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useLayoutEffect(...args)\n}\n"]},"metadata":{},"sourceType":"module"}