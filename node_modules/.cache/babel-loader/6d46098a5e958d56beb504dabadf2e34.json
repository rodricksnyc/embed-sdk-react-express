{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"filter\", \"onDelete\"];\nimport React, { forwardRef } from 'react';\nimport { Chip } from '../../../Chip';\n\nconst defaultFormatValue = value => value ? value.replace(/(,(?=\\S)|:)/, ', ') : undefined;\n\nexport const InputFiltersChip = forwardRef((_ref, ref) => {\n  let {\n    filter,\n    onDelete\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const handleDelete = () => onDelete(filter);\n\n  return React.createElement(Chip, _extends({\n    onDelete: handleDelete,\n    prefix: filter.field,\n    ref: ref\n  }, props), filter.formatValue && filter.value ? filter.formatValue(filter.value) : defaultFormatValue(filter.value));\n});\nInputFiltersChip.displayName = 'InputFiltersChip';","map":{"version":3,"mappings":";;;AAKA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,IAAT,QAAqB,eAArB;;AAUA,MAAMC,kBAAkB,GAAIC,KAAc,IACxCA,KAAK,GAAGA,KAAK,CAACC,OAAND,CAAc,aAAdA,EAA6B,IAA7BA,CAAH,GAAwCE,SAD/C;;AAGA,OAAO,MAAMC,gBAAgB,GAAGN,UAAU,CACxC,OAEEO,GAFF,KAGK;EAAA,IAFH;IAAEC,MAAF;IAAUC;EAAV,IAAqDC,IAElD;EAAA,IAFoBC,KAAK,4CAEzB;;EACH,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACD,MAAD,CAAnC;;EACA,OACET,oBAACE,IAAD,EAAKY;IAACJ,QAAQ,EAAEG,YAAX;IAAyBE,MAAM,EAAEN,MAAM,CAACO,KAAxC;IAA+CR,GAAG,EAAEA;EAApD,GAA6DI,KAA7D,CAAL,EACGH,MAAM,CAACQ,WAAPR,IAAsBA,MAAM,CAACL,KAA7BK,GACGA,MAAM,CAACQ,WAAPR,CAAmBA,MAAM,CAACL,KAA1BK,CADHA,GAEGN,kBAAkB,CAACM,MAAM,CAACL,KAAR,CAHxB,CADF;AAOD,CAbuC,CAAnC;AAgBPG,gBAAgB,CAACW,WAAjBX,GAA+B,kBAA/BA","names":["React","forwardRef","Chip","defaultFormatValue","value","replace","undefined","InputFiltersChip","ref","filter","onDelete","_ref","props","handleDelete","_extends","prefix","field","formatValue","displayName"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Inputs/InputFilters/InputFiltersChip.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport type { ChipProps } from '../../../Chip'\nimport { Chip } from '../../../Chip'\nimport type { FieldFilter } from './types'\n\ninterface InputFiltersChipProps\n  extends Omit<ChipProps, 'children' | 'onDelete'> {\n  filter: FieldFilter\n  onDelete: (field: FieldFilter) => void\n}\n\n/* Replace comma not followed by white space with comma followed by space */\nconst defaultFormatValue = (value?: string) =>\n  value ? value.replace(/(,(?=\\S)|:)/, ', ') : undefined\n\nexport const InputFiltersChip = forwardRef(\n  (\n    { filter, onDelete, ...props }: InputFiltersChipProps,\n    ref: Ref<HTMLSpanElement>\n  ) => {\n    const handleDelete = () => onDelete(filter)\n    return (\n      <Chip onDelete={handleDelete} prefix={filter.field} ref={ref} {...props}>\n        {filter.formatValue && filter.value\n          ? filter.formatValue(filter.value)\n          : defaultFormatValue(filter.value)}\n      </Chip>\n    )\n  }\n)\n\nInputFiltersChip.displayName = 'InputFiltersChip'\n"]},"metadata":{},"sourceType":"module"}