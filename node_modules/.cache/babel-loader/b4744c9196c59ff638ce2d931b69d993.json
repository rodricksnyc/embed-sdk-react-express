{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst initialResult = {\n  afterHeight: 0,\n  beforeHeight: 0,\n  end: 0,\n  start: 0\n};\nexport function getWindowedListBoundaries(_ref) {\n  let {\n    buffer = 5,\n    height,\n    scrollPosition,\n    enabled = true,\n    itemCount,\n    itemHeight\n  } = _ref;\n  if (!enabled) return _objectSpread(_objectSpread({}, initialResult), {}, {\n    end: itemCount - 1\n  });\n  if (scrollPosition === undefined || height === undefined) return initialResult;\n  const top = Math.floor(scrollPosition / itemHeight);\n  const bottom = Math.ceil((height + scrollPosition) / itemHeight);\n  const start = top - buffer < 0 ? 0 : top - buffer;\n  const end = bottom + buffer > itemCount - 1 ? itemCount - 1 : bottom + buffer;\n  const afterLength = itemCount - 1 - end;\n  return {\n    afterHeight: afterLength * itemHeight,\n    beforeHeight: start * itemHeight,\n    end,\n    start\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,MAAMA,aAAa,GAAG;EAAEC,WAAW,EAAE,CAAf;EAAkBC,YAAY,EAAE,CAAhC;EAAmCC,GAAG,EAAE,CAAxC;EAA2CC,KAAK,EAAE;AAAlD,CAAtB;AAEA,OAAO,SAASC,yBAAT,OAO0B;EAAA,IAPS;IACxCC,MAAM,GAAG,CAD+B;IAExCC,MAFwC;IAGxCC,cAHwC;IAIxCC,OAAO,GAAG,IAJ8B;IAKxCC,SALwC;IAMxCC;EANwC,CAOT;EAC/B,IAAI,CAACF,OAAL,EAAc,uCAAYT,aAAZ,GAAyB,EAAzB,EAAyB;IAAEG,GAAG,EAAEO,SAAS,GAAG;EAAnB,CAAzB;EAEd,IAAIF,cAAc,KAAKI,SAAnBJ,IAAgCD,MAAM,KAAKK,SAA/C,EAGE,OAAOZ,aAAP;EAEF,MAAMa,GAAG,GAAGC,IAAI,CAACC,KAALD,CAAWN,cAAc,GAAGG,UAA5BG,CAAZ;EACA,MAAME,MAAM,GAAGF,IAAI,CAACG,IAALH,CAAU,CAACP,MAAM,GAAGC,cAAV,IAA4BG,UAAtCG,CAAf;EAEA,MAAMV,KAAK,GAAGS,GAAG,GAAGP,MAANO,GAAe,CAAfA,GAAmB,CAAnBA,GAAuBA,GAAG,GAAGP,MAA3C;EACA,MAAMH,GAAG,GAAGa,MAAM,GAAGV,MAATU,GAAkBN,SAAS,GAAG,CAA9BM,GAAkCN,SAAS,GAAG,CAA9CM,GAAkDA,MAAM,GAAGV,MAAvE;EACA,MAAMY,WAAW,GAAGR,SAAS,GAAG,CAAZA,GAAgBP,GAApC;EAEA,OAAO;IACLF,WAAW,EAAEiB,WAAW,GAAGP,UADtB;IAELT,YAAY,EAAEE,KAAK,GAAGO,UAFjB;IAGLR,GAHK;IAILC;EAJK,CAAP;AAMF","names":["initialResult","afterHeight","beforeHeight","end","start","getWindowedListBoundaries","buffer","height","scrollPosition","enabled","itemCount","itemHeight","undefined","top","Math","floor","bottom","ceil","afterLength"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/utils/getWindowedListBoundaries.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nexport interface GetWindowedListBoundaryProps {\n  /**\n   * If false, the start and end values will be the entire list length\n   * @default true\n   */\n  enabled?: boolean\n  /**\n   * The total number of items in the list\n   */\n  itemCount: number\n  /**\n   * The height of an individual item\n   */\n  itemHeight: number\n  /**\n   * The number of items to render above and below the visible area\n   * @default 5\n   */\n  buffer?: number\n  /**\n   * The height of the scrollable container\n   */\n  height?: number\n  /**\n   * The scroll position of the list in the container\n   */\n  scrollPosition?: number\n}\n\nconst initialResult = { afterHeight: 0, beforeHeight: 0, end: 0, start: 0 }\n\nexport function getWindowedListBoundaries({\n  buffer = 5,\n  height,\n  scrollPosition,\n  enabled = true,\n  itemCount,\n  itemHeight,\n}: GetWindowedListBoundaryProps) {\n  if (!enabled) return { ...initialResult, end: itemCount - 1 }\n\n  if (scrollPosition === undefined || height === undefined)\n    // scroll position and height probably undefined on initial render\n    // best to render no list items before we have these values\n    return initialResult\n\n  const top = Math.floor(scrollPosition / itemHeight)\n  const bottom = Math.ceil((height + scrollPosition) / itemHeight)\n\n  const start = top - buffer < 0 ? 0 : top - buffer\n  const end = bottom + buffer > itemCount - 1 ? itemCount - 1 : bottom + buffer\n  const afterLength = itemCount - 1 - end\n\n  return {\n    afterHeight: afterLength * itemHeight,\n    beforeHeight: start * itemHeight,\n    end,\n    start,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}