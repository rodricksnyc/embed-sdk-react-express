{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nlet _ = t => t,\n    _t;\n\nconst _excluded = [\"id\", \"options\", \"value\", \"name\", \"inputsInline\"];\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useID } from '../../../utils';\nimport { useFormContext } from '../../Form';\nimport { CheckboxGroup } from '../../Inputs';\nimport { Field, omitFieldProps, pickFieldProps } from '../Field';\n\nconst FieldCheckboxGroupLayout = _ref => {\n  let {\n    id: propsID,\n    options,\n    value,\n    name,\n    inputsInline\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const validationMessage = useFormContext(props);\n  const id = useID(propsID);\n  return React.createElement(Field, _extends({}, pickFieldProps(props), {\n    id: id\n  }), React.createElement(CheckboxGroup, _extends({}, omitFieldProps(props), {\n    \"aria-describedby\": `describedby-${id}`,\n    \"aria-labelledby\": `labelledby-${id}`,\n    id: id,\n    inline: props.inline || inputsInline,\n    name: name || id,\n    options: options,\n    validationType: validationMessage && validationMessage.type,\n    value: value\n  })));\n};\n\nFieldCheckboxGroupLayout.displayName = 'FieldCheckboxGroupLayout';\nexport const FieldCheckboxGroup = styled(FieldCheckboxGroupLayout).withConfig({\n  displayName: \"FieldCheckboxGroup\",\n  componentId: \"sc-w2hs65-0\"\n})(_t || (_t = _``));","map":{"version":3,"mappings":";;;;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,SAASC,aAAT,QAA8B,cAA9B;AAEA,SAASC,KAAT,EAAgBC,cAAhB,EAAgCC,cAAhC,QAAsD,UAAtD;;AAQA,MAAMC,wBAAwB,GAAGC,QAOF;EAAA,IAPG;IAChCC,EAAE,EAAEC,OAD4B;IAEhCC,OAFgC;IAGhCC,KAHgC;IAIhCC,IAJgC;IAKhCC;EALgC,IAORN,IAAK;EAAA,IAD1BO,KAAK,4CACqB;;EAC7B,MAAMC,iBAAiB,GAAGd,cAAc,CAACa,KAAD,CAAxC;EACA,MAAMN,EAAE,GAAGR,KAAK,CAACS,OAAD,CAAhB;EAEA,OACEX,oBAACK,KAAD,EAAMa,aAAKX,cAAc,CAACS,KAAD,CAAnB,EAA0B;IAAEN,EAAE,EAAEA;EAAN,CAA1B,CAAN,EACEV,oBAACI,aAAD,EAAcc,aACRZ,cAAc,CAACU,KAAD,CADN,EACa;IACzB,oBAAmB,eAAcN,EAAG,EADX;IAEzB,mBAAkB,cAAaA,EAAG,EAFT;IAGzBA,EAAE,EAAEA,EAHqB;IAIzBS,MAAM,EAAEH,KAAK,CAACG,MAANH,IAAgBD,YAJC;IAKzBD,IAAI,EAAEA,IAAI,IAAIJ,EALW;IAMzBE,OAAO,EAAEA,OANgB;IAOzBQ,cAAc,EAAEH,iBAAiB,IAAIA,iBAAiB,CAACI,IAP9B;IAQzBR,KAAK,EAAEA;EARkB,CADb,CAAd,CADF,CADF;AAeD,CA1BD;;AA4BAL,wBAAwB,CAACc,WAAzBd,GAAuC,0BAAvCA;AAEA,OAAO,MAAMe,kBAAkB,GAAGtB,MAAM,CAACO,wBAAD,CAANP,CAAgCuB,UAAhCvB,CAAgC;EAAAqB;EAAAG;AAAA,CAAhCxB,EAAgCyB,aAAC,EAAD,CAAhCzB,CAA3B","names":["React","styled","useID","useFormContext","CheckboxGroup","Field","omitFieldProps","pickFieldProps","FieldCheckboxGroupLayout","_ref","id","propsID","options","value","name","inputsInline","props","validationMessage","_extends","inline","validationType","type","displayName","FieldCheckboxGroup","withConfig","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Fields/FieldCheckboxGroup/FieldCheckboxGroup.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { useID } from '../../../utils'\nimport { useFormContext } from '../../Form'\nimport type { CheckboxGroupProps } from '../../Inputs'\nimport { CheckboxGroup } from '../../Inputs'\nimport type { FieldProps } from '../Field'\nimport { Field, omitFieldProps, pickFieldProps } from '../Field'\n\nexport interface FieldCheckboxGroupProps\n  extends CheckboxGroupProps,\n    Omit<FieldProps, 'detail'> {\n  inputsInline?: boolean\n}\n\nconst FieldCheckboxGroupLayout = ({\n  id: propsID,\n  options,\n  value,\n  name,\n  inputsInline,\n  ...props\n}: FieldCheckboxGroupProps) => {\n  const validationMessage = useFormContext(props)\n  const id = useID(propsID)\n\n  return (\n    <Field {...pickFieldProps(props)} id={id}>\n      <CheckboxGroup\n        {...omitFieldProps(props)}\n        aria-describedby={`describedby-${id}`}\n        aria-labelledby={`labelledby-${id}`}\n        id={id}\n        inline={props.inline || inputsInline}\n        name={name || id}\n        options={options}\n        validationType={validationMessage && validationMessage.type}\n        value={value}\n      />\n    </Field>\n  )\n}\n\nFieldCheckboxGroupLayout.displayName = 'FieldCheckboxGroupLayout'\n\nexport const FieldCheckboxGroup = styled(FieldCheckboxGroupLayout)``\n"]},"metadata":{},"sourceType":"module"}