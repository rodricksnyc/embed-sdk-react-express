{"ast":null,"code":"let _ = t => t,\n    _t,\n    _t2;\n\nimport { color, position, reset, space, shouldForwardProp, variant } from '@looker/design-tokens';\nimport styled from 'styled-components';\nconst appearanceVariant = variant({\n  prop: 'appearance',\n  variants: {\n    dark: {\n      bg: 'ui4'\n    },\n    default: {\n      bg: 'ui3'\n    },\n    light: {\n      bg: 'ui2'\n    },\n    onDark: {\n      bg: 'text2'\n    }\n  }\n});\nexport const DividerBase = styled.hr.withConfig({\n  shouldForwardProp,\n  displayName: \"Divider__DividerBase\",\n  componentId: \"sc-1ceogl5-0\"\n}).attrs(_ref => {\n  let {\n    appearance: _appearance = 'default',\n    customColor,\n    size: _size = '1px'\n  } = _ref;\n  return {\n    appearance: _appearance,\n    'aria-orientation': 'horizontal',\n    bg: customColor,\n    role: 'separator',\n    size: _size\n  };\n})(_t || (_t = _`\n  ${0}\n  ${0}\n\n  border: none;\n  margin: 0; /* reset <hr /> built-in margin */\n  ${0}\n\n  ${0}\n`), reset, position, space, _ref2 => {\n  let {\n    customColor\n  } = _ref2;\n  return customColor ? color : appearanceVariant;\n});\nexport const Divider = styled(DividerBase).withConfig({\n  displayName: \"Divider\",\n  componentId: \"sc-1ceogl5-1\"\n})(_t2 || (_t2 = _`\n  height: ${0};\n  width: 100%;\n`), _ref3 => {\n  let {\n    size\n  } = _ref3;\n  return size;\n});","map":{"version":3,"mappings":";;;;AAUA,SACEA,KADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,iBALF,EAMEC,OANF,QAOO,uBAPP;AAQA,OAAOC,MAAP,MAAmB,mBAAnB;AAWA,MAAMC,iBAAiB,GAAGF,OAAO,CAAC;EAChCG,IAAI,EAAE,YAD0B;EAEhCC,QAAQ,EAAE;IACRC,IAAI,EAAE;MACJC,EAAE,EAAE;IADA,CADE;IAIRC,OAAO,EAAE;MACPD,EAAE,EAAE;IADG,CAJD;IAORE,KAAK,EAAE;MACLF,EAAE,EAAE;IADC,CAPC;IAURG,MAAM,EAAE;MACNH,EAAE,EAAE;IADE;EAVA;AAFsB,CAAD,CAAjC;AAkBA,OAAO,MAAMI,WAAW,GAAGT,MAAM,CAACU,EAAPV,CACxBW,UADwBX,CACb;EAAEF,iBAAF;EAAmBc,mCAAnB;EAAmBC;AAAnB,CADab,EAExBc,KAFwBd,CAGvB;EAAA,IAAC;IAAEe,UAAU,EAAVA,WAAU,GAAG,SAAf;IAA0BC,WAA1B;IAAuCC,IAAI,EAAJA,KAAI,GAAG;EAA9C,CAAD;EAAA,OAA4D;IAC1DF,UAAU,EAAVA,WAD0D;IAE1D,oBAAoB,YAFsC;IAG1DV,EAAE,EAAEW,WAHsD;IAI1DE,IAAI,EAAE,WAJoD;IAK1DD,IAAI,EAAJA;EAL0D,CAA5D;AAAA,CAHuBjB,EAUxBmB,aAAe;AAClB,IAAE,CAAQ;AACV,IAAE,CAAW;AACb;AACA;AACA;AACA,IAAE,CAAQ;AACV;AACA,IAAE,CAAiE;AACnE,CATG,CAVwBnB,EAWvBJ,KAXuBI,EAYvBL,QAZuBK,EAgBvBH,KAhBuBG,EAkBvB;EAAA,IAAC;IAAEgB;EAAF,CAAD;EAAA,OAAsBA,WAAW,GAAGtB,KAAH,GAAWO,iBAA5C;AAAA,CAlBuBD,CAApB;AAqBP,OAAO,MAAMoB,OAAO,GAAGpB,MAAM,CAACS,WAAD,CAANT,CAAmBW,UAAnBX,CAAmB;EAAAY;EAAAC;AAAA,CAAnBb,EAAmBqB,eAAC;AAC3C,YAAU,CAAqB;AAC/B;AACA,CAH0C,CAAnBrB,EACX;EAAA,IAAC;IAAEiB;EAAF,CAAD;EAAA,OAAcA,IAAd;AAAA,CADWjB,CAAhB","names":["color","position","reset","space","shouldForwardProp","variant","styled","appearanceVariant","prop","variants","dark","bg","default","light","onDark","DividerBase","hr","withConfig","displayName","componentId","attrs","appearance","customColor","size","role","_t","Divider","_t2"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Divider/Divider.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type {\n  CompatibleHTMLProps,\n  PositionProps,\n  SpaceProps,\n} from '@looker/design-tokens'\nimport {\n  color,\n  position,\n  reset,\n  space,\n  shouldForwardProp,\n  variant,\n} from '@looker/design-tokens'\nimport styled from 'styled-components'\n\nexport interface DividerProps\n  extends CompatibleHTMLProps<HTMLHRElement>,\n    PositionProps,\n    SpaceProps {\n  appearance?: 'default' | 'light' | 'dark' | 'onDark'\n  customColor?: string\n  size?: string | number\n}\n\nconst appearanceVariant = variant({\n  prop: 'appearance',\n  variants: {\n    dark: {\n      bg: 'ui4',\n    },\n    default: {\n      bg: 'ui3',\n    },\n    light: {\n      bg: 'ui2',\n    },\n    onDark: {\n      bg: 'text2',\n    },\n  },\n})\n\nexport const DividerBase = styled.hr\n  .withConfig({ shouldForwardProp })\n  .attrs<DividerProps>(\n    ({ appearance = 'default', customColor, size = '1px' }) => ({\n      appearance,\n      'aria-orientation': 'horizontal',\n      bg: customColor,\n      role: 'separator',\n      size,\n    })\n  )<DividerProps>`\n  ${reset}\n  ${position}\n\n  border: none;\n  margin: 0; /* reset <hr /> built-in margin */\n  ${space}\n\n  ${({ customColor }) => (customColor ? color : appearanceVariant)}\n`\n\nexport const Divider = styled(DividerBase)`\n  height: ${({ size }) => size};\n  width: 100%;\n`\n"]},"metadata":{},"sourceType":"module"}