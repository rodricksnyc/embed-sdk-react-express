{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"family\", \"italic\"];\nconst googleFontsBaseUrl = 'https://fonts.googleapis.com/css2';\nexport const googleFontParam = _ref => {\n  let {\n    family,\n    italic = true\n  } = _ref,\n      font = _objectWithoutProperties(_ref, _excluded);\n\n  let uri = `${family.replace(/\"/g, '').replace(/ /g, '+')}:`;\n  let weights = font.weights.map(weight => `0,${weight}`);\n\n  if (italic) {\n    const italicizedWeights = font.weights.map(weight => `1,${weight}`);\n    weights = [...weights, ...italicizedWeights];\n    uri += 'ital,';\n  }\n\n  uri += `wght@${weights.join(';')}`;\n  return uri;\n};\nexport const googleFontUrl = theme => {\n  const url = new URL(googleFontsBaseUrl);\n  const weights = Object.values(theme.fontWeights);\n  const fonts = Object.values(theme.fonts).map(family => {\n    return {\n      family: family.split(',')[0].replace(/'/g, ''),\n      weights\n    };\n  });\n  const search = fonts.map(font => `family=${googleFontParam(font)}`);\n  search.push('display=swap');\n  url.search = search.join('&');\n  return url.toString();\n};","map":{"version":3,"mappings":";;AAgBA,MAAMA,kBAAkB,GAAG,mCAA3B;AAEA,OAAO,MAAMC,eAAe,GAAGC,QAIA;EAAA,IAJC;IAC9BC,MAD8B;IAE9BC,MAAM,GAAG;EAFqB,IAINF,IAAK;EAAA,IAD1BG,IAAI,4CACsB;;EAC7B,IAAIC,GAAG,GAAI,GAAEH,MAAM,CAACI,OAAPJ,CAAe,IAAfA,EAAqB,EAArBA,EAAyBI,OAAzBJ,CAAiC,IAAjCA,EAAuC,GAAvCA,CAA4C,GAAzD;EAEA,IAAIK,OAAO,GAAGH,IAAI,CAACG,OAALH,CAAaI,GAAbJ,CAAiBK,MAAM,IAAK,KAAIA,MAAO,EAAvCL,CAAd;;EACA,IAAID,MAAJ,EAAY;IACV,MAAMO,iBAAiB,GAAGN,IAAI,CAACG,OAALH,CAAaI,GAAbJ,CAAiBK,MAAM,IAAK,KAAIA,MAAO,EAAvCL,CAA1B;IACAG,OAAO,GAAG,CAAC,GAAGA,OAAJ,EAAa,GAAGG,iBAAhB,CAAVH;IACAF,GAAG,IAAI,OAAPA;EACF;;EAEAA,GAAG,IAAK,QAAOE,OAAO,CAACI,IAARJ,CAAa,GAAbA,CAAkB,EAAjCF;EAEA,OAAOA,GAAP;AACD,CAjBM;AAmBP,OAAO,MAAMO,aAAa,GAAIC,KAAY,IAAK;EAC7C,MAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQhB,kBAAR,CAAZ;EAEA,MAAMQ,OAAO,GAAGS,MAAM,CAACC,MAAPD,CAAcH,KAAK,CAACK,WAApBF,CAAhB;EACA,MAAMG,KAAgC,GAAGH,MAAM,CAACC,MAAPD,CAAcH,KAAK,CAACM,KAApBH,EAA2BR,GAA3BQ,CACvCd,MAAM,IAAI;IACR,OAAO;MACLA,MAAM,EAAEA,MAAM,CAACkB,KAAPlB,CAAa,GAAbA,EAAkB,CAAlBA,EAAqBI,OAArBJ,CAA6B,IAA7BA,EAAmC,EAAnCA,CADH;MAELK;IAFK,CAAP;EAID,CANsCS,CAAzC;EASA,MAAMK,MAAM,GAAGF,KAAK,CAACX,GAANW,CAAUf,IAAI,IAAK,UAASJ,eAAe,CAACI,IAAD,CAAO,EAAlDe,CAAf;EACAE,MAAM,CAACC,IAAPD,CAAY,cAAZA;EACAP,GAAG,CAACO,MAAJP,GAAaO,MAAM,CAACV,IAAPU,CAAY,GAAZA,CAAbP;EAEA,OAAOA,GAAG,CAACS,QAAJT,EAAP;AACD,CAlBM","names":["googleFontsBaseUrl","googleFontParam","_ref","family","italic","font","uri","replace","weights","map","weight","italicizedWeights","join","googleFontUrl","theme","url","URL","Object","values","fontWeights","fonts","split","search","push","toString"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/design-tokens/src/utils/typography/googleFontUrl.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Theme } from '../../theme'\ninterface GoogleFontSpecification {\n  family: string\n  /**\n   * Include italic faces\n   * @default true\n   */\n  italic?: boolean\n  weights: number[]\n}\n\nconst googleFontsBaseUrl = 'https://fonts.googleapis.com/css2'\n\nexport const googleFontParam = ({\n  family,\n  italic = true,\n  ...font\n}: GoogleFontSpecification) => {\n  let uri = `${family.replace(/\"/g, '').replace(/ /g, '+')}:`\n\n  let weights = font.weights.map(weight => `0,${weight}`)\n  if (italic) {\n    const italicizedWeights = font.weights.map(weight => `1,${weight}`)\n    weights = [...weights, ...italicizedWeights]\n    uri += 'ital,'\n  }\n\n  uri += `wght@${weights.join(';')}`\n\n  return uri\n}\n\nexport const googleFontUrl = (theme: Theme) => {\n  const url = new URL(googleFontsBaseUrl)\n\n  const weights = Object.values(theme.fontWeights)\n  const fonts: GoogleFontSpecification[] = Object.values(theme.fonts).map(\n    family => {\n      return {\n        family: family.split(',')[0].replace(/'/g, ''),\n        weights,\n      }\n    }\n  )\n\n  const search = fonts.map(font => `family=${googleFontParam(font)}`)\n  search.push('display=swap')\n  url.search = search.join('&')\n\n  return url.toString()\n}\n"]},"metadata":{},"sourceType":"module"}