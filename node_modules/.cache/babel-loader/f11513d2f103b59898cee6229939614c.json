{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"color\", \"children\", \"disabled\", \"density\", \"description\", \"truncate\"];\n\nlet _ = t => t,\n    _t;\n\nimport React from 'react';\nimport styled, { useTheme } from 'styled-components';\nimport { TruncateOptionally } from '../Truncate';\nimport { listItemDimensions, listItemLabelColor } from './utils';\nimport { listItemPaddingY } from './utils/listItemPaddingY';\nexport const ListItemLabel = styled(_ref => {\n  let {\n    color,\n    children,\n    disabled,\n    density,\n    description,\n    truncate\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const theme = useTheme();\n  const {\n    descriptionFontSize,\n    descriptionLineHeight,\n    labelFontSize,\n    labelLineHeight\n  } = listItemDimensions(density || theme.defaults.density);\n  return React.createElement(\"div\", props, React.createElement(TruncateOptionally, {\n    truncate: truncate,\n    color: listItemLabelColor(color, disabled),\n    fontSize: labelFontSize,\n    lineHeight: labelLineHeight\n  }, children), description && React.createElement(TruncateOptionally, {\n    truncate: truncate,\n    color: disabled ? 'text1' : 'text2',\n    fontSize: descriptionFontSize,\n    lineHeight: descriptionLineHeight\n  }, description));\n}).withConfig({\n  displayName: \"ListItemLabel\",\n  componentId: \"sc-gwpd17-0\"\n})(_t || (_t = _`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  min-height: ${0}px;\n  /**\n   * min-width needed so truncates are aware of container width\n   */\n  min-width: 0;\n\n  ${0}\n`), _ref2 => {\n  let {\n    density: _density = 0\n  } = _ref2;\n  return listItemDimensions(_density).height;\n}, _ref3 => {\n  let {\n    density: _density2 = 0\n  } = _ref3;\n  return listItemPaddingY(_density2);\n});","map":{"version":3,"mappings":";;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,mBAAjC;AAEA,SAASC,kBAAT,QAAmC,aAAnC;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,SAAvD;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAUA,OAAO,MAAMC,aAAa,GAAGN,MAAM,CACjCO,QAQ0B;EAAA,IARzB;IACCC,KADD;IAECC,QAFD;IAGCC,QAHD;IAICC,OAJD;IAKCC,WALD;IAMCC;EAND,IAQoBN,IAAK;EAAA,IADrBO,KAAK,4CACgB;;EACxB,MAAMC,KAAK,GAAGd,QAAQ,EAAtB;EACA,MAAM;IACJe,mBADI;IAEJC,qBAFI;IAGJC,aAHI;IAIJC;EAJI,IAKFhB,kBAAkB,CAACQ,OAAO,IAAII,KAAK,CAACK,QAANL,CAAeJ,OAA3B,CALtB;EAOA,OACEZ,2BAASe,KAAT,EACEf,oBAACG,kBAAD,EAAmB;IACjBW,QAAQ,EAAEA,QADO;IAEjBL,KAAK,EAAEJ,kBAAkB,CAACI,KAAD,EAAQE,QAAR,CAFR;IAGjBW,QAAQ,EAAEH,aAHO;IAIjBI,UAAU,EAAEH;EAJK,CAAnB,EAMGV,QANH,CADF,EASGG,WAAW,IACVb,oBAACG,kBAAD,EAAmB;IACjBW,QAAQ,EAAEA,QADO;IAEjBL,KAAK,EAAEE,QAAQ,GAAG,OAAH,GAAa,OAFX;IAGjBW,QAAQ,EAAEL,mBAHO;IAIjBM,UAAU,EAAEL;EAJK,CAAnB,EAMGL,WANH,CAVJ,CADF;AAsBD,CAxCgC,CAANZ,CAyC5BuB,UAzC4BvB,CAyC5B;EAAAwB;EAAAC;AAAA,CAzC4BzB,EAyC5B0B,aAAC;AACF;AACA;AACA;AACA;AACA,gBAAc,CAA0D;AACxE;AACA;AACA;AACA;AACA;AACA,IAAE,CAAiD;AACnD,CAZC,CAzC4B1B,EA8Cb;EAAA,IAAC;IAAEW,OAAO,EAAPA,QAAO,GAAG;EAAZ,CAAD;EAAA,OAAqBR,kBAAkB,CAACQ,QAAD,CAAlBR,CAA4BwB,MAAjD;AAAA,CA9Ca3B,EAoDzB;EAAA,IAAC;IAAEW,OAAO,EAAPA,SAAO,GAAG;EAAZ,CAAD;EAAA,OAAqBN,gBAAgB,CAACM,SAAD,CAArC;AAAA,CApDyBX,CAAtB","names":["React","styled","useTheme","TruncateOptionally","listItemDimensions","listItemLabelColor","listItemPaddingY","ListItemLabel","_ref","color","children","disabled","density","description","truncate","props","theme","descriptionFontSize","descriptionLineHeight","labelFontSize","labelLineHeight","defaults","fontSize","lineHeight","withConfig","displayName","componentId","_t","height"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/ListItem/ListItemLabel.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { CompatibleHTMLProps, DensityProp } from '@looker/design-tokens'\nimport type { ReactNode } from 'react'\nimport React from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport type { TruncateConfigProp } from '../Truncate'\nimport { TruncateOptionally } from '../Truncate'\nimport type { ListItemColorProp } from './types'\nimport { listItemDimensions, listItemLabelColor } from './utils'\nimport { listItemPaddingY } from './utils/listItemPaddingY'\n\ntype ListItemLabelProps = CompatibleHTMLProps<HTMLElement> &\n  ListItemColorProp &\n  DensityProp & {\n    disabled?: boolean\n    description?: ReactNode\n    truncate?: TruncateConfigProp\n  }\n\nexport const ListItemLabel = styled(\n  ({\n    color,\n    children,\n    disabled,\n    density,\n    description,\n    truncate,\n    ...props\n  }: ListItemLabelProps) => {\n    const theme = useTheme()\n    const {\n      descriptionFontSize,\n      descriptionLineHeight,\n      labelFontSize,\n      labelLineHeight,\n    } = listItemDimensions(density || theme.defaults.density)\n\n    return (\n      <div {...props}>\n        <TruncateOptionally\n          truncate={truncate}\n          color={listItemLabelColor(color, disabled)}\n          fontSize={labelFontSize}\n          lineHeight={labelLineHeight}\n        >\n          {children}\n        </TruncateOptionally>\n        {description && (\n          <TruncateOptionally\n            truncate={truncate}\n            color={disabled ? 'text1' : 'text2'}\n            fontSize={descriptionFontSize}\n            lineHeight={descriptionLineHeight}\n          >\n            {description}\n          </TruncateOptionally>\n        )}\n      </div>\n    )\n  }\n)`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  min-height: ${({ density = 0 }) => listItemDimensions(density).height}px;\n  /**\n   * min-width needed so truncates are aware of container width\n   */\n  min-width: 0;\n\n  ${({ density = 0 }) => listItemPaddingY(density)}\n`\n"]},"metadata":{},"sourceType":"module"}