{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport { variant } from '@looker/design-tokens';\n\nconst calculateValues = half => {\n  return {\n    dashArray: half * 4.7,\n    dashOffset: half * 2.3,\n    half,\n    radius: half / 1.34\n  };\n};\n\nexport const progressCircularSVG = variant({\n  prop: 'size',\n  variants: {\n    xsmall: _objectSpread({\n      stroke: 2\n    }, calculateValues(10)),\n    small: _objectSpread({\n      stroke: 2.5\n    }, calculateValues(12)),\n    medium: _objectSpread({\n      stroke: 3\n    }, calculateValues(18)),\n    large: _objectSpread({\n      stroke: 4\n    }, calculateValues(24))\n  }\n});\nexport const progressCircularSize = variant({\n  prop: 'size',\n  variants: {\n    xsmall: {\n      height: '20px',\n      width: '20px'\n    },\n    small: {\n      height: '24px',\n      width: '24px'\n    },\n    medium: {\n      height: '36px',\n      width: '36px'\n    },\n    large: {\n      height: '48px',\n      width: '48px'\n    }\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,SAASA,OAAT,QAAwB,uBAAxB;;AAQA,MAAMC,eAAe,GAAIC,IAAY,IAAK;EACxC,OAAO;IACLC,SAAS,EAAED,IAAI,GAAG,GADb;IAELE,UAAU,EAAEF,IAAI,GAAG,GAFd;IAGLA,IAHK;IAILG,MAAM,EAAEH,IAAI,GAAG;EAJV,CAAP;AAMD,CAPD;;AAUA,OAAO,MAAMI,mBAAmB,GAAGN,OAAO,CAAC;EACzCO,IAAI,EAAE,MADmC;EAEzCC,QAAQ,EAAE;IACRC,MAAM;MACJC,MAAM,EAAE;IADJ,GAEDT,eAAe,CAAC,EAAD,CAFd,CADE;IAKRU,KAAK;MACHD,MAAM,EAAE;IADL,GAEAT,eAAe,CAAC,EAAD,CAFf,CALG;IASRW,MAAM;MACJF,MAAM,EAAE;IADJ,GAEDT,eAAe,CAAC,EAAD,CAFd,CATE;IAaRY,KAAK;MACHH,MAAM,EAAE;IADL,GAEAT,eAAe,CAAC,EAAD,CAFf;EAbG;AAF+B,CAAD,CAAnC;AAsBP,OAAO,MAAMa,oBAAoB,GAAGd,OAAO,CAAC;EAC1CO,IAAI,EAAE,MADoC;EAE1CC,QAAQ,EAAE;IACRC,MAAM,EAAE;MACNM,MAAM,EAAE,MADF;MAENC,KAAK,EAAE;IAFD,CADA;IAKRL,KAAK,EAAE;MACLI,MAAM,EAAE,MADH;MAELC,KAAK,EAAE;IAFF,CALC;IASRJ,MAAM,EAAE;MACNG,MAAM,EAAE,MADF;MAENC,KAAK,EAAE;IAFD,CATA;IAaRH,KAAK,EAAE;MACLE,MAAM,EAAE,MADH;MAELC,KAAK,EAAE;IAFF;EAbC;AAFgC,CAAD,CAApC","names":["variant","calculateValues","half","dashArray","dashOffset","radius","progressCircularSVG","prop","variants","xsmall","stroke","small","medium","large","progressCircularSize","height","width"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/ProgressCircular/size.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type {\n  SizeLarge,\n  SizeMedium,\n  SizeSmall,\n  SizeXSmall,\n} from '@looker/design-tokens'\nimport { variant } from '@looker/design-tokens'\n\nexport type ProgressCircularSizes =\n  | SizeXSmall\n  | SizeSmall\n  | SizeMedium\n  | SizeLarge\n\nconst calculateValues = (half: number) => {\n  return {\n    dashArray: half * 4.7,\n    dashOffset: half * 2.3,\n    half,\n    radius: half / 1.34,\n  }\n}\n\n/* eslint-disable sort-keys-fix/sort-keys-fix */\nexport const progressCircularSVG = variant({\n  prop: 'size',\n  variants: {\n    xsmall: {\n      stroke: 2,\n      ...calculateValues(10),\n    },\n    small: {\n      stroke: 2.5,\n      ...calculateValues(12),\n    },\n    medium: {\n      stroke: 3,\n      ...calculateValues(18),\n    },\n    large: {\n      stroke: 4,\n      ...calculateValues(24),\n    },\n  },\n})\n\nexport const progressCircularSize = variant({\n  prop: 'size',\n  variants: {\n    xsmall: {\n      height: '20px',\n      width: '20px',\n    },\n    small: {\n      height: '24px',\n      width: '24px',\n    },\n    medium: {\n      height: '36px',\n      width: '36px',\n    },\n    large: {\n      height: '48px',\n      width: '48px',\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}