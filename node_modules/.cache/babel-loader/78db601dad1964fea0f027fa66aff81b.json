{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport toPairs from 'lodash/toPairs';\nimport startCase from 'lodash/startCase';\nimport { convertRemToPx, BreakpointRamp, breakpoints } from '@looker/design-tokens';\nexport const VIEWPORT_MAP = toPairs(BreakpointRamp).reduce((map, _ref) => {\n  let [name, size] = _ref;\n  const sizePx = convertRemToPx(parseInt(size || '', 10));\n  const width = `${sizePx}px`;\n  const height = sizePx < convertRemToPx(parseInt(breakpoints[2])) ? `${Math.round(sizePx * 2.16)}px` : `${Math.round(sizePx * 0.55)}px`;\n  return _objectSpread(_objectSpread({}, map), {}, {\n    [name]: {\n      name: startCase(name),\n      styles: {\n        height,\n        width\n      },\n      type: name\n    }\n  });\n}, {});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,WAHF,QAIO,uBAJP;AAkBA,OAAO,MAAMC,YAAyB,GAAGL,OAAO,CAACG,cAAD,CAAPH,CAAwBM,MAAxBN,CACvC,CAACO,GAAD,WAAuB;EAAA,IAAjB,CAACC,IAAD,EAAOC,IAAP,CAAiB;EACrB,MAAMC,MAAM,GAAGR,cAAc,CAACS,QAAQ,CAACF,IAAI,IAAI,EAAT,EAAa,EAAb,CAAT,CAA7B;EACA,MAAMG,KAAK,GAAI,GAAEF,MAAO,IAAxB;EAIA,MAAMG,MAAM,GACVH,MAAM,GAAGR,cAAc,CAACS,QAAQ,CAACP,WAAW,CAAC,CAAD,CAAZ,CAAT,CAAvBM,GACK,GAAEI,IAAI,CAACC,KAALD,CAAWJ,MAAM,GAAG,IAApBI,CAA0B,IADjCJ,GAEK,GAAEI,IAAI,CAACC,KAALD,CAAWJ,MAAM,GAAG,IAApBI,CAA0B,IAHnC;EAKA,uCACKP,GADL,GACQ,EADR,EACQ;IACN,CAACC,IAAD,GAAkB;MAChBA,IAAI,EAAEP,SAAS,CAACO,IAAD,CADC;MAEhBQ,MAAM,EAAE;QAAEH,MAAF;QAAUD;MAAV,CAFQ;MAGhBK,IAAI,EAAET;IAHU;EADZ,CADR;AAQD,CApBsCR,EAqBvC,EArBuCA,CAAlC","names":["toPairs","startCase","convertRemToPx","BreakpointRamp","breakpoints","VIEWPORT_MAP","reduce","map","name","size","sizePx","parseInt","width","height","Math","round","styles","type"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/utils-storybook/viewportMap.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\n/* istanbul ignore file */\nimport toPairs from 'lodash/toPairs'\nimport startCase from 'lodash/startCase'\nimport {\n  convertRemToPx,\n  BreakpointRamp,\n  breakpoints,\n} from '@looker/design-tokens'\n\n/*\n * ViewportMap is used to integrate our custom breakpoints into storybook\n */\nexport interface Viewport {\n  name: string\n  styles: { height: string; width: string }\n  type: 'desktop' | 'mobile' | 'tablet' | 'other'\n}\nexport interface ViewportMap {\n  [key: string]: Viewport\n}\n\nexport const VIEWPORT_MAP: ViewportMap = toPairs(BreakpointRamp).reduce(\n  (map, [name, size]) => {\n    const sizePx = convertRemToPx(parseInt(size || '', 10))\n    const width = `${sizePx}px`\n\n    // for tablets and smaller, the height should be roughly twice the width\n    // larger viewports should have a widescreen ratio\n    const height =\n      sizePx < convertRemToPx(parseInt(breakpoints[2]))\n        ? `${Math.round(sizePx * 2.16)}px`\n        : `${Math.round(sizePx * 0.55)}px`\n\n    return {\n      ...map,\n      [name as string]: {\n        name: startCase(name),\n        styles: { height, width },\n        type: name,\n      },\n    }\n  },\n  {}\n)\n"]},"metadata":{},"sourceType":"module"}