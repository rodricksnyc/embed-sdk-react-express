{"ast":null,"code":"import i18next from 'i18next';\nimport { useTranslation as useTranslationOrig } from 'react-i18next';\nimport { i18nInitComponents } from './i18nInitComponents';\n\nconst enResourcesMissing = en => {\n  const nameSpaceArr = en.resources && Object.keys(en.resources);\n  return nameSpaceArr === null || nameSpaceArr === void 0 ? void 0 : nameSpaceArr.some(ns => !i18next.hasResourceBundle('en', ns));\n};\n\nexport const useTranslationBase = (en, ns, options) => {\n  const isEn = !i18next.language || i18next.language === 'en';\n\n  if (isEn && enResourcesMissing(en)) {\n    i18nInitComponents(en);\n  }\n\n  return useTranslationOrig(ns, options);\n};","map":{"version":3,"mappings":"AAKA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,cAAc,IAAIC,kBAA3B,QAAqD,eAArD;AAEA,SAASC,kBAAT,QAAmC,sBAAnC;;AAIA,MAAMC,kBAAkB,GAAIC,EAA+B,IAAK;EAC9D,MAAMC,YAAY,GAAGD,EAAE,CAACE,SAAHF,IAAgBG,MAAM,CAACC,IAAPD,CAAYH,EAAE,CAACE,SAAfC,CAArC;EACA,OAAOF,YAAY,SAAZA,gBAAY,WAAZA,GAAY,MAAZA,eAAY,CAAEI,IAAdJ,CAAmBK,EAAE,IAAI,CAACX,OAAO,CAACY,iBAARZ,CAA0B,IAA1BA,EAAgCW,EAAhCX,CAA1BM,CAAP;AACD,CAHD;;AAUA,OAAO,MAAMO,kBAAkB,GAAG,CAChCR,EADgC,EAEhCM,EAFgC,EAGhCG,OAHgC,KAI7B;EACH,MAAMC,IAAI,GAAG,CAACf,OAAO,CAACgB,QAAT,IAAqBhB,OAAO,CAACgB,QAARhB,KAAqB,IAAvD;;EACA,IAAIe,IAAI,IAAIX,kBAAkB,CAACC,EAAD,CAA9B,EAAoC;IAClCF,kBAAkB,CAACE,EAAD,CAAlBF;EACF;;EACA,OAAOD,kBAAkB,CAACS,EAAD,EAAKG,OAAL,CAAzB;AACD,CAVM","names":["i18next","useTranslation","useTranslationOrig","i18nInitComponents","enResourcesMissing","en","nameSpaceArr","resources","Object","keys","some","ns","hasResourceBundle","useTranslationBase","options","isEn","language"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/i18n/src/useTranslationBase.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport i18next from 'i18next'\nimport { useTranslation as useTranslationOrig } from 'react-i18next'\nimport type { Namespace, UseTranslationOptions } from 'react-i18next'\nimport { i18nInitComponents } from './i18nInitComponents'\nimport type { I18nStateWithDates } from './types'\n\n// Check whether all namespaces in the en locale are already loaded to the i18next instance\nconst enResourcesMissing = (en: Partial<I18nStateWithDates>) => {\n  const nameSpaceArr = en.resources && Object.keys(en.resources)\n  return nameSpaceArr?.some(ns => !i18next.hasResourceBundle('en', ns))\n}\n\n/**\n * A base hook that each package can use to create its own implementation of useTranslation.\n * @param en the package-specific fallback translations (English) are loaded to the i18next instance.\n * The remaining arguments and the response follow useTranslation from react-i18next\n */\nexport const useTranslationBase = <N extends Namespace>(\n  en: Partial<I18nStateWithDates>,\n  ns?: N,\n  options?: UseTranslationOptions\n) => {\n  const isEn = !i18next.language || i18next.language === 'en'\n  if (isEn && enResourcesMissing(en)) {\n    i18nInitComponents(en)\n  }\n  return useTranslationOrig(ns, options)\n}\n"]},"metadata":{},"sourceType":"module"}