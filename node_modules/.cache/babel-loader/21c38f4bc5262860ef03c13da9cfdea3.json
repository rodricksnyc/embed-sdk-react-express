{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nlet _ = t => t,\n    _t,\n    _t2;\n\nconst _excluded = [\"color\", \"markers\", \"markerRadius\", \"speed\"];\nimport { position, space, reset, shouldForwardProp } from '@looker/design-tokens';\nimport range from 'lodash/range';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { SpinnerMarker } from './SpinnerMarker';\n\nconst SpinnerFactory = props => {\n  const {\n    color = 'text5',\n    markers = 13,\n    markerRadius,\n    speed = 1000\n  } = props,\n        rest = _objectWithoutProperties(props, _excluded);\n\n  return React.createElement(Style, _extends({\n    \"data-testid\": \"loading-spinner\"\n  }, rest), range(markers).map(i => React.createElement(SpinnerMarker, {\n    backgroundColor: color,\n    key: i,\n    speed: speed,\n    markers: markers,\n    markerIndex: i,\n    markerRadius: markerRadius\n  })));\n};\n\nconst Style = styled.div.withConfig({\n  shouldForwardProp,\n  displayName: \"Spinner__Style\",\n  componentId: \"sc-dvoyit-0\"\n}).attrs(_ref => {\n  let {\n    size: _size = '30'\n  } = _ref;\n  return {\n    size: _size\n  };\n})(_t || (_t = _`\n  ${0}\n  ${0}\n  ${0}\n\n  height: ${0}px;\n  position: relative;\n  width: ${0}px;\n`), reset, space, position, _ref2 => {\n  let {\n    size\n  } = _ref2;\n  return size;\n}, _ref3 => {\n  let {\n    size\n  } = _ref3;\n  return size;\n});\nexport const Spinner = styled(SpinnerFactory).withConfig({\n  displayName: \"Spinner\",\n  componentId: \"sc-dvoyit-1\"\n})(_t2 || (_t2 = _``));","map":{"version":3,"mappings":";;;;;;;;AAUA,SACEA,QADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,iBAJF,QAKO,uBALP;AAMA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAaA,MAAMC,cAAc,GAAIC,KAAmB,IAAK;EAC9C,MAAM;IACJC,KAAK,GAAG,OADJ;IAEJC,OAAO,GAAG,EAFN;IAGJC,YAHI;IAIJC,KAAK,GAAG;EAJJ,IAMFJ,KANJ;EAAA,MAKKK,IAAI,4BACLL,KADK,EACAM,SADA,CALT;;EAOA,OACEV,oBAACW,KAAD,EAAMC;IAAC,eAAY;EAAb,GAAmCH,IAAnC,CAAN,EACGV,KAAK,CAACO,OAAD,CAALP,CAAec,GAAfd,CAAmBe,CAAC,IACnBd,oBAACE,aAAD,EAAc;IACZa,eAAe,EAAEV,KADL;IAEZW,GAAG,EAAEF,CAFO;IAGZN,KAAK,EAAEA,KAHK;IAIZF,OAAO,EAAEA,OAJG;IAKZW,WAAW,EAAEH,CALD;IAMZP,YAAY,EAAEA;EANF,CAAd,CADDR,CADH,CADF;AAcD,CAtBD;;AAwBA,MAAMY,KAAK,GAAGV,MAAM,CAACiB,GAAPjB,CACXkB,UADWlB,CACA;EAAEH,iBAAF;EAAmBsB,6BAAnB;EAAmBC;AAAnB,CADApB,EAEXqB,KAFWrB,CAES;EAAA,IAAC;IAAEsB,IAAI,EAAJA,KAAI,GAAG;EAAT,CAAD;EAAA,OAAsB;IACzCA,IAAI,EAAJA;EADyC,CAAtB;AAAA,CAFTtB,EAITuB,aAAe;AACpB,IAAE,CAAQ;AACV,IAAE,CAAQ;AACV,IAAE,CAAW;AACb;AACA,YAAU,CAAqB;AAC/B;AACA,WAAS,CAAqB;AAC9B,CARK,CAJSvB,EAKVJ,KALUI,EAMVL,KANUK,EAOVN,QAPUM,EASF;EAAA,IAAC;IAAEsB;EAAF,CAAD;EAAA,OAAcA,IAAd;AAAA,CATEtB,EAWH;EAAA,IAAC;IAAEsB;EAAF,CAAD;EAAA,OAAcA,IAAd;AAAA,CAXGtB,CAAd;AAcA,OAAO,MAAMwB,OAAO,GAAGxB,MAAM,CAACE,cAAD,CAANF,CAAsBkB,UAAtBlB,CAAsB;EAAAmB;EAAAC;AAAA,CAAtBpB,EAAsByB,eAAC,EAAD,CAAtBzB,CAAhB","names":["position","space","reset","shouldForwardProp","range","React","styled","SpinnerMarker","SpinnerFactory","props","color","markers","markerRadius","speed","rest","_excluded","Style","_extends","map","i","backgroundColor","key","markerIndex","div","withConfig","displayName","componentId","attrs","size","_t","Spinner","_t2"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Spinner/Spinner.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type {\n  CompatibleHTMLProps,\n  PositionProps,\n  SpaceProps,\n} from '@looker/design-tokens'\nimport {\n  position,\n  space,\n  reset,\n  shouldForwardProp,\n} from '@looker/design-tokens'\nimport range from 'lodash/range'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { SpinnerMarker } from './SpinnerMarker'\n\nexport interface SpinnerProps\n  extends SpaceProps,\n    PositionProps,\n    CompatibleHTMLProps<HTMLElement> {\n  markers?: number\n  markerRadius?: number\n  speed?: number\n  size?: number\n  color?: string\n}\n\nconst SpinnerFactory = (props: SpinnerProps) => {\n  const {\n    color = 'text5',\n    markers = 13,\n    markerRadius,\n    speed = 1000,\n    ...rest\n  } = props\n  return (\n    <Style data-testid=\"loading-spinner\" {...rest}>\n      {range(markers).map(i => (\n        <SpinnerMarker\n          backgroundColor={color}\n          key={i}\n          speed={speed}\n          markers={markers}\n          markerIndex={i}\n          markerRadius={markerRadius}\n        />\n      ))}\n    </Style>\n  )\n}\n\nconst Style = styled.div\n  .withConfig({ shouldForwardProp })\n  .attrs<SpinnerProps>(({ size = '30' }) => ({\n    size,\n  }))<SpinnerProps>`\n  ${reset}\n  ${space}\n  ${position}\n\n  height: ${({ size }) => size}px;\n  position: relative;\n  width: ${({ size }) => size}px;\n`\n\nexport const Spinner = styled(SpinnerFactory)``\n"]},"metadata":{},"sourceType":"module"}