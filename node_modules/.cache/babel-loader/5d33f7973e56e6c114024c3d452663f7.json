{"ast":null,"code":"import { useEffect, useRef, useCallback } from 'react';\nexport function useMouseDownClick(onMouseDownClick, onMouseUp) {\n  const mouseDownTriggered = useRef(false);\n  const handleMouseUp = useCallback(e => {\n    window.requestAnimationFrame(() => {\n      mouseDownTriggered.current = false;\n      onMouseUp && onMouseUp(e);\n    });\n  }, [onMouseUp]);\n  useEffect(() => {\n    return () => {\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseUp]);\n  return {\n    onClick: useCallback(e => {\n      if (!mouseDownTriggered.current) {\n        onMouseDownClick(e);\n      }\n    }, [onMouseDownClick]),\n    onMouseDown: useCallback(e => {\n      mouseDownTriggered.current = true;\n      onMouseDownClick(e);\n      document.addEventListener('mouseup', handleMouseUp);\n    }, [handleMouseUp, onMouseDownClick])\n  };\n}","map":{"version":3,"mappings":"AAWA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,WAA5B,QAA+C,OAA/C;AAKA,OAAO,SAASC,iBAAT,CACLC,gBADK,EAELC,SAFK,EAGL;EACA,MAAMC,kBAAkB,GAAGL,MAAM,CAAC,KAAD,CAAjC;EAMA,MAAMM,aAAa,GAAGL,WAAW,CAC9BM,CAAa,IAAK;IACjBC,MAAM,CAACC,qBAAPD,CAA6B,MAAM;MACjCH,kBAAkB,CAACK,OAAnBL,GAA6B,KAA7BA;MACAD,SAAS,IAAIA,SAAS,CAACG,CAAD,CAAtBH;IACD,CAHDI;EAID,CAN8B,EAO/B,CAACJ,SAAD,CAP+B,CAAjC;EAUAL,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXY,QAAQ,CAACC,mBAATD,CAA6B,SAA7BA,EAAwCL,aAAxCK;IACD,CAFD;EAGD,CAJQ,EAIN,CAACL,aAAD,CAJM,CAATP;EAMA,OAAO;IACLc,OAAO,EAAEZ,WAAW,CACjBM,CAAqB,IAAK;MACzB,IAAI,CAACF,kBAAkB,CAACK,OAAxB,EAAiC;QAC/BP,gBAAgB,CAACI,CAAD,CAAhBJ;MACF;IACD,CALiB,EAMlB,CAACA,gBAAD,CANkB,CADf;IASLW,WAAW,EAAEb,WAAW,CACrBM,CAAqB,IAAK;MACzBF,kBAAkB,CAACK,OAAnBL,GAA6B,IAA7BA;MACAF,gBAAgB,CAACI,CAAD,CAAhBJ;MACAQ,QAAQ,CAACI,gBAATJ,CAA0B,SAA1BA,EAAqCL,aAArCK;IACD,CALqB,EAMtB,CAACL,aAAD,EAAgBH,gBAAhB,CANsB;EATnB,CAAP;AAkBF","names":["useEffect","useRef","useCallback","useMouseDownClick","onMouseDownClick","onMouseUp","mouseDownTriggered","handleMouseUp","e","window","requestAnimationFrame","current","document","removeEventListener","onClick","onMouseDown","addEventListener"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/utils/useMouseDownClick.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\n// This hook allows you to merge click and mousedown behavior to a single callback\n// which will trigger on mousedown or on click if mousedown has not already been triggered\n// onMouseUp is an optional callback parameter for any necessary cleanup or cancellations\n// because the user changed their mind and dragged out of the element before mouseup\n\nimport type { MouseEvent as ReactMouseEvent } from 'react'\nimport { useEffect, useRef, useCallback } from 'react'\n/**\n * @param onMouseDownClick callback with React.MouseEvent for the first of either mousedown OR click\n * @param onMouseUp callback with DOM MouseEvent for mouseup (may be outside the element)\n */\nexport function useMouseDownClick<E extends HTMLElement>(\n  onMouseDownClick: (e: ReactMouseEvent<E>) => void,\n  onMouseUp?: (e: MouseEvent) => void\n) {\n  const mouseDownTriggered = useRef(false)\n\n  // User may hold the mouse down for an unspecified length of time\n  // and they may drag out of the element in question before mouseup\n  // in which case, onMouseDown has been called but not onClick\n  // so we need to provide the opportunity to \"reverse\" the action (e.g. close the menu)\n  const handleMouseUp = useCallback(\n    (e: MouseEvent) => {\n      window.requestAnimationFrame(() => {\n        mouseDownTriggered.current = false\n        onMouseUp && onMouseUp(e)\n      })\n    },\n    [onMouseUp]\n  )\n\n  useEffect(() => {\n    return () => {\n      document.removeEventListener('mouseup', handleMouseUp)\n    }\n  }, [handleMouseUp])\n\n  return {\n    onClick: useCallback(\n      (e: ReactMouseEvent<E>) => {\n        if (!mouseDownTriggered.current) {\n          onMouseDownClick(e)\n        }\n      },\n      [onMouseDownClick]\n    ),\n    onMouseDown: useCallback(\n      (e: ReactMouseEvent<E>) => {\n        mouseDownTriggered.current = true\n        onMouseDownClick(e)\n        document.addEventListener('mouseup', handleMouseUp)\n      },\n      [handleMouseUp, onMouseDownClick]\n    ),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}