{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"id\"];\nimport React, { useContext } from 'react';\nimport { useID } from '../../utils/useID';\nimport { DataTableRow } from '../Item/DataTableRow';\nimport { DataTableContext } from '../DataTableContext';\nimport { DataTableHeaderCell } from './DataTableHeaderCell';\nexport const DataTableHeader = _ref2 => {\n  let {\n    id\n  } = _ref2;\n  const {\n    allSelected,\n    columns,\n    select\n  } = useContext(DataTableContext);\n  const hasCheckbox = !!select;\n\n  const onChange = () => select ? select.onSelectAll() : undefined;\n\n  const headerColumns = columns && columns.map(_ref => {\n    let {\n      id\n    } = _ref,\n        column = _objectWithoutProperties(_ref, _excluded);\n\n    return React.createElement(DataTableHeaderCell, _extends({}, column, {\n      columnId: id,\n      key: id\n    }));\n  });\n  return React.createElement(DataTableRow, {\n    checked: allSelected,\n    id: useID(id),\n    isHeaderRow: true,\n    hasCheckbox: hasCheckbox,\n    onChange: onChange\n  }, headerColumns);\n};","map":{"version":3,"mappings":";;;AAMA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,OAAO,MAAMC,eAAe,GAAG,SAEY;EAAA,IAFX;IAC9BC;EAD8B,CAEW;EACzC,MAAM;IAAEC,WAAF;IAAeC,OAAf;IAAwBC;EAAxB,IAAmCT,UAAU,CAACG,gBAAD,CAAnD;EACA,MAAMO,WAAW,GAAG,CAAC,CAACD,MAAtB;;EACA,MAAME,QAAQ,GAAG,MAAOF,MAAM,GAAGA,MAAM,CAACG,WAAPH,EAAH,GAA0BI,SAAxD;;EAEA,MAAMC,aAAa,GACjBN,OAAO,IACPA,OAAO,CAACO,GAARP,CAAYQ;IAAA,IAAC;MAAEV;IAAF,IAAiBU,IAAlB;IAAA,IAAUC,MAAM,4CAAhB;;IAAgB,OAC1BlB,oBAACK,mBAAD,EAAoBc,aAAKD,MAAL,EAAW;MAAEE,QAAQ,EAAEb,EAAZ;MAAgBc,GAAG,EAAEd;IAArB,CAAX,CAApB,CAD0B;EAE3B,CAFDE,CAFF;EAMA,OACET,oBAACG,YAAD,EAAa;IACXmB,OAAO,EAAEd,WADE;IAEXD,EAAE,EAAEL,KAAK,CAACK,EAAD,CAFE;IAGXgB,WAAW,MAHA;IAIXZ,WAAW,EAAEA,WAJF;IAKXC,QAAQ,EAAEA;EALC,CAAb,EAOGG,aAPH,CADF;AAWD,CAxBM","names":["React","useContext","useID","DataTableRow","DataTableContext","DataTableHeaderCell","DataTableHeader","id","allSelected","columns","select","hasCheckbox","onChange","onSelectAll","undefined","headerColumns","map","_ref","column","_extends","columnId","key","checked","isHeaderRow"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/DataTable/Header/DataTableHeader.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { CompatibleHTMLProps } from '@looker/design-tokens'\nimport React, { useContext } from 'react'\nimport { useID } from '../../utils/useID'\nimport { DataTableRow } from '../Item/DataTableRow'\nimport { DataTableContext } from '../DataTableContext'\nimport { DataTableHeaderCell } from './DataTableHeaderCell'\n\nexport const DataTableHeader = ({\n  id,\n}: CompatibleHTMLProps<HTMLDivElement>) => {\n  const { allSelected, columns, select } = useContext(DataTableContext)\n  const hasCheckbox = !!select\n  const onChange = () => (select ? select.onSelectAll() : undefined)\n\n  const headerColumns =\n    columns &&\n    columns.map(({ id, ...column }) => (\n      <DataTableHeaderCell {...column} columnId={id} key={id} />\n    ))\n\n  return (\n    <DataTableRow\n      checked={allSelected}\n      id={useID(id)}\n      isHeaderRow\n      hasCheckbox={hasCheckbox}\n      onChange={onChange}\n    >\n      {headerColumns}\n    </DataTableRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}