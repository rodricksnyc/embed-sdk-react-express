{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport styled from 'styled-components';\nimport { ListItemLabel } from '../ListItem';\nimport { generateIndent } from '../Tree/utils';\nimport { lkFieldItemDensity } from './defaults';\nexport const LkFieldItemContent = styled.div.attrs(_ref => {\n  let {\n    role: _role = 'treeitem'\n  } = _ref;\n  return {\n    role: _role\n  };\n}).withConfig({\n  displayName: \"LkFieldItemContent\",\n  componentId: \"sc-vth29c-0\"\n})(_t || (_t = _`\n  ${0} {\n    /*\n      Height and padding normally get set by both the icon and label containers, but we're removing the\n      vertical padding on the label container to avoid hover disclosed icons from expanding items\n      in the core Looker Field Picker\n    */\n    padding: 0;\n\n    /* Horizontal label padding to avoid text from bumping agaisnt background */\n    padding-left: ${0};\n  }\n\n  ${0}\n\n  /*\n    IconButtons with hovered / selected backgrounds sit above\n    a non-absolutely positioned box-shadow. Absolute positioning\n    and a z-index gets the box-shadow to sit above ListItem children\n    with background colors.\n  */\n  ${0}\n\n  /*\n    Normal TreeItemContent calculates background color, but in LkFieldItem's case,\n    the background exists on the LkFieldItemLabel container to get the \"label background\n    only\" styling.\n  */\n  background: none;\n\n  color: inherit;\n  cursor: ${0};\n  display: flex;\n  flex: 1;\n  font-size: inherit;\n  font-weight: inherit;\n  margin: 0; /* safari has default margin */\n  min-width: 0;\n  outline: none;\n\n  /*\n    Supports absolutely positioned box-shadow\n  */\n  position: relative;\n\n  text-align: left;\n  text-decoration: none;\n  width: 100%;\n\n  &:hover,\n  &:focus {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  &[disabled] {\n    color: ${0};\n    cursor: not-allowed;\n  }\n`), ListItemLabel, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.space.xxsmall;\n}, _ref3 => {\n  let {\n    depth\n  } = _ref3;\n  return generateIndent({\n    density: lkFieldItemDensity,\n    depth\n  });\n}, _ref4 => {\n  let {\n    focusVisible,\n    theme\n  } = _ref4;\n  return focusVisible && `\n    &::after {\n      bottom: 0;\n      box-shadow: inset 0 0 0 2px ${theme.colors.keyFocus};\n      content: '';\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      z-index: 1;\n    }\n  `;\n}, _ref5 => {\n  let {\n    cursorPointer\n  } = _ref5;\n  return cursorPointer ? 'pointer' : undefined;\n}, _ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.colors.text1;\n});","map":{"version":3,"mappings":";;;AA0BA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,kBAAT,QAAmC,YAAnC;AAQA,OAAO,MAAMC,kBAAkB,GAAGJ,MAAM,CAACK,GAAPL,CAAWM,KAAXN,CAChC;EAAA,IAAC;IAAEO,IAAI,EAAJA,KAAI,GAAG;EAAT,CAAD;EAAA,OAA4B;IAC1BA,IAAI,EAAJA;EAD0B,CAA5B;AAAA,CADgCP,EAIjCQ,UAJiCR,CAIjC;EAAAS;EAAAC;AAAA,CAJiCV,EAIjCW,aAA0B;AAC3B,IAAE,CAAgB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAkB,CAAqC;AACvD;AACA;AACA,IAAE,CAAwE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAE,CAaE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAU,CAAiE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAW,CAAoC;AAC/C;AACA;AACA,CAxEC,CAJiCX,EAK9BC,aAL8BD,EAcd;EAAA,IAAC;IAAEY;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,KAAND,CAAYE,OAA3B;AAAA,CAdcd,EAiB9B;EAAA,IAAC;IAAEe;EAAF,CAAD;EAAA,OAAeb,cAAc,CAAC;IAAEc,OAAO,EAAEb,kBAAX;IAA+BY;EAA/B,CAAD,CAA7B;AAAA,CAjB8Bf,EAyB9B;EAAA,IAAC;IAAEiB,YAAF;IAAgBL;EAAhB,CAAD;EAAA,OACAK,YAAY,IACX;AACL;AACA;AACA,oCAAoCL,KAAK,CAACM,MAANN,CAAaO,QAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAbI;AAAA,CAzB8BnB,EAgDtB;EAAA,IAAC;IAAEoB;EAAF,CAAD;EAAA,OAAwBA,aAAa,GAAG,SAAH,GAAeC,SAApD;AAAA,CAhDsBrB,EAyErB;EAAA,IAAC;IAAEY;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACM,MAANN,CAAaU,KAA5B;AAAA,CAzEqBtB,CAA3B","names":["styled","ListItemLabel","generateIndent","lkFieldItemDensity","LkFieldItemContent","div","attrs","role","withConfig","displayName","componentId","_t","theme","space","xxsmall","depth","density","focusVisible","colors","keyFocus","cursorPointer","undefined","text1"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/LkFieldTree/LkFieldItemContent.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport styled from 'styled-components'\nimport { ListItemLabel } from '../ListItem'\nimport { generateIndent } from '../Tree/utils'\nimport { lkFieldItemDensity } from './defaults'\n\nexport type LkFieldItemContentProps = {\n  cursorPointer?: boolean\n  depth: number\n  focusVisible: boolean\n}\n\nexport const LkFieldItemContent = styled.div.attrs<LkFieldItemContentProps>(\n  ({ role = 'treeitem' }) => ({\n    role,\n  })\n)<LkFieldItemContentProps>`\n  ${ListItemLabel} {\n    /*\n      Height and padding normally get set by both the icon and label containers, but we're removing the\n      vertical padding on the label container to avoid hover disclosed icons from expanding items\n      in the core Looker Field Picker\n    */\n    padding: 0;\n\n    /* Horizontal label padding to avoid text from bumping agaisnt background */\n    padding-left: ${({ theme }) => theme.space.xxsmall};\n  }\n\n  ${({ depth }) => generateIndent({ density: lkFieldItemDensity, depth })}\n\n  /*\n    IconButtons with hovered / selected backgrounds sit above\n    a non-absolutely positioned box-shadow. Absolute positioning\n    and a z-index gets the box-shadow to sit above ListItem children\n    with background colors.\n  */\n  ${({ focusVisible, theme }) =>\n    focusVisible &&\n    `\n    &::after {\n      bottom: 0;\n      box-shadow: inset 0 0 0 2px ${theme.colors.keyFocus};\n      content: '';\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      z-index: 1;\n    }\n  `}\n\n  /*\n    Normal TreeItemContent calculates background color, but in LkFieldItem's case,\n    the background exists on the LkFieldItemLabel container to get the \"label background\n    only\" styling.\n  */\n  background: none;\n\n  color: inherit;\n  cursor: ${({ cursorPointer }) => (cursorPointer ? 'pointer' : undefined)};\n  display: flex;\n  flex: 1;\n  font-size: inherit;\n  font-weight: inherit;\n  margin: 0; /* safari has default margin */\n  min-width: 0;\n  outline: none;\n\n  /*\n    Supports absolutely positioned box-shadow\n  */\n  position: relative;\n\n  text-align: left;\n  text-decoration: none;\n  width: 100%;\n\n  &:hover,\n  &:focus {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  &[disabled] {\n    color: ${({ theme }) => theme.colors.text1};\n    cursor: not-allowed;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}