{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport { css } from 'styled-components';\nimport { listItemDimensions } from '../../ListItem';\nexport const generateTreeBorder = _ref => {\n  let {\n    border,\n    density,\n    depth,\n    theme\n  } = _ref;\n  if (!border) return false;\n  const {\n    iconSize\n  } = listItemDimensions(density);\n  const itemBorderSize = '1px';\n  const itemGutter = '0.25rem';\n  const indicatorIconSize = theme.sizes[iconSize];\n  const depthSize = `(${indicatorIconSize} + ${itemGutter}) * ${depth}`;\n  const borderSpacer = `(${indicatorIconSize} + ${itemBorderSize}) / 2 + ${depthSize}`;\n  const preBorderStop = `calc(${borderSpacer} - ${itemBorderSize})`;\n  const postBorderStop = `calc(${borderSpacer})`;\n  return css(_t || (_t = _`\n    background: linear-gradient(\n      90deg,\n      transparent ${0},\n      ${0} ${0} ${0},\n      transparent ${0}\n    );\n  `), preBorderStop, theme.colors.ui2, preBorderStop, postBorderStop, postBorderStop);\n};","map":{"version":3,"mappings":";;;AAKA,SAASA,GAAT,QAAoB,mBAApB;AAEA,SAASC,kBAAT,QAAmC,gBAAnC;AAaA,OAAO,MAAMC,kBAAkB,GAAG,QAKX;EAAA,IALY;IACjCC,MADiC;IAEjCC,OAFiC;IAGjCC,KAHiC;IAIjCC;EAJiC,CAKZ;EACrB,IAAI,CAACH,MAAL,EAAa,OAAO,KAAP;EAEb,MAAM;IAAEI;EAAF,IAAeN,kBAAkB,CAACG,OAAD,CAAvC;EAEA,MAAMI,cAAc,GAAG,KAAvB;EACA,MAAMC,UAAU,GAAG,SAAnB;EACA,MAAMC,iBAAiB,GAAGJ,KAAK,CAACK,KAANL,CAAYC,QAAZD,CAA1B;EACA,MAAMM,SAAS,GAAI,IAAGF,iBAAkB,MAAKD,UAAW,OAAMJ,KAAM,EAApE;EACA,MAAMQ,YAAY,GAAI,IAAGH,iBAAkB,MAAKF,cAAe,WAAUI,SAAU,EAAnF;EAEA,MAAME,aAAa,GAAI,QAAOD,YAAa,MAAKL,cAAe,GAA/D;EACA,MAAMO,cAAc,GAAI,QAAOF,YAAa,GAA5C;EAEA,OAAOb,GAAG,cAAC;AACb;AACA;AACA,oBAAkB,CAAgB;AAClC,QAAM,CAAmB,IAAC,CAAgB,IAAC,CAAiB;AAC5D,oBAAkB,CAAiB;AACnC;AACA,GAPY,GAGQc,aAHR,EAIJR,KAAK,CAACU,MAANV,CAAaW,GAJT,EAIgBH,aAJhB,EAIiCC,cAJjC,EAKQA,cALR,CAAV;AAQD,CA3BM","names":["css","listItemDimensions","generateTreeBorder","border","density","depth","theme","iconSize","itemBorderSize","itemGutter","indicatorIconSize","sizes","depthSize","borderSpacer","preBorderStop","postBorderStop","colors","ui2"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Tree/utils/generateTreeBorder.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { css } from 'styled-components'\nimport type { DensityRamp, Theme } from '@looker/design-tokens'\nimport { listItemDimensions } from '../../ListItem'\n\nexport type TreeBorderProps = {\n  border?: boolean\n  density: DensityRamp\n  depth: number\n  theme: Theme\n}\n\n/**\n * Creates a vertical \"border\" for Tree's content container if border is true\n * Testing note: style rules validated by storyshots\n */\nexport const generateTreeBorder = ({\n  border,\n  density,\n  depth,\n  theme,\n}: TreeBorderProps) => {\n  if (!border) return false\n\n  const { iconSize } = listItemDimensions(density)\n\n  const itemBorderSize = '1px'\n  const itemGutter = '0.25rem'\n  const indicatorIconSize = theme.sizes[iconSize]\n  const depthSize = `(${indicatorIconSize} + ${itemGutter}) * ${depth}`\n  const borderSpacer = `(${indicatorIconSize} + ${itemBorderSize}) / 2 + ${depthSize}`\n\n  const preBorderStop = `calc(${borderSpacer} - ${itemBorderSize})`\n  const postBorderStop = `calc(${borderSpacer})`\n\n  return css`\n    background: linear-gradient(\n      90deg,\n      transparent ${preBorderStop},\n      ${theme.colors.ui2} ${preBorderStop} ${postBorderStop},\n      transparent ${postBorderStop}\n    );\n  `\n}\n"]},"metadata":{},"sourceType":"module"}