{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nlet _ = t => t,\n    _t;\n\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useID } from '../../../utils';\nimport { RangeSlider } from '../../Inputs/RangeSlider';\nimport { Field, omitFieldProps, pickFieldProps } from '../Field';\nconst FieldRangeSliderComponent = forwardRef((props, ref) => {\n  const id = useID(props.id);\n  return React.createElement(Field, _extends({\n    \"data-testid\": \"FieldSliderId\"\n  }, pickFieldProps(props), {\n    id: id,\n    ariaLabelOnly: true\n  }), React.createElement(RangeSlider, _extends({}, omitFieldProps(props), {\n    \"aria-describedby\": `describedby-${id}`,\n    \"aria-labelledby\": `labelledby-${id}`,\n    id: id,\n    ref: ref\n  })));\n});\nFieldRangeSliderComponent.displayName = 'FieldRangeSliderComponent';\nexport const FieldRangeSlider = styled(FieldRangeSliderComponent).withConfig({\n  displayName: \"FieldRangeSlider\",\n  componentId: \"sc-qtwi2i-0\"\n})(_t || (_t = _``));","map":{"version":3,"mappings":";;;;;AAMA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AAEA,SAASC,KAAT,EAAgBC,cAAhB,EAAgCC,cAAhC,QAAsD,UAAtD;AAMA,MAAMC,yBAAyB,GAAGP,UAAU,CAC1C,CAACQ,KAAD,EAA+BC,GAA/B,KAA8D;EAC5D,MAAMC,EAAE,GAAGR,KAAK,CAACM,KAAK,CAACE,EAAP,CAAhB;EACA,OACEX,oBAACK,KAAD,EAAMO;IACJ,eAAY;EADR,GAEAL,cAAc,CAACE,KAAD,CAFd,EAEqB;IACzBE,EAAE,EAAEA,EADqB;IAEzBE,aAAa;EAFY,CAFrB,CAAN,EAMEb,oBAACI,WAAD,EAAYQ,aACNN,cAAc,CAACG,KAAD,CADR,EACe;IACzB,oBAAmB,eAAcE,EAAG,EADX;IAEzB,mBAAkB,cAAaA,EAAG,EAFT;IAGzBA,EAAE,EAAEA,EAHqB;IAIzBD,GAAG,EAAEA;EAJoB,CADf,CAAZ,CANF,CADF;AAgBD,CAnByC,CAA5C;AAsBAF,yBAAyB,CAACM,WAA1BN,GAAwC,2BAAxCA;AAEA,OAAO,MAAMO,gBAAgB,GAAGb,MAAM,CAACM,yBAAD,CAANN,CAAiCc,UAAjCd,CAAiC;EAAAY;EAAAG;AAAA,CAAjCf,EAAiCgB,aAAC,EAAD,CAAjChB,CAAzB","names":["React","forwardRef","styled","useID","RangeSlider","Field","omitFieldProps","pickFieldProps","FieldRangeSliderComponent","props","ref","id","_extends","ariaLabelOnly","displayName","FieldRangeSlider","withConfig","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Fields/FieldRangeSlider/FieldRangeSlider.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { useID } from '../../../utils'\nimport type { RangeSliderProps } from '../../Inputs/RangeSlider'\nimport { RangeSlider } from '../../Inputs/RangeSlider'\nimport type { FieldProps } from '../Field'\nimport { Field, omitFieldProps, pickFieldProps } from '../Field'\n\nexport interface FieldRangeSliderProps\n  extends RangeSliderProps,\n    Omit<FieldProps, 'validationMessage'> {}\n\nconst FieldRangeSliderComponent = forwardRef(\n  (props: FieldRangeSliderProps, ref: Ref<HTMLInputElement>) => {\n    const id = useID(props.id)\n    return (\n      <Field\n        data-testid=\"FieldSliderId\"\n        {...pickFieldProps(props)}\n        id={id}\n        ariaLabelOnly\n      >\n        <RangeSlider\n          {...omitFieldProps(props)}\n          aria-describedby={`describedby-${id}`}\n          aria-labelledby={`labelledby-${id}`}\n          id={id}\n          ref={ref}\n        />\n      </Field>\n    )\n  }\n)\n\nFieldRangeSliderComponent.displayName = 'FieldRangeSliderComponent'\n\nexport const FieldRangeSlider = styled(FieldRangeSliderComponent)``\n"]},"metadata":{},"sourceType":"module"}