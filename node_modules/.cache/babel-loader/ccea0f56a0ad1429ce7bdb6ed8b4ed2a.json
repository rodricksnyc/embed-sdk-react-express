{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"children\"];\n\nlet _ = t => t,\n    _t,\n    _t2;\n\nimport React, { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { commonLayoutCSS } from '../../utils/common';\nimport { OverflowShadow, useOverflow } from '../../../utils';\nimport { Section } from '../Section';\nconst hasAsideCSS = css(_t || (_t = _`\n  flex-direction: row;\n  & > ${0} {\n    width: 0;\n  }\n`), Section);\nconst LayoutLayout = forwardRef((_ref, forwardedRef) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const [hasOverflow, ref] = useOverflow(forwardedRef);\n  return React.createElement(OverflowShadow, _extends({\n    hasOverflow: hasOverflow,\n    ref: ref\n  }, props), children);\n});\nLayoutLayout.displayName = 'LayoutLayout';\nexport const Layout = styled(LayoutLayout).withConfig({\n  displayName: \"Layout\",\n  componentId: \"sc-vtli68-0\"\n})(_t2 || (_t2 = _`\n  ${0}\n  display: flex;\n  flex: 1 1 auto;\n  overflow: ${0};\n  ${0}\n`), commonLayoutCSS, _ref2 => {\n  let {\n    fixed\n  } = _ref2;\n  return fixed ? 'hidden' : 'auto';\n}, _ref3 => {\n  let {\n    hasAside\n  } = _ref3;\n  return hasAside ? hasAsideCSS : 'flex-direction: column;';\n});","map":{"version":3,"mappings":";;;;;;;;AAMA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,gBAA5C;AACA,SAASC,OAAT,QAAwB,YAAxB;AAiBA,MAAMC,WAAW,GAAGL,GAAG,cAAC;AACxB;AACA,QAAM,CAAU;AAChB;AACA;AACA,CALuB,GAEfI,OAFe,CAAvB;AAOA,MAAME,YAAY,GAAGR,UAAU,CAC7B,OAAsCS,YAAtC,KAA4E;EAAA,IAA3E;IAAEC;EAAF,IAAmCC,IAAwC;EAAA,IAA5DC,KAAK,4CAAuD;;EAC1E,MAAM,CAACC,WAAD,EAAcC,GAAd,IAAqBT,WAAW,CAACI,YAAD,CAAtC;EAEA,OACEV,oBAACK,cAAD,EAAeW;IAACF,WAAW,EAAEA,WAAd;IAA2BC,GAAG,EAAEA;EAAhC,GAAyCF,KAAzC,CAAf,EACGF,QADH,CADF;AAKD,CAT4B,CAA/B;AAYAF,YAAY,CAACQ,WAAbR,GAA2B,cAA3BA;AAEA,OAAO,MAAMS,MAAM,GAAGhB,MAAM,CAACO,YAAD,CAANP,CAAoBiB,UAApBjB,CAAoB;EAAAe;EAAAG;AAAA,CAApBlB,EAAoBmB,eAAC;AAC3C,IAAE,CAAkB;AACpB;AACA;AACA,cAAY,CAA6C;AACzD,IAAE,CAAyE;AAC3E,CAN0C,CAApBnB,EAClBE,eADkBF,EAIR;EAAA,IAAC;IAAEoB;EAAF,CAAD;EAAA,OAAgBA,KAAK,GAAG,QAAH,GAAc,MAAnC;AAAA,CAJQpB,EAKlB;EAAA,IAAC;IAAEqB;EAAF,CAAD;EAAA,OAAmBA,QAAQ,GAAGf,WAAH,GAAiB,yBAA5C;AAAA,CALkBN,CAAf","names":["React","forwardRef","styled","css","commonLayoutCSS","OverflowShadow","useOverflow","Section","hasAsideCSS","LayoutLayout","forwardedRef","children","_ref","props","hasOverflow","ref","_extends","displayName","Layout","withConfig","componentId","_t2","fixed","hasAside"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Layout/Semantics/Layout/Layout.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport type { CompatibleHTMLProps } from '@looker/design-tokens'\nimport styled, { css } from 'styled-components'\nimport type { CommonLayoutProps } from '../../utils/common'\nimport { commonLayoutCSS } from '../../utils/common'\nimport { OverflowShadow, useOverflow } from '../../../utils'\nimport { Section } from '../Section'\n\nexport interface LayoutProps\n  extends CommonLayoutProps,\n    CompatibleHTMLProps<HTMLElement> {\n  /**\n   * fixed position for header and footer\n   * @default false\n   */\n  fixed?: boolean\n  /**\n   * Supports scroll\n   * @default true\n   */\n  hasAside?: boolean\n}\n\nconst hasAsideCSS = css`\n  flex-direction: row;\n  & > ${Section} {\n    width: 0;\n  }\n`\n\nconst LayoutLayout = forwardRef(\n  ({ children, ...props }: LayoutProps, forwardedRef: Ref<HTMLDivElement>) => {\n    const [hasOverflow, ref] = useOverflow(forwardedRef)\n\n    return (\n      <OverflowShadow hasOverflow={hasOverflow} ref={ref} {...props}>\n        {children}\n      </OverflowShadow>\n    )\n  }\n)\n\nLayoutLayout.displayName = 'LayoutLayout'\n\nexport const Layout = styled(LayoutLayout)`\n  ${commonLayoutCSS}\n  display: flex;\n  flex: 1 1 auto;\n  overflow: ${({ fixed }) => (fixed ? 'hidden' : 'auto')};\n  ${({ hasAside }) => (hasAside ? hasAsideCSS : 'flex-direction: column;')}\n`\n"]},"metadata":{},"sourceType":"module"}