{"ast":null,"code":"import chunk from 'lodash/chunk';\nimport { coreColors, derivativeColors, intentColors, specifiableTextColors, textColors, uiColors } from '../';\nexport const colorBreakdown = colors => {\n  const divided = {\n    core: {},\n    derivative: {},\n    intent: {},\n    specializedText: {},\n    stateful: {},\n    text: {},\n    ui: {}\n  };\n\n  for (const [key, value] of Object.entries(colors)) {\n    if (coreColors.includes(key)) {\n      if (key !== 'pageBackground') {\n        divided.core[key] = value;\n      }\n    } else if (intentColors.includes(key)) {\n      divided.intent[key] = value;\n    } else if (derivativeColors.includes(key)) {\n      divided.derivative[key] = value;\n    } else if (textColors.includes(key)) {\n      divided.text[key] = value;\n    } else if (uiColors.includes(key)) {\n      divided.ui[key] = value;\n    } else if (specifiableTextColors.includes(key)) {\n      divided.specializedText[key] = value;\n    } else {\n      divided.stateful[key] = value;\n    }\n  }\n\n  const statefulColorGroups = chunk(Object.entries(divided.stateful), 7).map(chunk => {\n    const obj = {};\n    chunk.forEach(_ref => {\n      let [name, color] = _ref;\n      return obj[name] = color;\n    });\n    return obj;\n  });\n  return {\n    divided,\n    statefulColorGroups\n  };\n};","map":{"version":3,"mappings":"AAKA,OAAOA,KAAP,MAAkB,cAAlB;AAEA,SACEC,UADF,EAEEC,gBAFF,EAGEC,YAHF,EAIEC,qBAJF,EAKEC,UALF,EAMEC,QANF,QAOO,KAPP;AA4BA,OAAO,MAAMC,cAAc,GAAIC,MAAc,IAAqB;EAChE,MAAMC,OAAsB,GAAG;IAC7BC,IAAI,EAAE,EADuB;IAE7BC,UAAU,EAAE,EAFiB;IAG7BC,MAAM,EAAE,EAHqB;IAI7BC,eAAe,EAAE,EAJY;IAK7BC,QAAQ,EAAE,EALmB;IAM7BC,IAAI,EAAE,EANuB;IAO7BC,EAAE,EAAE;EAPyB,CAA/B;;EAUA,KAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAPD,CAAeX,MAAfW,CAA3B,EAAmD;IACjD,IAAKlB,UAAU,CAAcoB,QAAxBpB,CAAiCgB,GAAjChB,CAAL,EAA4C;MAC1C,IAAIgB,GAAG,KAAK,gBAAZ,EAA8B;QAC5BR,OAAO,CAACC,IAARD,CAAaQ,GAAbR,IAAoBS,KAApBT;MACF;IACD,CAJD,MAIO,IAAKN,YAAY,CAAckB,QAA1BlB,CAAmCc,GAAnCd,CAAL,EAA8C;MACnDM,OAAO,CAACG,MAARH,CAAeQ,GAAfR,IAAsBS,KAAtBT;IACD,CAFM,MAEA,IAAKP,gBAAgB,CAAcmB,QAA9BnB,CAAuCe,GAAvCf,CAAL,EAAkD;MACvDO,OAAO,CAACE,UAARF,CAAmBQ,GAAnBR,IAA0BS,KAA1BT;IACD,CAFM,MAEA,IAAKJ,UAAU,CAAcgB,QAAxBhB,CAAiCY,GAAjCZ,CAAL,EAA4C;MACjDI,OAAO,CAACM,IAARN,CAAaQ,GAAbR,IAAoBS,KAApBT;IACD,CAFM,MAEA,IAAKH,QAAQ,CAAce,QAAtBf,CAA+BW,GAA/BX,CAAL,EAA0C;MAC/CG,OAAO,CAACO,EAARP,CAAWQ,GAAXR,IAAkBS,KAAlBT;IACD,CAFM,MAEA,IAAKL,qBAAqB,CAAciB,QAAnCjB,CAA4Ca,GAA5Cb,CAAL,EAAuD;MAC5DK,OAAO,CAACI,eAARJ,CAAwBQ,GAAxBR,IAA+BS,KAA/BT;IACD,CAFM,MAEA;MACLA,OAAO,CAACK,QAARL,CAAiBQ,GAAjBR,IAAwBS,KAAxBT;IACF;EACF;;EAEA,MAAMa,mBAAwC,GAAGtB,KAAK,CACpDmB,MAAM,CAACC,OAAPD,CAAeV,OAAO,CAACK,QAAvBK,CADoD,EAEpD,CAFoD,CAALnB,CAG/CuB,GAH+CvB,CAG3CA,KAAK,IAAI;IACb,MAAMwB,GAA8B,GAAG,EAAvC;IACAxB,KAAK,CAACyB,OAANzB,CAAc;MAAA,IAAC,CAAC0B,IAAD,EAAOC,KAAP,CAAD;MAAA,OAAoBH,GAAG,CAACE,IAAD,CAAHF,GAAYG,KAAhC;IAAA,CAAd3B;IACA,OAAOwB,GAAP;EACD,CAPgDxB,CAAjD;EASA,OAAO;IAAES,OAAF;IAAWa;EAAX,CAAP;AACD,CAzCM","names":["chunk","coreColors","derivativeColors","intentColors","specifiableTextColors","textColors","uiColors","colorBreakdown","colors","divided","core","derivative","intent","specializedText","stateful","text","ui","key","value","Object","entries","includes","statefulColorGroups","map","obj","forEach","name","color"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/design-tokens/src/color/utils/colorBreakdown.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport chunk from 'lodash/chunk'\nimport type { Colors } from '../'\nimport {\n  coreColors,\n  derivativeColors,\n  intentColors,\n  specifiableTextColors,\n  textColors,\n  uiColors,\n} from '../'\n\nexport type ColorKey = { [key: string]: string }\n\nexport type StatefulColorGroups = ColorKey[]\n\ntype DividedColors = {\n  core: ColorKey\n  derivative: ColorKey\n  intent: ColorKey\n  specializedText: ColorKey\n  stateful: ColorKey\n  text: ColorKey\n  ui: ColorKey\n}\n\ntype ColorBreakdown = {\n  divided: DividedColors\n  statefulColorGroups: StatefulColorGroups\n}\n\nexport const colorBreakdown = (colors: Colors): ColorBreakdown => {\n  const divided: DividedColors = {\n    core: {},\n    derivative: {},\n    intent: {},\n    specializedText: {},\n    stateful: {},\n    text: {},\n    ui: {},\n  }\n\n  for (const [key, value] of Object.entries(colors)) {\n    if ((coreColors as string[]).includes(key)) {\n      if (key !== 'pageBackground') {\n        divided.core[key] = value\n      }\n    } else if ((intentColors as string[]).includes(key)) {\n      divided.intent[key] = value\n    } else if ((derivativeColors as string[]).includes(key)) {\n      divided.derivative[key] = value\n    } else if ((textColors as string[]).includes(key)) {\n      divided.text[key] = value\n    } else if ((uiColors as string[]).includes(key)) {\n      divided.ui[key] = value\n    } else if ((specifiableTextColors as string[]).includes(key)) {\n      divided.specializedText[key] = value\n    } else {\n      divided.stateful[key] = value\n    }\n  }\n\n  const statefulColorGroups: StatefulColorGroups = chunk(\n    Object.entries(divided.stateful),\n    7\n  ).map(chunk => {\n    const obj: { [key: string]: string } = {}\n    chunk.forEach(([name, color]) => (obj[name] = color))\n    return obj\n  })\n\n  return { divided, statefulColorGroups }\n}\n"]},"metadata":{},"sourceType":"module"}