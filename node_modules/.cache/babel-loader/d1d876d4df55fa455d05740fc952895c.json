{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"color\", \"disabled\", \"density\"];\n\nlet _ = t => t,\n    _t;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport styled, { useTheme } from 'styled-components';\nimport { color as colorHelper } from '@looker/design-tokens';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nimport { IconPlaceholder } from '../Icon';\nimport { listItemDimensions, listItemIconColor, listItemPaddingY } from './utils';\nexport const ListItemIcon = styled.div.attrs(_ref => {\n  let {\n    color,\n    disabled,\n    density\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  const theme = useTheme();\n  const {\n    height,\n    gap,\n    iconSize,\n    py\n  } = listItemDimensions(density || theme.defaults.density);\n  return _objectSpread(_objectSpread({}, props), {}, {\n    color: listItemIconColor(color, disabled),\n    density,\n    gap,\n    height,\n    iconSize,\n    py\n  });\n}).withConfig({\n  displayName: \"ListItemIcon\",\n  componentId: \"sc-12wbh19-0\"\n})(_t || (_t = _`\n  align-self: ${0};\n  display: flex;\n  margin-right: ${0};\n  ${0}\n\n  ${0}\n\n  & > svg, ${0}, ${0} {\n    flex-grow: 0;\n    flex-shrink: 0;\n    height: ${0};\n    width: ${0};\n  }\n`), _ref2 => {\n  let {\n    alignStart\n  } = _ref2;\n  return alignStart ? 'flex-start' : 'center';\n}, _ref3 => {\n  let {\n    gap,\n    theme\n  } = _ref3;\n  return theme.space[gap];\n}, _ref4 => {\n  let {\n    density\n  } = _ref4;\n  return listItemPaddingY(density);\n}, colorHelper, StyledIconBase, IconPlaceholder, _ref5 => {\n  let {\n    iconSize,\n    theme\n  } = _ref5;\n  return theme.sizes[iconSize];\n}, _ref6 => {\n  let {\n    iconSize,\n    theme\n  } = _ref6;\n  return theme.sizes[iconSize];\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,OAAOA,MAAP,IAAiBC,QAAjB,QAAiC,mBAAjC;AAEA,SAASC,KAAK,IAAIC,WAAlB,QAAqC,uBAArC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,gBAHF,QAIO,SAJP;AAgBA,OAAO,MAAMC,YAIZ,GAAGT,MAAM,CAACU,GAAPV,CAAWW,KAAXX,CACFY,QAA4C;EAAA,IAA3C;IAAEV,KAAF;IAASW,QAAT;IAAmBC;EAAnB,IAAsCF,IAAK;EAAA,IAAZG,KAAK,4CAAO;;EAC1C,MAAMC,KAAK,GAAGf,QAAQ,EAAtB;EACA,MAAM;IAAEgB,MAAF;IAAUC,GAAV;IAAeC,QAAf;IAAyBC;EAAzB,IAAgCd,kBAAkB,CACtDQ,OAAO,IAAIE,KAAK,CAACK,QAANL,CAAeF,OAD4B,CAAxD;EAIA,uCACKC,KADL,GACU,EADV,EACU;IACRb,KAAK,EAAEK,iBAAiB,CAACL,KAAD,EAAQW,QAAR,CADhB;IAERC,OAFQ;IAGRI,GAHQ;IAIRD,MAJQ;IAKRE,QALQ;IAMRC;EANQ,CADV;AASD,CAhBCpB,EAiBHsB,UAjBGtB,CAiBH;EAAAuB;EAAAC;AAAA,CAjBGxB,EAiBHyB,aAA4B;AAC7B,gBAAc,CAA6D;AAC3E;AACA,kBAAgB,CAAuC;AACvD,IAAE,CAA6C;AAC/C;AACA,IAAE,CAAc;AAChB;AACA,aAAW,CAAiB,KAAE,CAAkB;AAChD;AACA;AACA,cAAY,CAAiD;AAC7D,aAAW,CAAiD;AAC5D;AACA,CAdC,CAjBGzB,EAkBY;EAAA,IAAC;IAAE0B;EAAF,CAAD;EAAA,OAAqBA,UAAU,GAAG,YAAH,GAAkB,QAAjD;AAAA,CAlBZ1B,EAoBc;EAAA,IAAC;IAAEkB,GAAF;IAAOF;EAAP,CAAD;EAAA,OAAoBA,KAAK,CAACW,KAANX,CAAYE,GAAZF,CAApB;AAAA,CApBdhB,EAqBA;EAAA,IAAC;IAAEc;EAAF,CAAD;EAAA,OAAiBN,gBAAgB,CAACM,OAAD,CAAjC;AAAA,CArBAd,EAuBAG,WAvBAH,EAyBSI,cAzBTJ,EAyB4BK,eAzB5BL,EA4BU;EAAA,IAAC;IAAEmB,QAAF;IAAYH;EAAZ,CAAD;EAAA,OAAyBA,KAAK,CAACY,KAANZ,CAAYG,QAAZH,CAAzB;AAAA,CA5BVhB,EA6BS;EAAA,IAAC;IAAEmB,QAAF;IAAYH;EAAZ,CAAD;EAAA,OAAyBA,KAAK,CAACY,KAANZ,CAAYG,QAAZH,CAAzB;AAAA,CA7BThB,CAJG","names":["styled","useTheme","color","colorHelper","StyledIconBase","IconPlaceholder","listItemDimensions","listItemIconColor","listItemPaddingY","ListItemIcon","div","attrs","_ref","disabled","density","props","theme","height","gap","iconSize","py","defaults","withConfig","displayName","componentId","_t","alignStart","space","sizes"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/ListItem/ListItemIcon.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { DefaultTheme, StyledComponent } from 'styled-components'\nimport styled, { useTheme } from 'styled-components'\nimport type { DensityProp } from '@looker/design-tokens'\nimport { color as colorHelper } from '@looker/design-tokens'\nimport { StyledIconBase } from '@styled-icons/styled-icon'\nimport { IconPlaceholder } from '../Icon'\nimport {\n  listItemDimensions,\n  listItemIconColor,\n  listItemPaddingY,\n} from './utils'\nimport type { ListItemDimensions } from './types'\n\nexport type ListItemIconProps = DensityProp & {\n  color?: string\n  disabled?: boolean\n  alignStart?: boolean\n}\n\ntype ListItemIconInternalProps = ListItemIconProps &\n  Pick<ListItemDimensions, 'height' | 'gap' | 'iconSize' | 'py'>\n\nexport const ListItemIcon: StyledComponent<\n  'div',\n  DefaultTheme,\n  ListItemIconProps\n> = styled.div.attrs<ListItemIconProps>(\n  ({ color, disabled, density, ...props }) => {\n    const theme = useTheme()\n    const { height, gap, iconSize, py } = listItemDimensions(\n      density || theme.defaults.density\n    )\n\n    return {\n      ...props,\n      color: listItemIconColor(color, disabled),\n      density,\n      gap,\n      height,\n      iconSize,\n      py,\n    }\n  }\n)<ListItemIconInternalProps>`\n  align-self: ${({ alignStart }) => (alignStart ? 'flex-start' : 'center')};\n  display: flex;\n  margin-right: ${({ gap, theme }) => theme.space[gap]};\n  ${({ density }) => listItemPaddingY(density)}\n\n  ${colorHelper}\n\n  & > svg, ${StyledIconBase}, ${IconPlaceholder} {\n    flex-grow: 0;\n    flex-shrink: 0;\n    height: ${({ iconSize, theme }) => theme.sizes[iconSize]};\n    width: ${({ iconSize, theme }) => theme.sizes[iconSize]};\n  }\n`\n"]},"metadata":{},"sourceType":"module"}