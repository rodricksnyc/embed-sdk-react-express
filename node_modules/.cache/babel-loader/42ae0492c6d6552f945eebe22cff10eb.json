{"ast":null,"code":"let _ = t => t,\n    _t;\n\nimport { css } from 'styled-components';\nimport { accordionDimensions } from '../../Accordion2/accordionDimensions';\nexport const generateIndentCalculation = (depth, density, theme) => {\n  const {\n    space,\n    sizes\n  } = theme;\n  const {\n    indicatorGap,\n    indicatorSize\n  } = accordionDimensions(density);\n  return `calc((${sizes[indicatorSize]} + ${space[indicatorGap]}) * ${depth})`;\n};\nexport const generateIndent = _ref => {\n  let {\n    depth: _depth = 0,\n    density\n  } = _ref;\n  return css(_t || (_t = _`\n  padding-left: ${0};\n`), _ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return generateIndentCalculation(_depth, density || theme.defaults.density, theme);\n  });\n};","map":{"version":3,"mappings":";;;AAMA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,mBAAT,QAAoC,sCAApC;AAMA,OAAO,MAAMC,yBAAyB,GAAG,CACvCC,KADuC,EAEvCC,OAFuC,EAGvCC,KAHuC,KAIpC;EACH,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAmBF,KAAzB;EACA,MAAM;IAAEG,YAAF;IAAgBC;EAAhB,IAAkCR,mBAAmB,CAACG,OAAD,CAA3D;EAEA,OAAQ,SAAQG,KAAK,CAACE,aAAD,CAAgB,MAAKH,KAAK,CAACE,YAAD,CAAe,OAAML,KAAM,GAA1E;AACD,CATM;AAWP,OAAO,MAAMO,cAAc,GAAG;EAAA,IAAC;IAC7BP,KAAK,EAALA,MAAK,GAAG,CADqB;IAE7BC;EAF6B,CAAD;EAAA,OAGHJ,GAAG,cAAC;AAC/B,kBAAgB,CAC+D;AAC/E,CAH8B,GACZ;IAAA,IAAC;MAAEK;IAAF,CAAD;IAAA,OACdH,yBAAyB,CAACC,MAAD,EAAQC,OAAO,IAAIC,KAAK,CAACM,QAANN,CAAeD,OAAlC,EAA2CC,KAA3C,CADX;EAAA,CADY,CAHA;AAAA,CAAvB","names":["css","accordionDimensions","generateIndentCalculation","depth","density","theme","space","sizes","indicatorGap","indicatorSize","generateIndent","defaults"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Tree/utils/generateIndent.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { DensityProp, DensityRamp, Theme } from '@looker/design-tokens'\nimport { css } from 'styled-components'\nimport { accordionDimensions } from '../../Accordion2/accordionDimensions'\n\nexport type GenerateIndentProps = DensityProp & {\n  depth?: number\n}\n\nexport const generateIndentCalculation = (\n  depth: number,\n  density: DensityRamp,\n  theme: Theme\n) => {\n  const { space, sizes } = theme\n  const { indicatorGap, indicatorSize } = accordionDimensions(density)\n\n  return `calc((${sizes[indicatorSize]} + ${space[indicatorGap]}) * ${depth})`\n}\n\nexport const generateIndent = ({\n  depth = 0,\n  density,\n}: GenerateIndentProps) => css`\n  padding-left: ${({ theme }) =>\n    generateIndentCalculation(depth, density || theme.defaults.density, theme)};\n`\n"]},"metadata":{},"sourceType":"module"}