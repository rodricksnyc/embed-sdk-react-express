{"ast":null,"code":"import React, { useContext } from 'react';\nimport { InputTextContent } from '../../Inputs/InputText';\nimport { ComboboxContext } from '../Combobox';\nexport function getOptionIcon(value, options) {\n  if (value && options) {\n    const option = options.find(opt => opt.value === value);\n    return option !== null && option !== void 0 && option.icon ? React.createElement(InputTextContent, {\n      pl: \"u2\"\n    }, option.icon) : null;\n  }\n\n  return null;\n}\nexport const SelectInputIcon = _ref => {\n  let {\n    options\n  } = _ref;\n  const {\n    data: {\n      option,\n      inputValue\n    }\n  } = useContext(ComboboxContext);\n  if (!options || !option) return null;\n  if (option.label !== inputValue) return null;\n  return getOptionIcon(option.value, options);\n};","map":{"version":3,"mappings":"AAKA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,eAAT,QAAgC,aAAhC;AAGA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAAsCC,OAAtC,EAAqE;EAC1E,IAAID,KAAK,IAAIC,OAAb,EAAsB;IACpB,MAAMC,MAAM,GAAGD,OAAO,CAACE,IAARF,CAAaG,GAAG,IAAIA,GAAG,CAACJ,KAAJI,KAAcJ,KAAlCC,CAAf;IACA,OAAOC,MAAM,SAANA,UAAM,WAANA,UAAM,CAAEG,IAARH,GACLP,oBAACE,gBAAD,EAAiB;MAACS,EAAE,EAAC;IAAJ,CAAjB,EAA2BJ,MAAM,CAACG,IAAlC,CADKH,GAEH,IAFJ;EAGF;;EACA,OAAO,IAAP;AACF;AAMA,OAAO,MAAMK,eAAe,GAAG,QAAuC;EAAA,IAAtC;IAAEN;EAAF,CAAsC;EACpE,MAAM;IACJO,IAAI,EAAE;MAAEN,MAAF;MAAUO;IAAV;EADF,IAEFb,UAAU,CAACE,eAAD,CAFd;EAGA,IAAI,CAACG,OAAD,IAAY,CAACC,MAAjB,EAAyB,OAAO,IAAP;EAEzB,IAAIA,MAAM,CAACQ,KAAPR,KAAiBO,UAArB,EAAiC,OAAO,IAAP;EAEjC,OAAOV,aAAa,CAACG,MAAM,CAACF,KAAR,EAAeC,OAAf,CAApB;AACD,CATM","names":["React","useContext","InputTextContent","ComboboxContext","getOptionIcon","value","options","option","find","opt","icon","pl","SelectInputIcon","data","inputValue","label"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Form/Inputs/Select/SelectInputIcon.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useContext } from 'react'\nimport { InputTextContent } from '../../Inputs/InputText'\nimport { ComboboxContext } from '../Combobox'\nimport type { SelectOptionObject } from './types'\n\nexport function getOptionIcon(value: string, options: SelectOptionObject[]) {\n  if (value && options) {\n    const option = options.find(opt => opt.value === value)\n    return option?.icon ? (\n      <InputTextContent pl=\"u2\">{option.icon}</InputTextContent>\n    ) : null\n  }\n  return null\n}\n\nexport interface SelectInputIconProps {\n  options?: SelectOptionObject[]\n}\n\nexport const SelectInputIcon = ({ options }: SelectInputIconProps) => {\n  const {\n    data: { option, inputValue },\n  } = useContext(ComboboxContext)\n  if (!options || !option) return null\n  // Don't show the icon if the user is filtering\n  if (option.label !== inputValue) return null\n\n  return getOptionIcon(option.value, options)\n}\n"]},"metadata":{},"sourceType":"module"}