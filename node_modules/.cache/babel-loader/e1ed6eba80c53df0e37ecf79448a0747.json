{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nlet _ = t => t,\n    _t;\n\nconst _excluded = [\"onChange\", \"value\"];\nimport xor from 'lodash/xor';\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { ButtonItem } from './ButtonItem';\nimport { ButtonSet } from './ButtonSet';\nconst ButtonGroupLayout = forwardRef((_ref, ref) => {\n  let {\n    onChange,\n    value = []\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  function handleItemClick(e) {\n    const newValue = xor(value, [e.currentTarget.value]);\n\n    if (onChange) {\n      onChange(newValue);\n    }\n  }\n\n  return React.createElement(ButtonSet, _extends({}, props, {\n    ref: ref,\n    value: value,\n    onItemClick: handleItemClick\n  }));\n});\nexport const ButtonGroup = styled(ButtonGroupLayout).withConfig({\n  displayName: \"ButtonGroup\",\n  componentId: \"sc-13avdmz-0\"\n})(_t || (_t = _`\n  ${0} {\n    border: 1px solid ${0};\n    border-radius: ${0};\n    margin-right: ${0};\n    &:last-child {\n      margin-right: 0;\n    }\n\n    &[aria-pressed='false']:not(:hover) {\n      background: ${0};\n    }\n  }\n  &.wrapping {\n    margin: -${0};\n    ${0} {\n      margin: ${0};\n    }\n  }\n`), ButtonItem, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.ui3;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.radii.medium;\n}, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.space.u1;\n}, _ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.colors.background;\n}, _ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.space.u05;\n}, ButtonItem, _ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.space.u05;\n});","map":{"version":3,"mappings":";;;;;;;AAKA,OAAOA,GAAP,MAAgB,YAAhB;AAEA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,iBAAiB,GAAGJ,UAAU,CAClC,OAEEK,GAFF,KAGK;EAAA,IAFH;IAAEC,QAAF;IAAYC,KAAK,GAAG;EAApB,IAAgEC,IAE7D;EAAA,IAFwBC,KAAK,4CAE7B;;EACH,SAASC,eAAT,CAAyBC,CAAzB,EAA2D;IACzD,MAAMC,QAAQ,GAAGd,GAAG,CAACS,KAAD,EAAQ,CAACI,CAAC,CAACE,aAAFF,CAAgBJ,KAAjB,CAAR,CAApB;;IACA,IAAID,QAAJ,EAAc;MACZA,QAAQ,CAACM,QAAD,CAARN;IACF;EACF;;EAEA,OACEP,oBAACI,SAAD,EAAUW,aACJL,KADI,EACC;IACTJ,GAAG,EAAEA,GADI;IAETE,KAAK,EAAEA,KAFE;IAGTQ,WAAW,EAAEL;EAHJ,CADD,CAAV,CADF;AAQD,CApBiC,CAApC;AAuBA,OAAO,MAAMM,WAAW,GAAGf,MAAM,CAACG,iBAAD,CAANH,CAAyBgB,UAAzBhB,CAAyB;EAAAiB;EAAAC;AAAA,CAAzBlB,EAAyBmB,aAAC;AACrD,IAAE,CAAa;AACf,wBAAsB,CAAkC;AACxD,qBAAmB,CAAoC;AACvD,oBAAkB,CAAgC;AAClD;AACA;AACA;AACA;AACA;AACA,oBAAkB,CAAyC;AAC3D;AACA;AACA;AACA,eAAa,CAAiC;AAC9C,MAAI,CAAa;AACjB,gBAAc,CAAiC;AAC/C;AACA;AACA,CAnBoD,CAAzBnB,EACvBC,UADuBD,EAEH;EAAA,IAAC;IAAEoB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,MAAND,CAAaE,GAA5B;AAAA,CAFGtB,EAGN;EAAA,IAAC;IAAEoB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACG,KAANH,CAAYI,MAA3B;AAAA,CAHMxB,EAIP;EAAA,IAAC;IAAEoB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACK,KAANL,CAAYM,EAA3B;AAAA,CAJO1B,EAUP;EAAA,IAAC;IAAEoB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,MAAND,CAAaO,UAA5B;AAAA,CAVO3B,EAcZ;EAAA,IAAC;IAAEoB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACK,KAANL,CAAYQ,GAA3B;AAAA,CAdY5B,EAerBC,UAfqBD,EAgBX;EAAA,IAAC;IAAEoB;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACK,KAANL,CAAYQ,GAA3B;AAAA,CAhBW5B,CAApB","names":["xor","React","forwardRef","styled","ButtonItem","ButtonSet","ButtonGroupLayout","ref","onChange","value","_ref","props","handleItemClick","e","newValue","currentTarget","_extends","onItemClick","ButtonGroup","withConfig","displayName","componentId","_t","theme","colors","ui3","radii","medium","space","u1","background","u05"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/Button/ButtonGroup.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport xor from 'lodash/xor'\nimport type { MouseEvent, Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { ButtonItem } from './ButtonItem'\nimport type { ButtonGroupOrToggleBaseProps } from './ButtonSet'\nimport { ButtonSet } from './ButtonSet'\n\nconst ButtonGroupLayout = forwardRef(\n  (\n    { onChange, value = [], ...props }: ButtonGroupOrToggleBaseProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    function handleItemClick(e: MouseEvent<HTMLButtonElement>) {\n      const newValue = xor(value, [e.currentTarget.value])\n      if (onChange) {\n        onChange(newValue)\n      }\n    }\n\n    return (\n      <ButtonSet\n        {...props}\n        ref={ref}\n        value={value}\n        onItemClick={handleItemClick}\n      />\n    )\n  }\n)\n\nexport const ButtonGroup = styled(ButtonGroupLayout)`\n  ${ButtonItem} {\n    border: 1px solid ${({ theme }) => theme.colors.ui3};\n    border-radius: ${({ theme }) => theme.radii.medium};\n    margin-right: ${({ theme }) => theme.space.u1};\n    &:last-child {\n      margin-right: 0;\n    }\n\n    &[aria-pressed='false']:not(:hover) {\n      background: ${({ theme }) => theme.colors.background};\n    }\n  }\n  &.wrapping {\n    margin: -${({ theme }) => theme.space.u05};\n    ${ButtonItem} {\n      margin: ${({ theme }) => theme.space.u05};\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}