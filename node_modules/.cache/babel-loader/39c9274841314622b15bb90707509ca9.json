{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nlet _ = t => t,\n    _t;\n\nimport styled from 'styled-components';\nimport React, { useState } from 'react';\nimport { BulkActions } from './BulkActions';\nimport { DataTableContext } from './DataTableContext';\nimport { DataTableFilters } from './Filters/DataTableFilters';\nimport { Table } from './Table';\nimport { allItemsSelected } from './utils/allItemsSelected';\nexport const DataTableLayout = props => {\n  const {\n    bulk,\n    className,\n    caption,\n    columns,\n    filters: filterInput,\n    firstColumnStuck: explicitFirstColumnStuck,\n    onSort,\n    select\n  } = props;\n  const columnsVisibleDefault = columns.filter(c => c.hide === false).map(c => c.id);\n  const [columnsVisible, setColumnsVisible] = useState(columnsVisibleDefault);\n  const columnsDisplayState = columns.map(c => c.hide === undefined || columnsVisible.includes(c.id));\n  let firstColumnStuck = Boolean(select);\n\n  if (columnsDisplayState[0] === false) {\n    firstColumnStuck = false;\n  } else if (explicitFirstColumnStuck !== undefined) {\n    firstColumnStuck = explicitFirstColumnStuck;\n  }\n\n  const context = {\n    allSelected: allItemsSelected(select),\n    columns,\n    columnsDisplayState,\n    onSort,\n    select\n  };\n  const filters = filterInput && React.createElement(DataTableFilters, {\n    columns: columns,\n    columnsVisible: columnsVisible,\n    onColumnVisibilityChange: setColumnsVisible\n  }, filterInput);\n  return React.createElement(DataTableContext.Provider, {\n    value: context\n  }, React.createElement(\"div\", {\n    className: className\n  }, filters, bulk && select && select.selectedItems.length > 0 && React.createElement(BulkActions, bulk), React.createElement(Table, _extends({}, props, {\n    caption: caption,\n    columns: columns,\n    columnsVisible: columnsVisible,\n    firstColumnStuck: firstColumnStuck\n  }))));\n};\nexport const DataTable = styled(DataTableLayout).withConfig({\n  displayName: \"DataTable\",\n  componentId: \"sc-mgms8t-0\"\n})(_t || (_t = _`\n  width: 100%;\n`));","map":{"version":3,"mappings":";;;;;AA0BA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAqB,IAAK;EACxD,MAAM;IACJC,IADI;IAEJC,SAFI;IAGJC,OAHI;IAIJC,OAJI;IAKJC,OAAO,EAAEC,WALL;IAMJC,gBAAgB,EAAEC,wBANd;IAOJC,MAPI;IAQJC;EARI,IASFV,KATJ;EAcA,MAAMW,qBAAqB,GAAGP,OAAO,CAClCQ,MAD2BR,CACpBS,CAAC,IAAIA,CAAC,CAACC,IAAFD,KAAW,KADIT,EAE3BW,GAF2BX,CAEvBS,CAAC,IAAIA,CAAC,CAACG,EAFgBZ,CAA9B;EAOA,MAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAACkB,qBAAD,CAApD;EAMA,MAAMQ,mBAAmB,GAAGf,OAAO,CAACW,GAARX,CAC1BS,CAAC,IAAIA,CAAC,CAACC,IAAFD,KAAWO,SAAXP,IAAwBI,cAAc,CAACI,QAAfJ,CAAwBJ,CAAC,CAACG,EAA1BC,CADHb,CAA5B;EAaA,IAAIG,gBAAgB,GAAGe,OAAO,CAACZ,MAAD,CAA9B;;EACA,IAAIS,mBAAmB,CAAC,CAAD,CAAnBA,KAA2B,KAA/B,EAAsC;IACpCZ,gBAAgB,GAAG,KAAnBA;EACD,CAFD,MAEO,IAAIC,wBAAwB,KAAKY,SAAjC,EAA4C;IACjDb,gBAAgB,GAAGC,wBAAnBD;EACF;;EAEA,MAAMgB,OAAO,GAAG;IACdC,WAAW,EAAE1B,gBAAgB,CAACY,MAAD,CADf;IAEdN,OAFc;IAGde,mBAHc;IAIdV,MAJc;IAKdC;EALc,CAAhB;EAQA,MAAML,OAAO,GAAGC,WAAW,IACzBd,oBAACI,gBAAD,EAAiB;IACfQ,OAAO,EAAEA,OADM;IAEfa,cAAc,EAAEA,cAFD;IAGfQ,wBAAwB,EAAEP;EAHX,CAAjB,EAKGZ,WALH,CADF;EAUA,OACEd,oBAACG,gBAAgB,CAAC+B,QAAlB,EAA0B;IAACC,KAAK,EAAEJ;EAAR,CAA1B,EACE/B;IAAKU,SAAS,EAAEA;EAAhB,GACGG,OADH,EAEGJ,IAAI,IAAIS,MAART,IAAkBS,MAAM,CAACkB,aAAPlB,CAAqBmB,MAArBnB,GAA8B,CAAhDT,IACCT,oBAACE,WAAD,EAAiBO,IAAjB,CAHJ,EAKET,oBAACK,KAAD,EAAMiC,aACA9B,KADA,EACK;IACTG,OAAO,EAAEA,OADA;IAETC,OAAO,EAAEA,OAFA;IAGTa,cAAc,EAAEA,cAHP;IAITV,gBAAgB,EAAEA;EAJT,CADL,CAAN,CALF,CADF,CADF;AAiBD,CAnFM;AAqFP,OAAO,MAAMwB,SAAS,GAAGxC,MAAM,CAACQ,eAAD,CAANR,CAAuByC,UAAvBzC,CAAuB;EAAA0C;EAAAC;AAAA,CAAvB3C,EAAuB4C,aAAiB;AACjE;AACA,CAFgD,CAAvB5C,CAAlB","names":["styled","React","useState","BulkActions","DataTableContext","DataTableFilters","Table","allItemsSelected","DataTableLayout","props","bulk","className","caption","columns","filters","filterInput","firstColumnStuck","explicitFirstColumnStuck","onSort","select","columnsVisibleDefault","filter","c","hide","map","id","columnsVisible","setColumnsVisible","columnsDisplayState","undefined","includes","Boolean","context","allSelected","onColumnVisibilityChange","Provider","value","selectedItems","length","_extends","DataTable","withConfig","displayName","componentId","_t"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/DataTable/DataTable.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport styled from 'styled-components'\nimport React, { useState } from 'react'\nimport { BulkActions } from './BulkActions'\nimport { DataTableContext } from './DataTableContext'\nimport { DataTableFilters } from './Filters/DataTableFilters'\nimport { Table } from './Table'\nimport type { DataTableProps } from './types'\nimport { allItemsSelected } from './utils/allItemsSelected'\n\nexport const DataTableLayout = (props: DataTableProps) => {\n  const {\n    bulk,\n    className,\n    caption,\n    columns,\n    filters: filterInput,\n    firstColumnStuck: explicitFirstColumnStuck,\n    onSort,\n    select,\n  } = props\n\n  /**\n   * Extract columns that the user can specify visibility on\n   */\n  const columnsVisibleDefault = columns\n    .filter(c => c.hide === false)\n    .map(c => c.id)\n\n  /**\n   * An array of column IDs that should be displayed to the user\n   */\n  const [columnsVisible, setColumnsVisible] = useState(columnsVisibleDefault)\n\n  /**\n   * Array in which each entry represents the visibility status of every available column\n   * NOTE: Columns with `hide===undefined` are always visible\n   */\n  const columnsDisplayState = columns.map(\n    c => c.hide === undefined || columnsVisible.includes(c.id)\n  )\n\n  /**\n   * Deciding if the first column of the table should be stuck is slightly complex.\n   *\n   * 1. If the first column is hidden, FALSE (stops evaluating)\n   * 2. If the developer has explicitly specified firstColumnStuck use that value (stops evaluating)\n   * 3. Use whether `select` feature is active (TRUE|FALSE)\n   *\n   */\n\n  let firstColumnStuck = Boolean(select)\n  if (columnsDisplayState[0] === false) {\n    firstColumnStuck = false\n  } else if (explicitFirstColumnStuck !== undefined) {\n    firstColumnStuck = explicitFirstColumnStuck\n  }\n\n  const context = {\n    allSelected: allItemsSelected(select),\n    columns,\n    columnsDisplayState,\n    onSort,\n    select,\n  }\n\n  const filters = filterInput && (\n    <DataTableFilters\n      columns={columns}\n      columnsVisible={columnsVisible}\n      onColumnVisibilityChange={setColumnsVisible}\n    >\n      {filterInput}\n    </DataTableFilters>\n  )\n\n  return (\n    <DataTableContext.Provider value={context}>\n      <div className={className}>\n        {filters}\n        {bulk && select && select.selectedItems.length > 0 && (\n          <BulkActions {...bulk} />\n        )}\n        <Table\n          {...props}\n          caption={caption}\n          columns={columns}\n          columnsVisible={columnsVisible}\n          firstColumnStuck={firstColumnStuck}\n        />\n      </div>\n    </DataTableContext.Provider>\n  )\n}\n\nexport const DataTable = styled(DataTableLayout)<DataTableProps>`\n  width: 100%;\n`\n"]},"metadata":{},"sourceType":"module"}