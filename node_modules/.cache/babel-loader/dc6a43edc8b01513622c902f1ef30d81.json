{"ast":null,"code":"let _ = t => t,\n    _t,\n    _t2;\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CircleContainer } from './ProgressSvg';\nimport { progressCircularSVG } from './size';\nexport const DeterminateProgress = _ref => {\n  let {\n    size,\n    progress: _progress = 0\n  } = _ref;\n  const {\n    stroke,\n    half,\n    radius,\n    dashArray\n  } = progressCircularSVG({\n    size\n  });\n  const progressOffset = (1 - _progress) * (2 * Math.PI * radius);\n  return React.createElement(DeterminateContainer, null, React.createElement(CircleContainer, {\n    viewBox: `0 0 ${half * 2} ${half * 2}`,\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, React.createElement(DeterminateCircle, {\n    cx: half,\n    cy: half,\n    r: radius,\n    strokeDasharray: dashArray,\n    strokeDashoffset: progressOffset,\n    strokeWidth: stroke\n  })));\n};\nconst DeterminateContainer = styled.div.withConfig({\n  displayName: \"DeterminateProgress__DeterminateContainer\",\n  componentId: \"sc-yb0ja2-0\"\n})(_t || (_t = _`\n  height: 100%;\n  position: absolute;\n  transform: rotate(-90deg);\n  width: 100%;\n`));\nconst DeterminateCircle = styled.circle.withConfig({\n  displayName: \"DeterminateProgress__DeterminateCircle\",\n  componentId: \"sc-yb0ja2-1\"\n})(_t2 || (_t2 = _`\n  stroke: ${0};\n  transition: stroke-dashoffset 500ms;\n`), _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.key;\n});","map":{"version":3,"mappings":";;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,SAASC,mBAAT,QAAoC,QAApC;AAOA,OAAO,MAAMC,mBAAmB,GAAG,QAGH;EAAA,IAHI;IAClCC,IADkC;IAElCC,QAAQ,EAARA,SAAQ,GAAG;EAFuB,CAGJ;EAC9B,MAAM;IAAEC,MAAF;IAAUC,IAAV;IAAgBC,MAAhB;IAAwBC;EAAxB,IAAsCP,mBAAmB,CAAC;IAAEE;EAAF,CAAD,CAA/D;EAEA,MAAMM,cAAc,GAAG,CAAC,IAAIL,SAAL,KAAkB,IAAIM,IAAI,CAACC,EAAT,GAAcJ,MAAhC,CAAvB;EAEA,OACET,oBAACc,oBAAD,EAAqB,IAArB,EACEd,oBAACE,eAAD,EAAgB;IACda,OAAO,EAAG,OAAMP,IAAI,GAAG,CAAE,IAAGA,IAAI,GAAG,CAAE,EADvB;IAEdQ,KAAK,EAAC;EAFQ,CAAhB,EAIEhB,oBAACiB,iBAAD,EAAkB;IAChBC,EAAE,EAAEV,IADY;IAEhBW,EAAE,EAAEX,IAFY;IAGhBY,CAAC,EAAEX,MAHa;IAIhBY,eAAe,EAAEX,SAJD;IAKhBY,gBAAgB,EAAEX,cALF;IAMhBY,WAAW,EAAEhB;EANG,CAAlB,CAJF,CADF,CADF;AAiBD,CAzBM;AA2BP,MAAMO,oBAAoB,GAAGb,MAAM,CAACuB,GAAPvB,CAAUwB,UAAVxB,CAAU;EAAAyB;EAAAC;AAAA,CAAV1B,EAAU2B,aAAC;AACxC;AACA;AACA;AACA;AACA,CALuC,CAAV3B,CAA7B;AAOA,MAAMgB,iBAAiB,GAAGhB,MAAM,CAAC4B,MAAP5B,CAAawB,UAAbxB,CAAa;EAAAyB;EAAAC;AAAA,CAAb1B,EAAa6B,eAAC;AACxC,YAAU,CAAkC;AAC5C;AACA,CAHuC,CAAb7B,EACd;EAAA,IAAC;IAAE8B;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACC,MAAND,CAAaE,GAA5B;AAAA,CADchC,CAA1B","names":["React","styled","CircleContainer","progressCircularSVG","DeterminateProgress","size","progress","stroke","half","radius","dashArray","progressOffset","Math","PI","DeterminateContainer","viewBox","xmlns","DeterminateCircle","cx","cy","r","strokeDasharray","strokeDashoffset","strokeWidth","div","withConfig","displayName","componentId","_t","circle","_t2","theme","colors","key"],"sources":["/Users/elizabethrodricks/Downloads/express-react-starter-master/node_modules/@looker/components/src/ProgressCircular/DeterminateProgress.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { CircleContainer } from './ProgressSvg'\nimport type { ProgressCircularSizes } from './size'\nimport { progressCircularSVG } from './size'\n\ninterface DeterminateProgressProps {\n  size: ProgressCircularSizes\n  progress?: number\n}\n\nexport const DeterminateProgress = ({\n  size,\n  progress = 0,\n}: DeterminateProgressProps) => {\n  const { stroke, half, radius, dashArray } = progressCircularSVG({ size })\n\n  const progressOffset = (1 - progress) * (2 * Math.PI * radius)\n\n  return (\n    <DeterminateContainer>\n      <CircleContainer\n        viewBox={`0 0 ${half * 2} ${half * 2}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <DeterminateCircle\n          cx={half}\n          cy={half}\n          r={radius}\n          strokeDasharray={dashArray}\n          strokeDashoffset={progressOffset}\n          strokeWidth={stroke}\n        />\n      </CircleContainer>\n    </DeterminateContainer>\n  )\n}\n\nconst DeterminateContainer = styled.div`\n  height: 100%;\n  position: absolute;\n  transform: rotate(-90deg);\n  width: 100%;\n`\n\nconst DeterminateCircle = styled.circle`\n  stroke: ${({ theme }) => theme.colors.key};\n  transition: stroke-dashoffset 500ms;\n`\n"]},"metadata":{},"sourceType":"module"}